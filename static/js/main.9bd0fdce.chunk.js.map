{"version":3,"sources":["images/raid-sprite.png","images/scroll.png","images/dragonwarrior.png","images/tron-logo.png","images/ss-spite.png","images/weapon-armor-sprite.png","images/minion-sprite.png","images/instance-sprite.png","images/pvp-sprite.png","images/battleground.png","images/blacksmith-sprite.png","images/alchemy-sprite.png","images/tailoring-sprite.png","images/engineering-sprite.png","images/soulstone.png","actions/app.js","components/customTheme.js","components/WalletAppBar.js","actions/constants.js","actions/snackbar.js","components/WalletSnackbar.js","utils/tron.js","components/PreSale.js","components/MyHeroes.js","components/MyAccount.js","components/Heroes.js","components/SoulStone.js","components/Items.js","components/PVE.js","components/PVP.js","components/Professions.js","components/RoutingScreen.js","components/App.js","serviceWorker.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","SET_SCREEN","SCREEN_PRE_SALE","SCREEN_MY_ACCOUNT","SCREEN_MY_HEROES","SCREEN_SOULSTONE","SCREEN_ALL_HEROES","SCREEN_ITEMS","SCREEN_PVP","SCREEN_PVE","SCREEN_PROFESSIONS","setScreen","screen","type","payload","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","action","important","warning","slider","trackSize","handleSize","WalletAppBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setActiveLanguage","code","getLanguageFlag","concat","home","myHeroes","showAllHeroes","showItems","showPVE","showPVP","showProfessions","showSoulStone","myAccount","state","languages","initialize","name","options","renderToStaticMarkup","addTranslation","siteTranslations","setState","_this2","react_default","a","createElement","AppBar_default","position","Toolbar_default","className","IconButton_default","color","onClick","aria-label","react_localize_redux_es","id","src","imgSS","alt","Tooltip_default","title","PermIdentity_default","map","lang","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","variant","snackbarOpen","snackbarMessage","snackbarVariant","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","onClose","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","core_IconButton_default","key","close","Close_default","hideSnackbar","open","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","tron","tronWeb","contract","setTronWeb","_setTronWeb","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","at","sent","stop","_x","apply","arguments","getGlobalData","_getGlobalData","_callee2","dividend","referral","_context2","getGlobalClaimedDividend","globalReferral","abrupt","toNumber","getPlayerData","_getPlayerData","_callee3","playerData","_context3","console","log","balanceOf","_balanceOf","_callee4","address","r","_context4","_x2","getPlayerCards","_getPlayerCards","_callee5","page","cards","_context5","_x3","claimDividend","_claimDividend","_callee6","data","_context6","send","feeLimit","callValue","shouldPollResponse","t0","purchase","_purchase","_callee8","amount","packType","referrer","that","_context8","Promise","_callee7","resolve","reject","price","packsNumber","payAmount","_context7","getBasePrice","getRarePrice","getEpicPrice","getLegendaryPrice","then","catch","err","_x7","_x8","_x4","_x5","_x6","AOS","init","once","mirror","PreSale","loadAssets","activeAccount","showAccounts","_ref2","event","currentTarget","isSending","isLoading","roll1","sendAmount","roll10","roll50","roll100","scrollCommon","scrollType","scrollRare","scrollEpic","scrollLegendary","purchaseScroll","_this$state","_this$props","Tron","game","params","tronWebState","installed","window","loggedIn","ready","tries","timer","setInterval","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","globalData","globalClaimedDividend","prevProps","reloadAccountNonce","sun","_this$state2","_this$state3","parseInt","btn1Class","btn10Class","btn50Class","btn100Class","scroll","btnCommonClass","btnRareClass","btnEpicClass","btnLegendaryClass","basePrice","buyText","cost","stoneNumber","core_styles","customTheme","Typography_default","Grid_default","container","item","xs","md","lg","sunToTrx","data-aos","data-aos-delay","data-aos-anchor","data-aos-anchor-placement","imgScroll","TextField_default","required","label","value","margin","placeholder","Button_default","size","disabled","imgDragonWarrior","React","MyHeroes","getPlayerCardsGroup","pages","promises","i","push","getPlayerCardsByPage","all","results","ids","protos","purities","length","result","j","heroes","e","_ref3","_ref4","loadCards","totalCardsCount","totalHeroes","loadCardsGroup","heroGroups","_ids","_protos","_purities","proto","purity","heroData","rarity","foundRarityIndex","foundHero","heroGroup","k","hero","_hero","newheroes","_heroGroup2","getHeroData","ra","bestPurity","bestId","count","Comparator","b","reOrderHeroGroups","sort","presetHeroes","getHeroSkills","skills","presetSkills","getAttackImage","image","getDefenceImage","getHealthImage","getHealingImage","getPlateCss","css","getSkillCss","getRarityClass","text","getRarityText","getRoleImage","role","img","purchases","lastUpdatedTime","heroTranslations","initTronWeb","addEventListener","refresh","_this3","heroGroupsReordered","heroName","heroImage","attackImage","defenceImage","healthImage","healingImage","s","heroCount","plateCss","skillBackgroundCss","roleImageSrc","rl","raritycla","rarityText","rarityClass","bgClass","boxCss","skillCss","sm","hl","d","he","skill","imageSrc","skillName","skillDesc","renderWalletInfo","MyAccount","loadPlayerData","stones","claimableDividend","claimedDividend","copyLink","_callee9","_context9","myReferralLink","InputLabelProps","root","cssLabel","InputProps","cssOutlinedInput","input","cssOutlinedInputReadOnly","notchedOutline","lib","onCopy","imgTron","renderPlayerData","width","padding","textShadow","borderColor","&$cssFocused $notchedOutline","AllHeroes","SoulStone","imgSSSprite","Items","imgArmor","imgMinion","PVE","imgInstance","imgRaid","PVP","imgPVP","imgBattleground","Professions","imgBlacksmith","imgAlchemy","imgTailoring","imgEngineering","app","components_PreSale","components_MyHeroes","Heroes","components_MyAccount","components_Items","components_SoulStone","components_PVE","components_PVP","components_Professions","App","initWallet","MuiThemeProvider_default","components_WalletAppBar","components_RoutingScreen","components_WalletSnackbar","Boolean","location","hostname","match","initialState","reducers","undefined","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","store","src_components_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2vWCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+hHCAlCC,EAAa,aAEbC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAa,aACbC,EAAqB,qBAedC,EAAY,SAAAC,GAAM,MAAK,CAClCC,KAAMZ,EACNa,QAAS,CACPF,oBC1BWG,2BAAe,CAC5BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBE,OAAQ,CACNL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBG,UAAW,CACTN,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBI,QAAS,CACPP,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBK,OAAQ,CAAEC,UAAW,GAAIC,WAAY,wHCEnCC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA6BTQ,kBAAoB,SAACC,GAClBR,EAAKD,MAAMQ,kBAAkBC,IA/BZR,EAkCnBS,gBAAkB,SAACD,GACjB,0BAAAE,OAA2BF,EAA3B,SAnCiBR,EAsCnBW,KAAO,YAELjC,EADsBsB,EAAKD,MAAnBrB,WACET,IAxCO+B,EA2CnBY,SAAW,YAETlC,EADsBsB,EAAKD,MAAnBrB,WACEP,IA7CO6B,EAgDnBa,cAAgB,YAEdnC,EADsBsB,EAAKD,MAAnBrB,WACEL,IAlDO2B,EAqDnBc,UAAY,YAEVpC,EADsBsB,EAAKD,MAAnBrB,WACEJ,IAvDO0B,EA0DnBe,QAAU,YAERrC,EADsBsB,EAAKD,MAAnBrB,WACEF,IA5DOwB,EA8DnBgB,QAAU,YAERtC,EADsBsB,EAAKD,MAAnBrB,WACEH,IAhEOyB,EAmEnBiB,gBAAkB,YAEhBvC,EADsBsB,EAAKD,MAAnBrB,WACED,IArEOuB,EAwEnBkB,cAAgB,YAEdxC,EADsBsB,EAAKD,MAAnBrB,WACEN,IA1EO4B,EA6EnBmB,UAAY,YAEVzC,EADsBsB,EAAKD,MAAnBrB,WACER,IA7EV8B,EAAKoB,MAAQ,CACXC,UAAU,IAGZrB,EAAKD,MAAMuB,WAAW,CACpBD,UAAW,CACT,CAAEE,KAAM,UAAWf,KAAM,MACzB,CAAEe,KAAM,eAAMf,KAAM,OAEtBgB,QAAS,CAAEC,+CAGbzB,EAAKD,MAAM2B,eAAeC,GAdT3B,iMAqBdqB,EAAW,CACV,CAAEE,KAAM,UAAWf,KAAM,MACzB,CAAEe,KAAM,eAAMf,KAAM,OAExBL,KAAKyB,SAAS,CAACP,iJAyDR,IAAAQ,EAAA1B,KAEAkB,EAAalB,KAAKiB,MAAlBC,UACP,OACES,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,SAAS,UACfJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKQ,KACd6B,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,yBAG/CZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKe,cACdsB,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAwBN,EAAAC,EAAAC,cAAA,OAC9BW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,kBACVN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAG1BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKU,cACd2B,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,wBAAuBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAEvDZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKW,UACd0B,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAwBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBAExDZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKY,QACdyB,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAwBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAExDZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKa,QACdwB,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAwBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAGxDZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKc,gBACduB,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,yBAEzBZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAwBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,2BAI1DZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,MAAMjB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAC3BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKS,SACd4B,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAEzBZ,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAcK,UAAU,gCACxBN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAhB,IAAyCN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAI3DZ,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,MAAMjB,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAC3BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAM,UACNC,QAASpC,KAAKgB,UACdqB,aAAWV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAEzBZ,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAcK,UAAU,gCACxBN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,yBAAhB,IAAyCN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,yBAKxDrB,EAAU4B,IAAI,SAAAC,GAAI,OAEjBpB,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,MAAOG,EAAK3B,MACnBO,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEW,GAAIQ,EAAK1C,KACT8B,MAAM,UACNC,QAAS,kBAAMV,EAAKtB,kBAAkB2C,EAAK1C,QAE3CsB,EAAAC,EAAAC,cAAA,OAAKW,IAAKd,EAAKpB,gBAAgByC,EAAK1C,MAAO4B,UAAU,8BArLhDe,aAsMrBC,EAAqB,CACzB1E,aAGa2E,cACb,KACAD,EAFaC,CAGbC,YAAaxD,iQCpPFyD,GAAc,cCEdC,GAAgB,gBAChBC,GAAgB,gBAEhBC,GAAe,SAACC,EAASC,GAAV,MAAuB,CACjDhF,KAAM4E,GACN3E,QAAS,CACPgF,cAAc,EACdC,gBAAiBH,EACjBI,gBAAiBH,KCafI,GAAc,CAClBC,QAASC,IACTxE,QAASyE,KACTC,MAAOC,KACPC,KAAMC,MA0DR,IAAMC,GAA2BC,KAvDlB,SAAAC,GAAK,MAAK,CACvBT,QAAS,CACPU,gBAAiBC,KAAM,MAEzBR,MAAO,CACLO,gBAAiBD,EAAMzF,QAAQmF,MAAM/E,MAEvCiF,KAAM,CACJK,gBAAiB,WAEnBjF,QAAS,CACPiF,gBAAiBE,KAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaR,EAAMS,QAAQC,MAE7BzB,QAAS,CACP0B,QAAS,OACTC,WAAY,YAiCiBb,CA7BjC,SAA2B1E,GAAO,IACxBwF,EAA4DxF,EAA5DwF,QAASnD,EAAmDrC,EAAnDqC,UAAWuB,EAAwC5D,EAAxC4D,QAAS6B,EAA+BzF,EAA/ByF,QAAS5B,EAAsB7D,EAAtB6D,QAAY6B,EAD1BxF,OAAAyF,EAAA,EAAAzF,CACoCF,EADpC,uDAE1B4F,EAAO3B,GAAYJ,GAEzB,OACE9B,EAAAC,EAAAC,cAAC4D,GAAA7D,EAAD9B,OAAA4F,OAAA,CACEzD,UAAW0D,IAAWP,EAAQ3B,GAAUxB,GACxCuB,QACE7B,EAAAC,EAAAC,cAAA,QAAMU,GAAG,kBAAkBN,UAAWmD,EAAQ5B,SAC5C7B,EAAAC,EAAAC,cAAC2D,EAAD,CAAMvD,UAAW0D,IAAWP,EAAQT,KAAMS,EAAQP,eACjDrB,GAGLnE,OAAQ,CACNsC,EAAAC,EAAAC,cAAC+D,GAAAhE,EAAD,CACEiE,IAAI,QACJxD,aAAW,QACXF,MAAM,UACNF,UAAWmD,EAAQU,MACnB1D,QAASiD,GAET1D,EAAAC,EAAAC,cAACkE,GAAAnE,EAAD,CAAWK,UAAWmD,EAAQT,UAG9BW,MAkCJrC,GAAqB,CACzB+C,aDrG0B,iBAAO,CACjCvH,KAAM6E,GACN5E,QAAS,CACPgF,cAAc,EACdC,gBAAiB,OCoGNT,eAVS,SAAAjC,GAAK,MAAK,CAChCgF,KAAMhF,EAAMiF,SAASxC,aACrBF,QAASvC,EAAMiF,SAASvC,gBACxBC,gBAAiB3C,EAAMiF,SAAStC,iBA1FL,SAmG3BX,GAFaC,CA/BQ,SAAAiD,GAAA,IAAGF,EAAHE,EAAGF,KAAMzC,EAAT2C,EAAS3C,QAASI,EAAlBuC,EAAkBvC,gBAAiBoC,EAAnCG,EAAmCH,aAAnC,OACrBrE,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,CACEyE,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdN,KAAMA,EACNO,iBAAkB,IAClBnB,QAASW,EACTS,aAAc,CACZC,mBAAoB,eAGtB/E,EAAAC,EAAAC,cAACwC,GAAD,CACEZ,QAASG,EACTJ,QAASA,EACT6B,QAASW,gLC0GAW,GA7MF,CACXC,SAAS,EACTC,UAAU,EAEJC,WAJK,eAAAC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAAC,EAIMP,GAJN,OAAAK,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAKTvH,KAAK4G,QAAUA,EALNS,EAAAE,KAAA,EAMaX,EAAQC,WAAWW,GAVrB,8CAIX,OAMTxH,KAAK6G,SANIQ,EAAAI,KAAA,wBAAAJ,EAAAK,SAAAP,EAAAnH,SAAA,gBAAA2H,GAAA,OAAAZ,EAAAa,MAAA5H,KAAA6H,YAAA,GASLC,cATK,eAAAC,EAAAjI,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAAc,IAAA,IAAAC,EAAAC,EAAA,OAAAjB,EAAArF,EAAAwF,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAUYvH,KAAK6G,SAASuB,2BAA2BjI,OAVrD,cAUL8H,EAVKE,EAAAV,KAAAU,EAAAZ,KAAA,EAWYvH,KAAK6G,SAASwB,iBAAiBlI,OAX3C,cAWL+H,EAXKC,EAAAV,KAAAU,EAAAG,OAAA,SAaF,CAACL,EAASM,WAAYL,EAASK,aAb7B,wBAAAJ,EAAAT,SAAAM,EAAAhI,SAAA,yBAAA+H,EAAAH,MAAA5H,KAAA6H,YAAA,GAgBLW,cAhBK,eAAAC,EAAA3I,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAAwB,IAAA,IAAAC,EAAA,OAAA1B,EAAArF,EAAAwF,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAiBcvH,KAAK6G,SAAS2B,gBAAgBrI,OAjB5C,cAiBLwI,EAjBKC,EAAAnB,KAkBToB,QAAQC,IAAIH,GAlBHC,EAAAN,OAAA,SAoBF,CACLK,EAAW,GAAGJ,WACdI,EAAW,GAAGJ,WACdI,EAAW,GAAGJ,WACdI,EAAW,GAAGJ,aAxBP,wBAAAK,EAAAlB,SAAAgB,EAAA1I,SAAA,yBAAAyI,EAAAb,MAAA5H,KAAA6H,YAAA,GAkCLkB,UAlCK,eAAAC,EAAAlJ,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAA+B,EAkCKC,GAlCL,IAAAC,EAAA,OAAAlC,EAAArF,EAAAwF,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAmCOvH,KAAK6G,SAASkC,UAAUG,GAAS/I,OAnCxC,cAmCHgJ,EAnCGC,EAAA3B,KAAA2B,EAAAd,OAAA,SAqCFa,GArCE,wBAAAC,EAAA1B,SAAAuB,EAAAjJ,SAAA,gBAAAqJ,GAAA,OAAAL,EAAApB,MAAA5H,KAAA6H,YAAA,GA8CLyB,eA9CK,eAAAC,EAAAzJ,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAAsC,EA8CUC,GA9CV,IAAAC,EAAA,OAAAzC,EAAArF,EAAAwF,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EA+CSvH,KAAK6G,SAASyC,eAAeG,GAAMtJ,OA/C5C,cA+CLuJ,EA/CKC,EAAAlC,KAAAkC,EAAArB,OAAA,SAiDFoB,GAjDE,wBAAAC,EAAAjC,SAAA8B,EAAAxJ,SAAA,gBAAA4J,GAAA,OAAAL,EAAA3B,MAAA5H,KAAA6H,YAAA,GA0DLgC,cA1DK,eAAAC,EAAAhK,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAA6C,IAAA,IAAAC,EAAA,OAAA/C,EAAArF,EAAAwF,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cA2DS,EA3DT0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EA6DYvH,KAAK6G,SAASgD,gBAAgBK,KAAK,CACpDC,SAhES,IAiETC,UAJc,EAKdC,oBAAoB,IAhEf,OA6DDL,EA7DCC,EAAAxC,KAkEPoB,QAAQC,IAAIkB,GAlELC,EAAA1C,KAAA,gBAAA0C,EAAA3C,KAAA,EAAA2C,EAAAK,GAAAL,EAAA,SAoEPpB,QAAQ5E,MAARgG,EAAAK,IApEO,yBAAAL,EAAAvC,SAAAqC,EAAA/J,KAAA,qCAAA8J,EAAAlC,MAAA5H,KAAA6H,YAAA,GAwEL0C,SAxEK,eAAAC,EAAA1K,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAA,SAAAuD,EAwEIC,EAAQC,EAAUC,GAxEtB,IAAAC,EAAA,OAAA5D,EAAArF,EAAAwF,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cA0ELsD,EAAO7K,KA1EF8K,EAAAxC,OAAA,SA4EF,IAAIyC,QAAJ,eAAA5E,EAAArG,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAA8D,EAAeC,EAASC,GAAxB,IAAAC,EAAAC,EAAAC,EAAA,OAAApE,EAAArF,EAAAwF,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,UAEb4D,EAAQ,EAEG,GAAZR,EAJc,CAAAW,EAAA/D,KAAA,eAAA+D,EAAA/D,KAAA,EAMDsD,EAAKhE,SAAS0E,eAAepL,OAN5B,OAMfgL,EANeG,EAAA7D,KAAA6D,EAAA/D,KAAA,mBAOI,GAAZoD,EAPQ,CAAAW,EAAA/D,KAAA,gBAAA+D,EAAA/D,KAAA,GASDsD,EAAKhE,SAAS2E,eAAerL,OAT5B,QASfgL,EATeG,EAAA7D,KAAA6D,EAAA/D,KAAA,oBAUI,GAAZoD,EAVQ,CAAAW,EAAA/D,KAAA,gBAAA+D,EAAA/D,KAAA,GAYDsD,EAAKhE,SAAS4E,eAAetL,OAZ5B,QAYfgL,EAZeG,EAAA7D,KAAA6D,EAAA/D,KAAA,oBAaI,GAAZoD,EAbQ,CAAAW,EAAA/D,KAAA,gBAAA+D,EAAA/D,KAAA,GAeDsD,EAAKhE,SAAS6E,oBAAoBvL,OAfjC,QAefgL,EAfeG,EAAA7D,KAAA,eAmBX2D,EAAcV,EACdW,EAAYF,EAAM5C,WAAa6C,EApBpBE,EAAAhE,KAAA,GAAAgE,EAAA/D,KAAA,GAsBIsD,EAAKhE,SACrB0D,SAASa,EAAaT,EAAUC,GAChCV,KAAK,CACJC,SAvGK,IAwGLC,UAAWiB,EACXhB,oBAAoB,IACnBsB,KAAK,SAAS3B,GACfiB,EAAQjB,KACP4B,MAAM,SAASC,GAChBhD,QAAQC,IAAI+C,GACZX,EAAO,mBAhCI,QAAAI,EAAA7D,KAAA6D,EAAA/D,KAAA,iBAAA+D,EAAAhE,KAAA,GAAAgE,EAAAhB,GAAAgB,EAAA,UAmCfJ,EAAMI,EAAAhB,IAnCS,yBAAAgB,EAAA5D,SAAAsD,EAAAhL,KAAA,cAAZ,gBAAA8L,EAAAC,GAAA,OAAA5F,EAAAyB,MAAA5H,KAAA6H,YAAA,KA5EE,wBAAAiD,EAAApD,SAAA+C,EAAAzK,SAAA,gBAAAgM,EAAAC,EAAAC,GAAA,OAAA1B,EAAA5C,MAAA5H,KAAA6H,YAAA,IC0BbsE,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJC,eACJ,SAAAA,EAAY3M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuM,IACjB1M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyM,GAAApM,KAAAH,KAAMJ,KAiGR4M,WAlGmB,eAAArG,EAAArG,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAkGN,SAAAC,EAAMsF,GAAN,OAAAxF,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAK,SAAAP,EAAAnH,SAlGM,gBAAA2H,GAAA,OAAAxB,EAAAyB,MAAA5H,KAAA6H,YAAA,GAAAhI,EA+GnB6M,aA/GmB,eAAAC,EAAA7M,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA+GJ,SAAAc,EAAM4E,GAAN,OAAA3F,EAAArF,EAAAwF,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,QACLmF,EAAiB7M,EAAKD,MAAtB8M,cACKE,EAAMC,eAFN,wBAAA1E,EAAAT,SAAAM,EAAAhI,SA/GI,gBAAAqJ,GAAA,OAAAsD,EAAA/E,MAAA5H,KAAA6H,YAAA,GAAAhI,EAoHnBiN,UAAY,WAEV,QADsBjN,EAAKoB,MAAnB8L,WArHSlN,EAyHnBmN,MAAQ,WACNnN,EAAK4B,SAAS,CAAEwL,WAAY,OA1HXpN,EA4HnBqN,OAAS,WACPrN,EAAK4B,SAAS,CAAEwL,WAAY,QA7HXpN,EA+HnBsN,OAAS,WACPtN,EAAK4B,SAAS,CAAEwL,WAAY,QAhIXpN,EAkInBuN,QAAU,WACRvN,EAAK4B,SAAS,CAAEwL,WAAY,SAnIXpN,EAsInBwN,aAAe,WACbxN,EAAK4B,SAAS,CAAE6L,WAAY,OAvIXzN,EAyInB0N,WAAa,WACX1N,EAAK4B,SAAS,CAAE6L,WAAY,OA1IXzN,EA4InB2N,WAAa,WACX3N,EAAK4B,SAAS,CAAE6L,WAAY,OA7IXzN,EA+InB4N,gBAAkB,WAChB5N,EAAK4B,SAAS,CAAE6L,WAAY,OAhJXzN,EA0JnB6N,eA1JmB5N,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA0JF,SAAAwB,IAAA,IAAAiF,EAAAV,EAAAK,EAAAM,EAAArP,EAAAgF,EAAA,OAAA0D,EAAArF,EAAAwF,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAoG,EACmB9N,EAAKoB,MAA/BgM,EADOU,EACPV,WAAWK,EADJK,EACIL,WADJM,EAEqB/N,EAAKD,MAAjCrB,EAFOqP,EAEPrP,UAAWgF,EAFJqK,EAEIrK,aAFJqF,EAAArB,KAAA,EAGTsG,GAAKtD,SAAS0C,EAAYK,EAAY,sCACzC3B,KAAK,SAAS3B,GACbzG,EAAa,sBACbhF,EAAUP,KAEX4N,MAAM,SAASC,GACdhD,QAAQC,IAAI+C,GACZtI,EAAasI,KAVF,wBAAAjD,EAAAlB,SAAAgB,EAAA1I,SAvJfH,EAAKoB,MAAQ,CACX2F,QAAS,KACTkH,KAAM,EACNb,WAAY,IACZK,WAAY,IACZP,WAAW,GAEblN,EAAKD,MAAM2B,eAAeC,GAVT3B,iNAeTkO,EAAW/N,KAAKJ,MAAhBmO,OAERlF,QAAQC,IAAI,SAASiF,YAIf,IAAIhD,QAAQ,SAAAE,GAChB,IAAM+C,EAAe,CACnBC,YAAaC,OAAOtH,QACpBuH,SAAUD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAG7C,GAAIJ,EAAaC,UAKf,OAJAvM,EAAKD,SAAS,CACZmF,QAASoH,IAGJ/C,IAGT,IAAIoD,EAAQ,EAENC,EAAQC,YAAY,WACxB,GAAIF,GAAS,GAAI,CACf,IAAMG,EAAe,iCAgBrB,OAdAN,OAAOtH,QAAU,IAAI6H,KACnBD,EACAA,EACAA,GAGF9M,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,KAIdO,cAAcJ,GACPrD,IAMT,GAHA+C,EAAaC,YAAcC,OAAOtH,QAClCoH,EAAaG,SAAWD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAEpDJ,EAAaC,UAAW,OAAOI,IAEpC3M,EAAKD,SAAS,CACZmF,QAASoH,IAGX/C,KACC,qBAGAjL,KAAKiB,MAAM2F,QAAQuH,WAItBD,OAAOtH,QAAQ+H,eAAiB,CAC9BC,IAAKV,OAAOtH,QAAQsC,QAAQ2F,MApFT,sCAqFnBC,OArFmB,sCAwFrBZ,OAAOtH,QAAQmI,GAAG,iBAAkB,WAC9BrN,EAAKT,MAAM2F,QAAQuH,UAEvBzM,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,iBAMZN,GAAK/G,WAAWoH,OAAOtH,gCACJiH,GAAK/F,uBAAxBkH,SACNhP,KAAKyB,SAAS,CAAEwN,sBAAuBD,EAAW,KAClDhP,KAAKyB,SAAS,CAAE4G,eAAgB2G,EAAW,mJAK1BE,GAGdlP,KAAKJ,MAAM6M,gBAAkByC,EAAUzC,eACtCzM,KAAKJ,MAAMuP,qBAAuBD,EAAUC,qBAC9CnP,KAAKJ,MAAM6M,eAEXzM,KAAKwM,WAAWxM,KAAKJ,MAAM6M,gDAwCtB2C,GACP,OAAKA,EAGEA,EAAM,IAFJ,oCAqBF,IAAAC,EAC2CrP,KAAKiB,MAA/CgO,EADDI,EACCJ,sBAAuB5G,EADxBgH,EACwBhH,eADxBiH,EAG4BtP,KAAKiB,MAAhCgM,EAHDqC,EAGCrC,WAAYK,EAHbgC,EAGahC,WAOd5C,EAAS6E,SAAStC,EAAY,IAChCuC,EAAuB,IAAX9E,EAAe,2BAA6B,iBACxD+E,EACS,KAAX/E,EAAgB,2BAA6B,iBAC3CgF,EACS,KAAXhF,EAAgB,2BAA6B,iBAC3CiF,EACS,MAAXjF,EAAiB,2BAA6B,iBAE1CkF,EAASL,SAASjC,EAAY,IAChCuC,EAA4B,IAAXD,EAAe,4BAA8B,iBAC9DE,EACS,IAAXF,EAAe,2BAA6B,iBAC1CG,EACS,IAAXH,EAAe,2BAA6B,iBAC1CI,EACS,IAAXJ,EAAe,2BAA6B,iBAC1CK,EAAY,GAEZC,EAAU,uBACD,GAAVN,GAEDM,EAAU,uBACVD,EAAY,IACK,GAAVL,GAEPM,EAAU,qBACVD,EAAY,KACK,GAAVL,GAEPM,EAAU,qBACVD,EAAY,KACK,GAAVL,IAEPM,EAAU,0BACVD,EAAY,KAGf,IAAIE,EAAOlD,EAAagD,EACpBG,EAAcD,EArBA,GAuBjB,OACExO,EAAAC,EAAAC,cAACwO,EAAA,iBAAD,CAAkB9L,MAAO+L,GACvB3O,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKM,MAAM,UAAUF,UAAU,kBAC7BN,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,aAE7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAqBM,GAAG,kBACtCZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAEhBZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAGlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAAhB,MAAqD,IACrDN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,yBAFhB,IAE2C,IAF3C,IAEgDZ,EAAAC,EAAAC,cAAA,OAC1CW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,oBAEdN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAP/C,IAO8E,IAC5EZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBARhB,IAQwC,IAEtCZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAVhB,IAUyCZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAhB,OAVzC,IAUkFN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAKpGZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,4BADhB,IAC8C,IAC5CZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbjC,KAAK8Q,SAAS7B,GADjB,SAIFtN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,4BADhB,IAC8C,IAC5CZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbjC,KAAK8Q,SAASzI,GADjB,WAON1G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfC,kBAAgB,iBAChBC,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAK2O,KACLzO,IAAI,WACJT,UAAU,mCAIhBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbkO,EADH,OACa,MAGfxO,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAEfN,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI2N,KAEpBvO,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBACdZ,EAAAC,EAAAC,cAAA,OACEW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,mBAEZN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,IACImO,EADJ,IACiBzO,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAGjCZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAACuP,GAAAxP,EAAD,CACEyP,UAAQ,EACRjQ,KAAK,aACLkQ,MAAM,aACNrP,UAAU,aACVsP,MAAOtE,EACPuE,OAAO,SACP/S,KAAK,SACLgT,YAAY,SAEd9P,EAAAC,EAAAC,cAACuP,GAAAxP,EAAD,CACEyP,UAAQ,EACRjQ,KAAK,aACLkQ,MAAM,GACNrP,UAAU,aACVsP,MAAOjE,EACPkE,OAAO,SACP/S,KAAK,SACLgT,YAAY,UAGhB9P,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEK,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKqN,cAEd1L,EAAAC,EAAAC,cAAA,QAAMI,UAAW4N,GAAgBlO,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAEjDZ,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEK,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKuN,YAEd5L,EAAAC,EAAAC,cAAA,QAAMI,UAAW6N,GAAcnO,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAE/CZ,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEK,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKwN,YAEd7L,EAAAC,EAAAC,cAAA,QAAMI,UAAW8N,GAAcpO,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAG/CZ,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEK,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKyN,iBAEd9L,EAAAC,EAAAC,cAAA,QAAMI,UAAW+N,GAAmBrO,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAIxDZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,kBACHN,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKgN,OAEdrL,EAAAC,EAAAC,cAAA,QAAMI,UAAWuN,GAAjB,MAEF7N,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,iBACHN,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKkN,QAEdvL,EAAAC,EAAAC,cAAA,QAAMI,UAAWwN,GAAjB,OAEF9N,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,iBACHN,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKmN,QAEdxL,EAAAC,EAAAC,cAAA,QAAMI,UAAWyN,GAAjB,OAGF/N,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,kBACHN,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,UACNC,QAASpC,KAAKoN,SAEdzL,EAAAC,EAAAC,cAAA,QAAMI,UAAW0N,GAAjB,UAKNhO,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,oBACHN,UAAU,eACVwB,QAAQ,YACRtB,MAAM,YACNwP,KAAK,QACLvP,QAASpC,KAAK0N,eACdkE,SAAU5R,KAAK8M,aAEfnL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,6BAQ5BZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBAAiBM,GAAG,iBACjCZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,yBAGlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAFlB,IAEiDZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAF/D,KAIAZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBADhB,KAGAZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAAoB,IAClCZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBACR,IACRZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBALhB,KAOAZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,0BAAyBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAK3DZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfC,kBAAgB,gBAChBC,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAKqP,KACLnP,IAAI,qBACJT,UAAU,wBAS1BN,EAAAC,EAAAC,cAAA,oBA1eciQ,IAAM9O,WAgftBC,GAAqB,CACzBM,gBACAhF,aAOa2E,eACb,KACAD,GAFaC,CAGbC,YAAaoJ,gCC1gBfJ,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,IAGV,IAEMyF,eACJ,SAAAA,EAAYnS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+R,IACjBlS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiS,GAAA5R,KAAAH,KAAMJ,KAkGRoS,oBAnGmB,eAAA7L,EAAArG,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAmGG,SAAAc,EAAMiK,GAAN,OAAAhL,EAAArF,EAAAwF,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAG,OAAA,SACb,IAAIyC,QAAJ,eAAA4B,EAAA7M,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAAC,EAAM8D,GAAN,IAAAiH,EAAAC,EAAA,OAAAlL,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGjB,IAFI2K,EAAW,GAENC,EAAI,EAAGA,EAAIF,IAASE,EAC3BD,EAASE,KAAKvS,EAAKwS,qBAAqBF,IAG1CpH,QAAQuH,IAAIJ,GACTvG,KAAK,SAAA4G,GACJ1J,QAAQC,IAAIyJ,GAMZ,IAJA,IAAIC,EAAM,GACNC,EAAS,GACTC,EAAW,GAENP,EAAI,EAAGA,EAAII,EAAQI,OAAQR,IAAK,CAEvC,IADA,IAAIS,EAASL,EAAQJ,GACZU,EAAI,EAAGA,EAAID,EAAOJ,IAAIG,OAAQE,IACrCL,EAAIJ,KAAKQ,EAAOJ,IAAIK,IAEtB,IAAK,IAAIA,EAAI,EAAGA,EAAID,EAAOH,OAAOE,OAAQE,IACxCJ,EAAOL,KAAKQ,EAAOH,OAAOI,IAE5B,IAAK,IAAIA,EAAI,EAAGA,EAAID,EAAOF,SAASC,OAAQE,IAC1CH,EAASN,KAAKQ,EAAOF,SAASG,IAIlC,IAAMC,EAAS,CACbN,IAAKA,EACLC,OAAQA,EACRC,SAAUA,GAGZ7S,EAAK4B,SAAS,CAAEqR,WAEhB7H,GAAQ,KAETW,MAAM,SAAAmH,GACL9H,GAAQ,KAvCK,wBAAA5D,EAAAK,SAAAP,EAAAnH,SAAZ,gBAAAqJ,GAAA,OAAAsD,EAAA/E,MAAA5H,KAAA6H,YAAA,KADa,wBAAAM,EAAAT,SAAAM,EAAAhI,SAnGH,gBAAA2H,GAAA,OAAAxB,EAAAyB,MAAA5H,KAAA6H,YAAA,GAAAhI,EAgJnBwS,qBAhJmB,eAAAW,EAAAlT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAgJI,SAAA+B,EAAMQ,GAAN,OAAAxC,EAAArF,EAAAwF,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAd,OAAA,SACd,IAAIyC,QAAJ,eAAAkI,EAAAnT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAAwB,EAAMuC,GAAN,IAAAvB,EAAA,OAAAzC,EAAArF,EAAAwF,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACGsG,GAAKvE,eAAeG,GADvB,OACXC,EADWd,EAAAnB,KAEjBwD,EAAQvB,GAFS,wBAAAd,EAAAlB,SAAAgB,EAAA1I,SAAZ,gBAAAgM,GAAA,OAAAiH,EAAArL,MAAA5H,KAAA6H,YAAA,KADc,wBAAAuB,EAAA1B,SAAAuB,EAAAjJ,SAhJJ,gBAAA4J,GAAA,OAAAoJ,EAAApL,MAAA5H,KAAA6H,YAAA,GAAAhI,EAuJnBqT,UAvJmBpT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAuJP,SAAAsC,IAAA,IAAA2J,EAAAlB,EAAA,OAAAhL,EAAArF,EAAAwF,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACoBsG,GAAK9E,UACjCmF,OAAOtH,QAAQ+H,eAAeG,QAFtB,cACJqE,EADIxJ,EAAAlC,KAKV5H,EAAK4B,SAAS,CAAE2R,YAAaD,EAAgB5K,aAIjC,KAFR0J,EAAQkB,EAAgB5K,WAAa,KAEvB4K,IAChBlB,GAAS,GAEXpJ,QAAQC,IAAI,SAAWmJ,GAZbtI,EAAApC,KAAA,EAcJ1H,EAAKmS,oBAAoBC,GAdrB,wBAAAtI,EAAAjC,SAAA8B,EAAAxJ,SAvJOH,EAwKnBwT,eAxKmBvT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAwKF,SAAA6C,IAAA,IAAA+I,EAAApJ,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAtB,EAAA5P,EAAAmR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlB,EAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApN,EAAArF,EAAAwF,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAMf,GALQuL,EAAWjT,EAAKoB,MAAhB6R,OAEJpJ,EAAQoJ,EAENQ,EAAezT,EAAKoB,MAApBqS,WACF5J,IACI8I,EAAM9I,EAAM8I,IACZC,EAAS/I,EAAM+I,OACfC,EAAWhJ,EAAMgJ,SACpBF,GAEH,IAASL,EAAI,EAAGA,EAAIK,EAAIG,OAAQR,IAAK,CAUnC,IATI5P,EAAKiQ,EAAIL,GAAG5J,WACZmL,EAAQjB,EAAON,GACfwB,EAASjB,EAASP,GAEhByB,EAAW/T,EAAKyU,YAAYZ,GAC5BG,EAASD,EAASW,GAEpBT,GAAoB,EACpBC,GAAY,EACPlB,EAAI,EAAGA,EAAIS,EAAWX,OAAQE,IAErC,IADImB,EAAYV,EAAWT,IACbgB,SAAWA,IAEvBC,EAAmBjB,EACfmB,EAAUlB,QACZ,IAASmB,EAAI,EAAGA,EAAID,EAAUlB,OAAOH,OAAQsB,KACvCC,EAAOF,EAAUlB,OAAOmB,IAEnBP,QAAUA,IAEjBK,GAAY,EAERG,EAAKM,WAAab,IACpBO,EAAKM,WAAab,EAClBO,EAAKO,OAASlS,GAGhB2R,EAAKQ,OAAS,GAOnBX,IAEGG,EAAO,CACXR,MAAOA,EACPc,WAAYb,EACZc,OAAQlS,EACRmS,MAAO,GAGLZ,GAAoB,EAEJR,EAAWQ,GACnBhB,OAAOV,KAAK8B,KAEhBE,EAAY,IACRhC,KAAK8B,GAETF,EAAY,CAChBH,OAAQA,EACRf,OAAQsB,GAEVd,EAAWlB,KAAK4B,KAQxBnU,EAAK4B,SAAS,CAAE6R,eA5ED,wBAAArJ,EAAAvC,SAAAqC,EAAA/J,SAxKEH,EAuPnB8U,WAAa,SAAC/S,EAAGgT,GACf,OAAIhT,EAAEiS,OAASe,EAAEf,OAAe,EAC5BjS,EAAEiS,OAASe,EAAEf,QAAgB,EAC1B,GA1PUhU,EA6PnBgV,kBAAoB,SAAAvB,GAClB,OAAOA,EAAWwB,KAAKjV,EAAK8U,aA9PX9U,EAiQnByU,YAAc,SAAA/R,GACZ,IAAK,IAAI4P,EAAI,EAAGA,EAAI4C,GAAapC,OAAQR,IACvC,GAAI4C,GAAa5C,GAAG5P,KAAOA,EACzB,OAAOwS,GAAa5C,GAGxB,OAAO,MAvQUtS,EA0QnBmV,cAAgB,SAAAxC,GACd,IAAIyC,EAAS,GACb,GAAIzC,EACF,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAIG,OAAQR,IAG9B,IAFA,IAAI5P,EAAKiQ,EAAIL,GAEJU,EAAI,EAAGA,EAAIqC,GAAavC,OAAQE,IACnCqC,GAAarC,GAAGtQ,KAAOA,GACzB0S,EAAO7C,KAAK8C,GAAarC,IAMjC,OAAOoC,GAxRUpV,EA2RnBsV,eAAiB,SAAAtB,GACf,IAAIuB,EAAQ,gCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,kCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,QACEA,EAAQ,gCAIZ,OAAOA,GAlTUvV,EAqTnBwV,gBAAkB,SAAAxB,GAChB,IAAIuB,EAAQ,iCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,gCACR,MACF,KAAK,EACHA,EAAQ,8BACR,MACF,KAAK,EACHA,EAAQ,8BACR,MACF,KAAK,EACHA,EAAQ,mCACR,MACF,KAAK,EACHA,EAAQ,gCACR,MACF,QACEA,EAAQ,iCAIZ,OAAOA,GA5UUvV,EA+UnByV,eAAiB,SAAAzB,GACfhL,QAAQC,IAAI+K,GAEZ,IAAIuB,EAAQ,gCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,kCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,QACEA,EAAQ,gCAIZ,OAAOA,GAxWUvV,EA0WnB0V,gBAAkB,SAAA1B,GAChB,IAAIuB,EAAQ,kCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,iCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,oCACR,MACF,KAAK,EACHA,EAAQ,iCACR,MACF,QACEA,EAAQ,kCAIZ,OAAOA,GAjYUvV,EAoYnB2V,YAAc,SAAA3B,GACZ,IAAI4B,EAAM,eACV,OAAQ5B,GACN,KAAK,EACH4B,EAAM,cACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,YACN,MACF,QACEA,EAAM,eAIV,OAAOA,GA3ZU5V,EA8ZnB6V,YAAc,SAAA7B,GACZ,IAAI4B,EAAM,eACV,OAAQ5B,GACN,KAAK,EACH4B,EAAM,cACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,YACN,MACF,QACEA,EAAM,eAIV,OAAOA,GArbU5V,EAwbnB8V,eAAiB,SAAA9B,GACf,IAAI+B,EAAO,SACX,OAAQ/B,GACN,KAAK,EACH+B,EAAO,SACP,MACF,KAAK,EACHA,EAAO,OACP,MACF,KAAK,EACHA,EAAO,OACP,MACF,KAAK,EACHA,EAAO,YACP,MACF,KAAK,EACHA,EAAO,SACP,MACF,KAAK,EACHA,EAAO,UACP,MACF,QACEA,EAAO,SAIX,OAAOA,GAldU/V,EAodnBgW,cAAgB,SAAAhC,GACd,IAAI+B,EAAO,iBACX,OAAQ/B,GACN,KAAK,EACH+B,EAAO,iBACP,MACF,KAAK,EACHA,EAAO,eACP,MACF,KAAK,EACHA,EAAO,eACP,MACF,KAAK,EACHA,EAAO,oBACP,MACF,KAAK,EACHA,EAAO,iBACP,MACF,KAAK,EACHA,EAAO,kBACP,MACF,QACEA,EAAO,iBAIX,OAAOA,GA9eU/V,EAifnBiW,aAAe,SAAAC,GACb,IAAIC,EAAM,yBACV,OAAQD,GACN,KAAK,EACHC,EAAM,uBACN,MACF,KAAK,EACHA,EAAM,yBACN,MACF,KAAK,EACHA,EAAM,yBACN,MACF,QACEA,EAAM,yBAIV,OAAOA,GA/fPnW,EAAKoB,MAAQ,CACXgV,UAAW,KACX7C,YAAa,EACbN,OAAQ,GACRpJ,MAAO,GACP4J,WAAY,GACZ4C,gBAAiB,MAEnBrW,EAAKD,MAAM2B,eAAeC,GAC1B3B,EAAKD,MAAM2B,eAAe4U,IAZTtW,2MAgBXG,KAAKoW,qCACLpW,KAAKkT,mCACLlT,KAAKqT,wBACXnF,OAAOmI,iBAAiB,OAAQlK,KAAImK,oRAM9B,IAAIvL,QAAQ,SAAAE,GAChB,IAAM+C,EAAe,CACnBC,YAAaC,OAAOtH,QACpBuH,SAAUD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAG7C,GAAIJ,EAAaC,UAKf,OAJAvM,EAAKD,SAAS,CACZmF,QAASoH,IAGJ/C,IAGT,IAAIoD,EAAQ,EAENC,EAAQC,YAAY,WACxB,GAAIF,GAAS,GAAI,CACf,IAAMG,EAAe,iCAgBrB,OAdAN,OAAOtH,QAAU,IAAI6H,KACnBD,EACAA,EACAA,GAGF9M,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,KAIdO,cAAcJ,GACPrD,IAMT,GAHA+C,EAAaC,YAAcC,OAAOtH,QAClCoH,EAAaG,SAAWD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAEpDJ,EAAaC,UAAW,OAAOI,IAEpC3M,EAAKD,SAAS,CACZmF,QAASoH,IAGX/C,KACC,qBAGAjL,KAAKiB,MAAM2F,QAAQuH,WAItBD,OAAOtH,QAAQ+H,eAAiB,CAC9BC,IAAKV,OAAOtH,QAAQsC,QAAQ2F,MAnFT,sCAoFnBC,OApFmB,sCAuFrBZ,OAAOtH,QAAQmI,GAAG,iBAAkB,WAC9BrN,EAAKT,MAAM2F,QAAQuH,UAEvBzM,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,iBAMZN,GAAK/G,WAAWoH,OAAOtH,sJAqaZ,IAAA2P,EAAAvW,KAAA2N,EACmB3N,KAAKiB,MAAjCmS,EADSzF,EACTyF,YAAaE,EADJ3F,EACI2F,WAEfkD,EAAsBxW,KAAK6U,kBAAkBvB,GAGnD,OACE3R,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKM,MAAM,UAAUF,UAAU,kBAC7BN,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,aAC7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAAqBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAGrDZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,WAC7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBACbmR,EADH,IACgBzR,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAGhCZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAEfN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACtBwR,EAAoB1T,IAAI,SAAAkR,GAGvB,OAAOA,EAAUlB,OAAOhQ,IAAI,SAAAoR,GAC1B,IAAMuC,EAAQ,QAAAlW,OAAW2T,EAAKR,MAAhB,KACRE,EAAW2C,EAAKjC,YAAYJ,EAAKR,OACjCgD,EAAS,eAAAnW,OAAkB2T,EAAKR,MAAvB,QAETiD,EAAcJ,EAAKpB,eAAevB,EAASW,IAC3CqC,EAAeL,EAAKlB,gBAAgBzB,EAASW,IAC7CsC,EAAcN,EAAKjB,eAAe1B,EAASW,IAC3CuC,EAAeP,EAAKhB,gBAAgB3B,EAASW,IAE7CU,EAASsB,EAAKvB,cAAcpB,EAASmD,GAErCC,EAAY9C,EAAKQ,MAEGsC,EAE1B,IAAIC,EAAWV,EAAKf,YAAY5B,EAASW,IACrC2C,EAAqBX,EAAKb,YAAY9B,EAASW,IAC/C4C,EAAeZ,EAAKT,aAAalC,EAASwD,IAC1CC,EAAYd,EAAKZ,eAAe/B,EAASW,IACzC+C,EAAaf,EAAKV,cAAcjC,EAASW,IACzCgD,EAAW,eAAAhX,OAAkB8W,GAE7BG,EAAO,MAAAjX,OAAS2T,EAAKR,OAEnB+D,EAAM,mBAAAlX,OAAsB0W,GAC5BS,EAAQ,mBAAAnX,OAAsB2W,GAEpC,OACEvV,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CACE8O,MAAI,EACJC,GAAI,GACJgH,GAAI,EACJ/G,GAAI,EACJC,GAAI,EACJ5O,UAAU,QAEVN,EAAAC,EAAAC,cAAA,OACEI,UAAU,mBACV8O,WAAS,aACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAeiS,EAAKM,YACnC7S,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBAAgB+U,GAC/BrV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAK2U,EACLzU,IAAI,UAGRf,EAAAC,EAAAC,cAAA,OAAKI,UAAWsV,GAAa5V,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI+U,KAC5C3V,EAAAC,EAAAC,cAAA,OAAKI,UAAWwV,GACd9V,EAAAC,EAAAC,cAAA,OAAKI,UAAWuV,GACd7V,EAAAC,EAAAC,cAAA,OACEI,UAAU,mBACVO,IAAKkU,EACLhU,IAAI,UAIRf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAIkU,KAGjB9U,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASgE,GAAK,GACbjW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKmU,EACLjU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAAShS,KAIhBD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKoU,EACLlU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASiE,KAIhBlW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKqU,EACLnU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASkE,MAIhBnW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKsU,EACLpU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASgE,OAOH,IAAhBhE,EAASgE,IACRjW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKmU,EACLjU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAAShS,KAIhBD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKoU,EACLlU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASiE,KAIhBlW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKqU,EACLnU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASkE,QAQtBnW,EAAAC,EAAAC,cAAA,OAAKI,UAAWyV,GACd/V,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBACfN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,gBAEd0S,EAAOnS,IAAI,SAAAiV,GACV,IAAIC,EAAQ,gBAAAzX,OAAmBwX,EAAMxV,GAAzB,QACR0V,EAAS,SAAA1X,OAAYwX,EAAMxV,GAAlB,KACT2V,EAAS,SAAA3X,OAAYwX,EAAMxV,GAAlB,KACb,OACEZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKwV,EACLtV,IAAI,UAIRf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI0V,KAEjBtW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI2V,QAMvBvW,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yDAkB3C,OAAOjC,KAAKmY,0BAlvBOnV,aAsvBjBC,GAAqB,CACzB1E,YACAgF,iBAGaL,eACb,KACAD,GAFaC,CAGbC,YAAa4O,oCC9vBf5F,KAAIC,OACJ,IA+BMgM,eACJ,SAAAA,EAAYxY,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoY,IACjBvY,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsY,GAAAjY,KAAAH,KAAMJ,KAuGRoS,oBAxGmB,eAAA7L,EAAArG,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAwGG,SAAAc,EAAMiK,GAAN,OAAAhL,EAAArF,EAAAwF,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAG,OAAA,SACb,IAAIyC,QAAJ,eAAA4B,EAAA7M,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAAC,EAAM8D,GAAN,IAAAiH,EAAAC,EAAA,OAAAlL,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGjB,IAFI2K,EAAW,GAENC,EAAI,EAAGA,EAAIF,IAASE,EAC3BD,EAASE,KAAKvS,EAAKwS,qBAAqBF,IAG1CpH,QAAQuH,IAAIJ,GACTvG,KAAK,SAAA4G,GACJ1J,QAAQC,IAAIyJ,GAMZ,IAJA,IAAIC,EAAM,GACNC,EAAS,GACTC,EAAW,GAENP,EAAI,EAAGA,EAAII,EAAQI,OAAQR,IAAK,CAEvC,IADA,IAAIS,EAASL,EAAQJ,GACZU,EAAI,EAAGA,EAAID,EAAOJ,IAAIG,OAAQE,IACrCL,EAAIJ,KAAKQ,EAAOJ,IAAIK,IAEtB,IAAK,IAAIA,EAAI,EAAGA,EAAID,EAAOH,OAAOE,OAAQE,IACxCJ,EAAOL,KAAKQ,EAAOH,OAAOI,IAE5B,IAAK,IAAIA,EAAI,EAAGA,EAAID,EAAOF,SAASC,OAAQE,IAC1CH,EAASN,KAAKQ,EAAOF,SAASG,IAIlC,IAAMC,EAAS,CACbN,IAAKA,EACLC,OAAQA,EACRC,SAAUA,GAGZ7S,EAAK4B,SAAS,CAAEqR,WAEhB7H,GAAQ,KAETW,MAAM,SAAAmH,GACL9H,GAAQ,KAvCK,wBAAA5D,EAAAK,SAAAP,EAAAnH,SAAZ,gBAAAqJ,GAAA,OAAAsD,EAAA/E,MAAA5H,KAAA6H,YAAA,KADa,wBAAAM,EAAAT,SAAAM,EAAAhI,SAxGH,gBAAA2H,GAAA,OAAAxB,EAAAyB,MAAA5H,KAAA6H,YAAA,GAAAhI,EAqJnBwS,qBArJmB,eAAAW,EAAAlT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAqJI,SAAA+B,EAAMQ,GAAN,OAAAxC,EAAArF,EAAAwF,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAd,OAAA,SACd,IAAIyC,QAAJ,eAAAkI,EAAAnT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAAwB,EAAMuC,GAAN,IAAAvB,EAAA,OAAAzC,EAAArF,EAAAwF,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACGsG,GAAKvE,eAAeG,GADvB,OACXC,EADWd,EAAAnB,KAEjBwD,EAAQvB,GAFS,wBAAAd,EAAAlB,SAAAgB,EAAA1I,SAAZ,gBAAAgM,GAAA,OAAAiH,EAAArL,MAAA5H,KAAA6H,YAAA,KADc,wBAAAuB,EAAA1B,SAAAuB,EAAAjJ,SArJJ,gBAAA4J,GAAA,OAAAoJ,EAAApL,MAAA5H,KAAA6H,YAAA,GAAAhI,EA4JnBwY,eA5JmBvY,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA4JF,SAAAsC,IAAA,IAAAb,EAAA,OAAA1B,EAAArF,EAAAwF,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACUsG,GAAKrF,gBADf,OACTG,EADSgB,EAAAlC,KAGf5H,EAAK4B,SAAS,CAAE6W,OAAQ3P,EAAW,KACnC9I,EAAK4B,SAAS,CAAE8W,kBAAmB5P,EAAW,KAC9C9I,EAAK4B,SAAS,CAAE+W,gBAAiB7P,EAAW,KAC5C9I,EAAK4B,SAAS,CAAEyG,SAAUS,EAAW,KANtB,wBAAAgB,EAAAjC,SAAA8B,EAAAxJ,SA5JEH,EA4KnBqT,UA5KmBpT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA4KP,SAAA6C,IAAA,IAAAoJ,EAAAlB,EAAA,OAAAhL,EAAArF,EAAAwF,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EACoBsG,GAAK9E,UACjCmF,OAAOtH,QAAQ+H,eAAeG,QAFtB,cACJqE,EADIlJ,EAAAxC,KAKV5H,EAAK4B,SAAS,CAAE2R,YAAaD,EAAgB5K,aAIjC,KAFR0J,EAAQkB,EAAgB5K,WAAa,KAEvB4K,IAChBlB,GAAS,GAEXpJ,QAAQC,IAAI,SAAWmJ,GAZbhI,EAAA1C,KAAA,EAcJ1H,EAAKmS,oBAAoBC,GAdrB,wBAAAhI,EAAAvC,SAAAqC,EAAA/J,SA5KOH,EA6LnBwT,eA7LmBvT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA6LF,SAAA8D,IAAA,IAAA8H,EAAApJ,EAAA4J,EAAAC,EAAAC,EAAAC,EAAAtB,EAAA5P,EAAAmR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlB,EAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApN,EAAArF,EAAAwF,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,OAMf,GALQuL,EAAWjT,EAAKoB,MAAhB6R,OAEJpJ,EAAQoJ,EAENQ,EAAezT,EAAKoB,MAApBqS,WACF5J,EAIF,IAHM8I,EAAM9I,EAAM8I,IACZC,EAAS/I,EAAM+I,OACfC,EAAWhJ,EAAMgJ,SACdP,EAAI,EAAGA,EAAIK,EAAIG,OAAQR,IAAK,CAUnC,IATM5P,EAAKiQ,EAAIL,GAAG5J,WACZmL,EAAQjB,EAAON,GACfwB,EAASjB,EAASP,GAElByB,EAAW/T,EAAKyU,YAAYZ,GAC5BG,EAASD,EAASW,GAEpBT,GAAoB,EACpBC,GAAY,EACPlB,EAAI,EAAGA,EAAIS,EAAWX,OAAQE,IAErC,IADMmB,EAAYV,EAAWT,IACfgB,SAAWA,IAEvBC,EAAmBjB,EACfmB,EAAUlB,QACZ,IAASmB,EAAI,EAAGA,EAAID,EAAUlB,OAAOH,OAAQsB,KACrCC,EAAOF,EAAUlB,OAAOmB,IAErBP,QAAUA,IAEjBK,GAAY,EAERG,EAAKM,WAAab,IACpBO,EAAKM,WAAab,EAClBO,EAAKO,OAASlS,GAGhB2R,EAAKQ,OAAS,GAOnBX,IAEGG,EAAO,CACXR,MAAOA,EACPc,WAAYb,EACZc,OAAQlS,EACRmS,MAAO,GAGLZ,GAAoB,EAEJR,EAAWQ,GACnBhB,OAAOV,KAAK8B,KAEhBE,EAAY,IACRhC,KAAK8B,GAETF,EAAY,CAChBH,OAAQA,EACRf,OAAQsB,GAEVd,EAAWlB,KAAK4B,KAOxBnU,EAAK4B,SAAS,CAAE6R,eAzED,wBAAAhI,EAAA5D,SAAAsD,EAAAhL,SA7LEH,EAyQnBgK,cAzQmB/J,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAyQH,SAAAuD,IAAA,IAAAlH,EAAA,OAAA0D,EAAArF,EAAAwF,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cACNhE,EAAiB1D,EAAKD,MAAtB2D,aADMuH,EAAAvD,KAAA,EAERsG,GAAKhE,gBACR8B,KAAK,SAAS3B,GACbzG,EAAa,sBAEdqI,MAAM,SAASC,GACdtI,EAAa,SAPH,wBAAAuH,EAAApD,SAAA+C,EAAAzK,SAzQGH,EAoRnBiN,UAAY,WAEV,QADsBjN,EAAKoB,MAAnB8L,WArRSlN,EAyRnByU,YAAc,SAAA/R,GACZ,IAAK,IAAI4P,EAAI,EAAGA,EAAI4C,GAAapC,OAAQR,IACvC,GAAI4C,GAAa5C,GAAG5P,KAAOA,EACzB,OAAOwS,GAAa5C,GAGxB,OAAO,MA/RUtS,EAkSnB4Y,SAlSmB3Y,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAkST,SAAAwR,IAAA,OAAAzR,EAAArF,EAAAwF,KAAA,SAAAuR,GAAA,cAAAA,EAAArR,KAAAqR,EAAApR,MAAA,QACAhE,EAAiB1D,EAAKD,MAAtB2D,cACK,UAFL,wBAAAoV,EAAAjR,SAAAgR,EAAA1Y,SA/RRH,EAAKoB,MAAQ,CACXgV,UAAW,KACX7C,YAAa,EACbN,OAAQ,GACRpJ,MAAO,GACP4J,WAAY,GACZ4C,gBAAiB,KAEjBoC,OAAQ,EACRC,kBAAmB,EACnBC,gBAAiB,EACjBtQ,SAAU,GAEZrI,EAAKD,MAAM2B,eAAeC,GAhBT3B,2MAqBXG,KAAKoW,qCACLpW,KAAKkT,mCACLlT,KAAKqY,wBACXnK,OAAOmI,iBAAiB,OAAQlK,KAAImK,oRAM9B,IAAIvL,QAAQ,SAAAE,GAChB,IAAM+C,EAAe,CACnBC,YAAaC,OAAOtH,QACpBuH,SAAUD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAG7C,GAAIJ,EAAaC,UAKf,OAJAvM,EAAKD,SAAS,CACZmF,QAASoH,IAGJ/C,IAGT,IAAIoD,EAAQ,EAENC,EAAQC,YAAY,WACxB,GAAIF,GAAS,GAAI,CACf,IAAMG,EAAe,iCAgBrB,OAdAN,OAAOtH,QAAU,IAAI6H,KACnBD,EACAA,EACAA,GAGF9M,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,KAIdO,cAAcJ,GACPrD,IAMT,GAHA+C,EAAaC,YAAcC,OAAOtH,QAClCoH,EAAaG,SAAWD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAEpDJ,EAAaC,UAAW,OAAOI,IAEpC3M,EAAKD,SAAS,CACZmF,QAASoH,IAGX/C,KACC,qBAGAjL,KAAKiB,MAAM2F,QAAQuH,WAItBD,OAAOtH,QAAQ+H,eAAiB,CAC9BC,IAAKV,OAAOtH,QAAQsC,QAAQ2F,MAxFT,sCAyFnBC,OAzFmB,sCA4FrBZ,OAAOtH,QAAQmI,GAAG,iBAAkB,WAC9BrN,EAAKT,MAAM2F,QAAQuH,UAEvBzM,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,iBAMZN,GAAK/G,WAAWoH,OAAOtH,4IAgEtBwI,GACP,OAAKA,EAGEA,EAAM,IAFJ,6CAiIQ,IAAAmH,EAAAvW,KAERoF,EAAYpF,KAAKJ,MAAjBwF,QAFQuI,EAGgD3N,KAAKiB,MAA9DqX,EAHS3K,EAGT2K,OAAQC,EAHC5K,EAGD4K,kBAAmBC,EAHlB7K,EAGkB6K,gBAAiBtQ,EAHnCyF,EAGmCzF,SAEhD0Q,EAAiB,2BAA6B1K,OAAOtH,QAAQ+H,eAAeG,OAChF,OACEnN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKM,MAAM,UAAUF,UAAU,kBAC7BN,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,aAC7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAAqBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAErDZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GAAI/C,UAAU,QACrCN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBADhB,IACwC,IACtCZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbqW,GACK,IACR3W,EAAAC,EAAAC,cAAA,OACEW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,sBAKhBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,8BADhB,IACgD,IAC9CZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbjC,KAAK8Q,SAAS0H,GADjB,QAEQ,MAGZ7W,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,8BADhB,IACgD,IAC9CZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbjC,KAAK8Q,SAAS5I,GADjB,QAEQ,MAIZvG,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,6BADhB,KAC+CZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAD7D,KACoFZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAE1E,IAHV,IAGeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAH7B,KAKAZ,EAAAC,EAAAC,cAAA,WAECF,EAAAC,EAAAC,cAACuP,GAAAxP,EAAD,CAEC0P,MAAM,GACNlQ,KAAK,gBACLa,UAAU,oBACVsP,MAAOqH,EACPpH,OAAO,SACPrP,MAAM,YACNsB,QAAQ,WACRoV,gBAAiB,CACfzT,QAAS,CACP0T,KAAM1T,EAAQ2T,WAGlBC,WAAY,CACV5T,QAAS,CACP0T,KAAM1T,EAAQ6T,iBACdC,MAAO9T,EAAQ+T,yBACfC,eAAgBhU,EAAQgU,oBAK9BzX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwX,GAAA,gBAAD,CAAiBzD,KAAMgD,EACrBU,OAAQ,WAAK/C,EAAKkC,aAClB9W,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEK,UAAU,oBACVwB,QAAQ,YACRkO,KAAK,QACLxP,MAAM,WAENR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAcN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,8BAUxDZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAAsB,IACpCZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACbjC,KAAK8Q,SAASyH,GADjB,QAEQ,KAEV5W,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OACEI,UAAU,wBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAK+W,KACL7W,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBAClBN,UAAU,iBAIhBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC6P,GAAA9P,EAAD,CACEW,GAAG,oBACHN,UAAU,eACVwB,QAAQ,YACRtB,MAAM,YACNwP,KAAK,QACLvP,QAASpC,KAAK6J,cACd+H,SAAU5R,KAAK8M,aAEfnL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kEAkB1C,OAAOvC,KAAKwZ,0BAlcQxW,aAsclBC,GAAqB,CACzB1E,YACAgF,iBAOaL,eACb,KACAD,GAFaC,CAGboB,qBAjfa,CACbwU,KAAM,CACJW,MAAO,OACPC,QAAS,eAEXT,iBAAkB,CAChBQ,MAAM,IACNtX,MAAO,OACPwX,WACE,2FACFC,YAAa,QAEfT,yBAA0B,CACxBhX,MAAO,OACPwX,WACE,2FACFC,YAAa,OACbC,+BAAgC,CAC9BD,YAAa,OACbD,WACE,6FAGNP,eAAgB,CACdQ,YAAa,OACbzX,MAAO,SAwdTmC,CAAmBnB,YAAaiV,MCzflCjM,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,IAGV,IAEMwN,eACJ,SAAAA,EAAYla,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8Z,IACjBja,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAga,GAAA3Z,KAAAH,KAAMJ,KAkGRoS,oBAnGmB,eAAA7L,EAAArG,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAmGG,SAAAc,EAAMiK,GAAN,OAAAhL,EAAArF,EAAAwF,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAG,OAAA,SACb,IAAIyC,QAAJ,eAAA4B,EAAA7M,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAAY,SAAAC,EAAM8D,GAAN,IAAAuH,EAAAC,EAAAC,EAAAP,EAAAW,EAAA,OAAA7L,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKjB,IAJIiL,EAAM,GACNC,EAAS,GACTC,EAAW,GAENP,EAAI,EAAGA,EAAI4C,GAAapC,OAAQR,IACvCK,EAAIJ,KAAK2C,GAAa5C,GAAG5P,IACzBkQ,EAAOL,KAAK2C,GAAa5C,GAAG5P,IAC5BmQ,EAASN,KAAK,GAGVU,EAAS,CACbN,IAAKA,EACLC,OAAQA,EACRC,SAAUA,GAGZ7S,EAAK4B,SAAS,CAAEqR,WAEhB7H,GAAQ,GAnBS,wBAAA5D,EAAAK,SAAAP,EAAAnH,SAAZ,gBAAAqJ,GAAA,OAAAsD,EAAA/E,MAAA5H,KAAA6H,YAAA,KADa,wBAAAM,EAAAT,SAAAM,EAAAhI,SAnGH,gBAAA2H,GAAA,OAAAxB,EAAAyB,MAAA5H,KAAA6H,YAAA,GAAAhI,EA2HnBqT,UA3HmBpT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KA2HP,SAAAwB,IAAA,OAAAzB,EAAArF,EAAAwF,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cACV1H,EAAK4B,SAAS,CAAE2R,YAAa,KADnBxK,EAAArB,KAAA,EAGJ1H,EAAKmS,sBAHD,wBAAApJ,EAAAlB,SAAAgB,EAAA1I,SA3HOH,EAiInBwT,eAjImBvT,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAiIF,SAAA+B,IAAA,IAAA6J,EAAApJ,EAAA4J,EAAAd,EAAAC,EAAAC,EAAAP,EAAA5P,EAAAmR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlB,EAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApN,EAAArF,EAAAwF,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAMf,GALQuL,EAAWjT,EAAKoB,MAAhB6R,OAEJpJ,EAAQoJ,EAENQ,EAAezT,EAAKoB,MAApBqS,WACF5J,IACI8I,EAAM9I,EAAM8I,IACZC,EAAS/I,EAAM+I,OACfC,EAAWhJ,EAAMgJ,SACpBF,GACH,IAASL,EAAI,EAAGA,EAAIK,EAAIG,OAAQR,IAAK,CAUnC,IATI5P,EAAKiQ,EAAIL,GACTuB,EAAQjB,EAAON,GACfwB,EAASjB,EAASP,GACtBtJ,QAAQC,IAAI4K,GACNE,EAAW/T,EAAKyU,YAAYZ,GAC5BG,EAASD,EAASW,GAEpBT,GAAoB,EACpBC,GAAY,EACPlB,EAAI,EAAGA,EAAIS,EAAWX,OAAQE,IAErC,IADMmB,EAAYV,EAAWT,IACfgB,SAAWA,IAEvBC,EAAmBjB,EACfmB,EAAUlB,QACZ,IAASmB,EAAI,EAAGA,EAAID,EAAUlB,OAAOH,OAAQsB,KACrCC,EAAOF,EAAUlB,OAAOmB,IAErBP,QAAUA,IAEjBK,GAAY,EAERG,EAAKM,WAAab,IACpBO,EAAKM,WAAab,EAClBO,EAAKO,OAASlS,GAGhB2R,EAAKQ,OAAS,GAOnBX,IAEGG,EAAO,CACXR,MAAOA,EACPc,WAAYb,EACZc,OAAQlS,EACRmS,MAAO,GAGLZ,GAAoB,EAEJR,EAAWQ,GACnBhB,OAAOV,KAAK8B,KAElBE,EAAY,IACNhC,KAAK8B,GAETF,EAAY,CAChBH,OAAQA,EACRf,OAAQsB,GAEVd,EAAWlB,KAAK4B,KASxBnU,EAAK4B,SAAS,CAAE6R,eA5ED,wBAAAlK,EAAA1B,SAAAuB,EAAAjJ,SAjIEH,EAgNnB8U,WAAa,SAAC/S,EAAGgT,GACf,OAAIhT,EAAEiS,OAASe,EAAEf,OAAe,EAC5BjS,EAAEiS,OAASe,EAAEf,QAAgB,EAC1B,GAnNUhU,EAsNnBgV,kBAAoB,SAAAvB,GAClB,OAAOA,EAAWwB,KAAKjV,EAAK8U,aAvNX9U,EA0NnByU,YAAc,SAAA/R,GACZ,IAAK,IAAI4P,EAAI,EAAGA,EAAI4C,GAAapC,OAAQR,IACvC,GAAI4C,GAAa5C,GAAG5P,KAAOA,EACzB,OAAOwS,GAAa5C,GAGxB,OAAO,MAhOUtS,EAmOnBmV,cAAgB,SAAAxC,GACd,IAAIyC,EAAS,GACb,GAAIzC,EACF,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAIG,OAAQR,IAG9B,IAFA,IAAI5P,EAAKiQ,EAAIL,GAEJU,EAAI,EAAGA,EAAIqC,GAAavC,OAAQE,IACnCqC,GAAarC,GAAGtQ,KAAOA,GACzB0S,EAAO7C,KAAK8C,GAAarC,IAMjC,OAAOoC,GAjPUpV,EAoPnBsV,eAAiB,SAAAtB,GACf,IAAIuB,EAAQ,gCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,kCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,QACEA,EAAQ,gCAIZ,OAAOA,GA3QUvV,EA8QnBwV,gBAAkB,SAAAxB,GAChB,IAAIuB,EAAQ,iCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,gCACR,MACF,KAAK,EACHA,EAAQ,8BACR,MACF,KAAK,EACHA,EAAQ,8BACR,MACF,KAAK,EACHA,EAAQ,mCACR,MACF,KAAK,EACHA,EAAQ,gCACR,MACF,QACEA,EAAQ,iCAIZ,OAAOA,GArSUvV,EAwSnByV,eAAiB,SAAAzB,GACfhL,QAAQC,IAAI+K,GAEZ,IAAIuB,EAAQ,gCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,6BACR,MACF,KAAK,EACHA,EAAQ,kCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,QACEA,EAAQ,gCAIZ,OAAOA,GAjUUvV,EAmUnB0V,gBAAkB,SAAA1B,GAChB,IAAIuB,EAAQ,kCACZ,OAAQvB,GACN,KAAK,EACHuB,EAAQ,iCACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,+BACR,MACF,KAAK,EACHA,EAAQ,oCACR,MACF,KAAK,EACHA,EAAQ,iCACR,MACF,QACEA,EAAQ,kCAIZ,OAAOA,GA1VUvV,EA6VnB2V,YAAc,SAAA3B,GACZ,IAAI4B,EAAM,eACV,OAAQ5B,GACN,KAAK,EACH4B,EAAM,cACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,YACN,MACF,QACEA,EAAM,eAIV,OAAOA,GApXU5V,EAuXnB6V,YAAc,SAAA7B,GACZ,IAAI4B,EAAM,eACV,OAAQ5B,GACN,KAAK,EACH4B,EAAM,cACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,aACN,MACF,KAAK,EACHA,EAAM,YACN,MACF,QACEA,EAAM,eAIV,OAAOA,GA9YU5V,EAiZnB8V,eAAiB,SAAA9B,GACf,IAAI+B,EAAO,SACX,OAAQ/B,GACN,KAAK,EACH+B,EAAO,SACP,MACF,KAAK,EACHA,EAAO,OACP,MACF,KAAK,EACHA,EAAO,OACP,MACF,KAAK,EACHA,EAAO,YACP,MACF,KAAK,EACHA,EAAO,SACP,MACF,KAAK,EACHA,EAAO,UACP,MACF,QACEA,EAAO,SAIX,OAAOA,GA3aU/V,EA6anBgW,cAAgB,SAAAhC,GACd,IAAI+B,EAAO,iBACX,OAAQ/B,GACN,KAAK,EACH+B,EAAO,iBACP,MACF,KAAK,EACHA,EAAO,eACP,MACF,KAAK,EACHA,EAAO,eACP,MACF,KAAK,EACHA,EAAO,oBACP,MACF,KAAK,EACHA,EAAO,iBACP,MACF,KAAK,EACHA,EAAO,kBACP,MACF,QACEA,EAAO,iBAIX,OAAOA,GAvcU/V,EA0cnBiW,aAAe,SAAAC,GACb,IAAIC,EAAM,yBACV,OAAQD,GACN,KAAK,EACHC,EAAM,uBACN,MACF,KAAK,EACHA,EAAM,yBACN,MACF,KAAK,EACHA,EAAM,yBACN,MACF,QACEA,EAAM,yBAIV,OAAOA,GAxdPnW,EAAKoB,MAAQ,CACXgV,UAAW,KACX7C,YAAa,EACbN,OAAQ,GACRpJ,MAAO,GACP4J,WAAY,GACZ4C,gBAAiB,MAEnBrW,EAAKD,MAAM2B,eAAeC,GAC1B3B,EAAKD,MAAM2B,eAAe4U,IAZTtW,2MAgBXG,KAAKoW,qCACLpW,KAAKkT,mCACLlT,KAAKqT,wBACXnF,OAAOmI,iBAAiB,OAAQlK,KAAImK,oRAM9B,IAAIvL,QAAQ,SAAAE,GAChB,IAAM+C,EAAe,CACnBC,YAAaC,OAAOtH,QACpBuH,SAAUD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAG7C,GAAIJ,EAAaC,UAKf,OAJAvM,EAAKD,SAAS,CACZmF,QAASoH,IAGJ/C,IAGT,IAAIoD,EAAQ,EAENC,EAAQC,YAAY,WACxB,GAAIF,GAAS,GAAI,CACf,IAAMG,EAAe,iCAgBrB,OAdAN,OAAOtH,QAAU,IAAI6H,KACnBD,EACAA,EACAA,GAGF9M,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,KAIdO,cAAcJ,GACPrD,IAMT,GAHA+C,EAAaC,YAAcC,OAAOtH,QAClCoH,EAAaG,SAAWD,OAAOtH,SAAWsH,OAAOtH,QAAQwH,OAEpDJ,EAAaC,UAAW,OAAOI,IAEpC3M,EAAKD,SAAS,CACZmF,QAASoH,IAGX/C,KACC,qBAGAjL,KAAKiB,MAAM2F,QAAQuH,WAItBD,OAAOtH,QAAQ+H,eAAiB,CAC9BC,IAAKV,OAAOtH,QAAQsC,QAAQ2F,MAnFT,sCAoFnBC,OApFmB,sCAuFrBZ,OAAOtH,QAAQmI,GAAG,iBAAkB,WAC9BrN,EAAKT,MAAM2F,QAAQuH,UAEvBzM,EAAKD,SAAS,CACZmF,QAAS,CACPqH,WAAW,EACXE,UAAU,iBAMZN,GAAK/G,WAAWoH,OAAOtH,sJA8XZ,IAAA2P,EAAAvW,KAAA2N,EACmB3N,KAAKiB,MAAjCmS,EADSzF,EACTyF,YAAaE,EADJ3F,EACI2F,WAEfkD,EAAsBxW,KAAK6U,kBAAkBvB,GAGnD,OACE3R,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKM,MAAM,UAAUF,UAAU,kBAC7BN,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,aAC7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBAAqBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAGrDZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAY6B,QAAQ,KAAKtB,MAAM,WAC7BR,EAAAC,EAAAC,cAAA,QAAMI,UAAU,sBACbmR,EADH,IACgBzR,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAGhCZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAEfN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACtBwR,EAAoB1T,IAAI,SAAAkR,GAGvB,OAAOA,EAAUlB,OAAOhQ,IAAI,SAAAoR,GAE1B,IAAMuC,EAAQ,QAAAlW,OAAW2T,EAAKR,MAAhB,KACRE,EAAW2C,EAAKjC,YAAYJ,EAAKR,OACjCgD,EAAS,eAAAnW,OAAkB2T,EAAKR,MAAvB,QAETiD,EAAcJ,EAAKpB,eAAevB,EAASW,IAC3CqC,EAAeL,EAAKlB,gBAAgBzB,EAASW,IAC7CsC,EAAcN,EAAKjB,eAAe1B,EAASW,IAC3CuC,EAAeP,EAAKhB,gBAAgB3B,EAASW,IAE7CU,EAASsB,EAAKvB,cAAcpB,EAASmD,GAErCC,EAAY9C,EAAKQ,MAEGsC,EAE1B,IAAIC,EAAWV,EAAKf,YAAY5B,EAASW,IACrC2C,EAAqBX,EAAKb,YAAY9B,EAASW,IAC/C4C,EAAeZ,EAAKT,aAAalC,EAASwD,IAC1CC,EAAYd,EAAKZ,eAAe/B,EAASW,IACzC+C,EAAaf,EAAKV,cAAcjC,EAASW,IACzCgD,EAAW,eAAAhX,OAAkB8W,GAE7BG,EAAO,MAAAjX,OAAS2T,EAAKR,OAEnB+D,EAAM,mBAAAlX,OAAsB0W,GAC5BS,EAAQ,mBAAAnX,OAAsB2W,GAEpC,OACEvV,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CACE8O,MAAI,EACJC,GAAI,GACJgH,GAAI,EACJ/G,GAAI,EACJC,GAAI,EACJ5O,UAAU,QAEVN,EAAAC,EAAAC,cAAA,OACEI,UAAU,mBACV8O,WAAS,aACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAK2U,EACLzU,IAAI,UAGRf,EAAAC,EAAAC,cAAA,OAAKI,UAAWsV,GAAa5V,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI+U,KAC5C3V,EAAAC,EAAAC,cAAA,OAAKI,UAAWwV,GACd9V,EAAAC,EAAAC,cAAA,OAAKI,UAAWuV,GACd7V,EAAAC,EAAAC,cAAA,OACEI,UAAU,mBACVO,IAAKkU,EACLhU,IAAI,UAIRf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAIkU,KAGjB9U,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASgE,GAAK,GACbjW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKmU,EACLjU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAAShS,KAIhBD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKoU,EACLlU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASiE,KAIhBlW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKqU,EACLnU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASkE,MAIhBnW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKsU,EACLpU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASgE,OAOH,IAAhBhE,EAASgE,IACRjW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,GACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKmU,EACLjU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAAShS,KAIhBD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKoU,EACLlU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASiE,KAIhBlW,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,EAAGgH,GAAI,EAAG/G,GAAI,EAAGC,GAAI,GAClClP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKqU,EACLnU,IAAI,SAENf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZ2R,EAASkE,QAQtBnW,EAAAC,EAAAC,cAAA,OAAKI,UAAWyV,GACd/V,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,gBAEf0S,EAAOnS,IAAI,SAAAiV,GACV,IAAIC,EAAQ,gBAAAzX,OAAmBwX,EAAMxV,GAAzB,QACR0V,EAAS,SAAA1X,OAAYwX,EAAMxV,GAAlB,KACT2V,EAAS,SAAA3X,OAAYwX,EAAMxV,GAAlB,KACb,OACEZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACVO,IAAKwV,EACLtV,IAAI,UAIRf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,2BACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACbN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI0V,KAEjBtW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAI2V,QAMvBvW,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yDAkB3C,OAAOjC,KAAKmY,0BA1sBQnV,aA8sBlBC,GAAqB,CACzB1E,YACAgF,iBAGaL,eACb,KACAD,GAFaC,CAGbC,YAAa2W,0BCtuBf3N,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJyN,eAEJ,SAAAA,EAAYna,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+Z,IACjBla,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAia,GAAA5Z,KAAAH,KAAMJ,KAEDA,MAAM2B,eAAeC,GAHT3B,wEASjB,OACE8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BACdN,EAAAC,EAAAC,cAAA,OACEW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,mCACT,IACHN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAGlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAD/C,IAC6EZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAG3FZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAD/C,IAC6EZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAAsB,IAC/GZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAFF,KAE6CN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAF3D,IAGEZ,EAAAC,EAAAC,cAAA,MAAII,UAAU,cACZN,EAAAC,EAAAC,cAAA,UACG,IACDF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAFF,IAE4CN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAAsB,IAC9EZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAHF,IAG4CN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAH1D,KAKAZ,EAAAC,EAAAC,cAAA,UACG,IACDF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAFF,IAE4CN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAF1D,KAIAZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,wBAIpBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAD/C,IAC6EZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAD3F,IAEEZ,EAAAC,EAAAC,cAAA,MAAII,UAAU,cACZN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,OAA0C,IAAIN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAE9DZ,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBACnBZ,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBACnBZ,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBACnBZ,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKzBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAGnBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAKwX,KACL/X,UAAU,+BAjFR6P,IAAM9O,WAkGfE,eAJS,SAAAjC,GAAK,MAAK,IAEP,GAEZiC,CAGbC,YAAa4W,+CC1Gf5N,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJ2N,eACJ,SAAAA,EAAYra,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAia,IACjBpa,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAma,GAAA9Z,KAAAH,KAAMJ,KAEDA,MAAM2B,eAAeC,GAHT3B,wEAMjB,OACE8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBAGlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAAkB,IAChCZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,iBAAgBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,oBAFhD,IAE4E,IAC1EZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAH/C,IAGyE,IACvEZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAJ/C,IAIyE,IACvEZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAL/C,IAK8E,IAC5EZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAcN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qBAE9CZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAIlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAGnBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAK0X,KACLxX,IAAI,WACJT,UAAU,qBAOpBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAK2X,KACLzX,IAAI,WACJT,UAAU,mBAIhBN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BACdN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAGlBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAEhBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAGjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBAvFf6P,IAAM9O,WAuGXE,eAJS,SAAAjC,GAAK,MAAK,IAEP,GAEZiC,CAGbC,YAAa8W,+CC7Gf9N,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJ8N,eACH,SAAAA,EAAYxa,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoa,IAClBva,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsa,GAAAja,KAAAH,KAAMJ,KAEDA,MAAM2B,eAAeC,GAHR3B,wEAMlB,OACE8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAA2BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,mBAE3DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAIpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAK6X,KACL3X,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,iBAClBN,UAAU,qBAOpBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,oBACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAK8X,KAAS5X,IAAI,WAAWT,UAAU,mBAGhDN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAA2BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,eAE3DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,eAAgB,IAC9BZ,EAAAC,EAAAC,cAAA,OACMW,IAAKC,IACLC,IAAIf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,sBAClBN,UAAU,mBAEZN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,qCAjEnDuP,IAAM9O,WAiFTE,eAJS,SAAAjC,GAAK,MAAK,IAEP,GAEZiC,CAGbC,YAAaiX,+CCvFfjO,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJiO,eACJ,SAAAA,EAAY3a,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAua,IACjB1a,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAya,GAAApa,KAAAH,KAAMJ,KAEDA,MAAM2B,eAAeC,GAHT3B,wEAMjB,OACE8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IACvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAA2BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,gBAE3DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,kBAIpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OACEW,IAAKgY,KACL9X,IAAI,WACJT,UAAU,2BAOpBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IAEvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAA2BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBAE3DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,eADhB,KACiCZ,EAAAC,EAAAC,cAAA,OACzBW,IAAKC,IACLC,IAAI,aACJT,UAAU,mBAEZN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAeN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKvDZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAKiY,KAAiB/X,IAAI,WAAWT,UAAU,oCApEpD6P,IAAM9O,WAoFTE,eAJS,SAAAjC,GAAK,MAAK,IAEP,GAEZiC,CAGbC,YAAaoX,yFC7FfpO,KAAIC,KAAK,CACPC,MAAM,EACNC,QAAQ,QAGJoO,eACJ,SAAAA,EAAY9a,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0a,IACjB7a,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4a,GAAAva,KAAAH,KAAMJ,KAEDA,MAAM2B,eAAeC,GAHT3B,wEAMjB,OACE8B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBAEbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM6O,WAAS,EAACzL,QAAS,IAEvBrD,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,4BAA2BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,6BAE3DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAKmY,KAAejY,IAAI,aAAaT,UAAU,yBAIxDN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BAA0BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAE1DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAKoY,KAAYlY,IAAI,UAAUT,UAAU,yBAIlDN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,2BAA0BN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,4BAE1DZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAKqY,KAAcnY,IAAI,YAAYT,UAAU,yBAItDN,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,0BAAyBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,8BAEzDZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,uBACdZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,GAAG,0BAKpBZ,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAM8O,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7BlP,EAAAC,EAAAC,cAAA,OACEI,UAAU,+BACV8O,WAAS,UACTC,iBAAe,KACfE,4BAA0B,cAE1BvP,EAAAC,EAAAC,cAAA,OAAKW,IAAKsY,KAAgBpY,IAAI,cAAcT,UAAU,oCAxG9C6P,IAAM9O,WAwHjBE,eAJS,SAAAjC,GAAK,MAAK,IAEP,GAEZiC,CAGbC,YAAauX,KC1FAxX,eAJS,SAAAjC,GAAK,MAAK,CAChCzC,OAAQyC,EAAM8Z,IAAIvc,SAGL0E,CA7BO,SAAAiD,GACpB,OADoCA,EAAb3H,QAErB,KAAKV,EACH,OAAO6D,EAAAC,EAAAC,cAACmZ,GAAD,MACT,KAAKhd,EACH,OAAO2D,EAAAC,EAAAC,cAACoZ,GAAD,MACT,KAAK/c,EACH,OAAOyD,EAAAC,EAAAC,cAACqZ,GAAD,MACT,KAAKnd,EACH,OAAO4D,EAAAC,EAAAC,cAACsZ,GAAD,MACT,KAAKhd,EACH,OAAOwD,EAAAC,EAAAC,cAACuZ,GAAD,MACT,KAAKnd,EACH,OAAO0D,EAAAC,EAAAC,cAACwZ,GAAD,MACT,KAAKhd,EACH,OAAOsD,EAAAC,EAAAC,cAACyZ,GAAD,MACT,KAAKld,EACH,OAAOuD,EAAAC,EAAAC,cAAC0Z,GAAD,MACT,KAAKjd,EACH,OAAOqD,EAAAC,EAAAC,cAAC2Z,GAAD,MACT,QACE,OAAO,QC7BPC,uBACJ,SAAAA,EAAY7b,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyb,IACjB5b,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2b,GAAAtb,KAAAH,KAAMJ,KAcR8b,WAfmB5b,OAAAkH,EAAA,EAAAlH,CAAAmH,EAAArF,EAAAsF,KAeN,SAAAC,IAAA,OAAAF,EAAArF,EAAAwF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,QACHhJ,EAAcsB,EAAKD,MAAnBrB,WACET,GAFC,wBAAAuJ,EAAAK,SAAAP,EAAAnH,SAZXH,EAAKD,MAAMuB,WAAW,CACpBD,UAAW,CACT,CAAEE,KAAM,UAAWf,KAAM,MACzB,CAAEe,KAAM,UAAWf,KAAM,OAE3BgB,QAAS,CAAEC,+CARIzB,mFAYjBG,KAAK0b,8CASL,OACE/Z,EAAAC,EAAAC,cAAC8Z,EAAA/Z,EAAD,CAAkB2C,MAAO+L,GACvB3O,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAC+Z,EAAD,MACAja,EAAAC,EAAAC,cAACga,GAAD,MACAla,EAAAC,EAAAC,cAACia,GAAD,eA3BQ9Y,cAkCZC,GAAqB,CACzB1E,aAGa2E,eACb,KACAD,GAFaC,CAGbC,YAAasY,KC/CKM,QACW,cAA7B7N,OAAO8N,SAASC,UAEe,UAA7B/N,OAAO8N,SAASC,UAEhB/N,OAAO8N,SAASC,SAASC,MACvB,iFCbAC,GAAe,CACnB3d,OAAQV,GCDV,IAAMqe,GAAe,CACnBzY,cAAc,EACdC,gBAAiB,ICFJ,IAAAyY,GAAA,CACbrB,IFGK,WAAkD,IAA9B9Z,EAA8B4G,UAAA8K,OAAA,QAAA0J,IAAAxU,UAAA,GAAAA,UAAA,GAAtBsU,GAAc9c,EAAQwI,UAAA8K,OAAA,EAAA9K,UAAA,QAAAwU,EACvD,OAAQhd,EAAOZ,MACb,KAAKZ,EACH,OAAOiC,OAAAwc,GAAA,EAAAxc,CAAA,GACFmB,EACA5B,EAAOX,SAGd,KAAK0E,GACH,OAAO+Y,GACT,QACE,OAAOlb,IEbXiF,SDGK,WAAuD,IAA9BjF,EAA8B4G,UAAA8K,OAAA,QAAA0J,IAAAxU,UAAA,GAAAA,UAAA,GAAtBsU,GAAc9c,EAAQwI,UAAA8K,OAAA,EAAA9K,UAAA,QAAAwU,EAC5D,OAAQhd,EAAOZ,MACb,KAAK4E,GACL,KAAKC,GACH,OAAOxD,OAAAwc,GAAA,EAAAxc,CAAA,GACFmB,EACA5B,EAAOX,SAGd,KAAK0E,GACH,OAAO+Y,GACT,QACE,OAAOlb,KEVEsb,GAPDC,aACZC,aAAgB3c,OAAAwc,GAAA,EAAAxc,CAAA,GACXsc,KAELlO,OAAOwO,8BAAgCxO,OAAOwO,gCCGhDC,IAASC,OACTjb,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACgb,EAAA,EAAD,CAAUC,MAAOA,IACfnb,EAAAC,EAAAC,cAACkb,GAAD,QAGFC,SAASC,eAAe,SLyGpB,kBAAmBC,WACrBA,UAAUC,cAAc/O,MAAMzC,KAAK,SAAAyR,GACjCA,EAAaC","file":"static/js/main.9bd0fdce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/raid-sprite.e09a294c.png\";","module.exports = __webpack_public_path__ + \"static/media/scroll.57764bd8.png\";","module.exports = __webpack_public_path__ + \"static/media/dragonwarrior.4d971dcf.png\";","module.exports = __webpack_public_path__ + \"static/media/tron-logo.2e406677.png\";","module.exports = __webpack_public_path__ + \"static/media/ss-spite.989f495a.png\";","module.exports = __webpack_public_path__ + \"static/media/weapon-armor-sprite.042ab414.png\";","module.exports = __webpack_public_path__ + \"static/media/minion-sprite.d007074f.png\";","module.exports = __webpack_public_path__ + \"static/media/instance-sprite.bff53289.png\";","module.exports = __webpack_public_path__ + \"static/media/pvp-sprite.3aafa032.png\";","module.exports = __webpack_public_path__ + \"static/media/battleground.3373cff7.png\";","module.exports = __webpack_public_path__ + \"static/media/blacksmith-sprite.c5c03cf7.png\";","module.exports = __webpack_public_path__ + \"static/media/alchemy-sprite.78fd4a02.png\";","module.exports = __webpack_public_path__ + \"static/media/tailoring-sprite.e3647cc2.png\";","module.exports = __webpack_public_path__ + \"static/media/engineering-sprite.210a5a15.png\";","module.exports = __webpack_public_path__ + \"static/media/soulstone.c63abfd6.png\";","const SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_PRE_SALE = 'SCREEN_PRE_SALE';\nconst SCREEN_MY_ACCOUNT = 'SCREEN_MY_ACCOUNT';\nconst SCREEN_MY_HEROES = 'SCREEN_MY_HEROES';\nconst SCREEN_SOULSTONE = 'SCREEN_SOULSTONE';\nconst SCREEN_ALL_HEROES = 'SCREEN_ALL_HEROES';\nconst SCREEN_ITEMS = 'SCREEN_ITEMS';\nconst SCREEN_PVP = 'SCREEN_PVP';\nconst SCREEN_PVE = 'SCREEN_PVE';\nconst SCREEN_PROFESSIONS = 'SCREEN_PROFESSIONS';\n\nexport {\n  SET_SCREEN,\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_SOULSTONE,\n  SCREEN_ALL_HEROES,\n  SCREEN_ITEMS,\n  SCREEN_PVP,\n  SCREEN_PVE,\n  SCREEN_PROFESSIONS,\n};\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#343a40',\n      main: '#343a40',\n      dark: '#343a40',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#cc0040',\n      main: '#cc0040',\n      dark: '#cc0040',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize,Translate  } from \"react-localize-redux\";\n\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport PermIdentity from '@material-ui/icons/PermIdentity';\nimport imgSS from '../images/soulstone.png';\n\nimport {\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_ALL_HEROES,\n  SCREEN_SOULSTONE,\n  SCREEN_ITEMS,\n  SCREEN_PVP,\n  SCREEN_PVE,\n  SCREEN_PROFESSIONS,\n  setScreen,\n} from '../actions/app';\n\n// const LanguageToggle = ({ languages, activeLanguage, setActiveLanguage }) => (\n//   <ul className=\"selector\">\n//     {languages.map(lang => (\n//       <li key={lang.code}>\n//         <button onClick={() => setActiveLanguage(lang.code)}>\n//           {lang.name}\n//         </button>\n//       </li>\n//     ))}\n//   </ul>\n// );\n\nclass WalletAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languages:[]\n    }\n\n    this.props.initialize({\n      languages: [\n        { name: \"English\", code: \"en\" },\n        { name: \"中文\", code: \"cn\" }\n      ],\n      options: { renderToStaticMarkup }\n    });\n\n    this.props.addTranslation(siteTranslations);\n    \n  }\n\n  async componentDidMount() {\n\n\n   let languages= [\n        { name: \"English\", code: \"en\" },\n        { name: \"中文\", code: \"cn\" }\n      ]\n    this.setState({languages});\n\n  }\n\n\n setActiveLanguage = (code) => {\n    this.props.setActiveLanguage(code);\n  };\n\n  getLanguageFlag = (code) => {\n    return `images/languages/${code}.png`;\n  };\n\n  home = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PRE_SALE);\n  };\n\n  myHeroes = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_MY_HEROES);\n  };\n\n  showAllHeroes = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_ALL_HEROES);\n  };\n\n  showItems = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_ITEMS);\n  };\n\n  showPVE = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PVE);\n  };\n  showPVP = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PVP);\n  };\n\n  showProfessions = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PROFESSIONS);\n  };\n\n  showSoulStone = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_SOULSTONE);\n  };\n\n  myAccount = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_MY_ACCOUNT);\n  };\n\n  render() {\n\n    const {languages} = this.state;\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <div className=\"tool-bar\">\n            <div className=\"logo-container\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.home}\n                aria-label=<Translate id=\"general.tronlegend\" />\n              >\n                <span className=\"glowing-pink\"><Translate id=\"general.tronlegend\" /></span>\n              </IconButton>\n\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showSoulStone}\n                aria-label=<Translate id=\"general.soulstone\" />\n              >\n                <span className=\"menulink glowing-gold\"><img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-menu\"\n                        /><Translate id=\"general.soulstone\" /></span>\n              </IconButton>\n\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showAllHeroes}\n                aria-label=<Translate id=\"general.heroes\" />\n              >\n                <span className=\"menulink glowing-red\"><Translate id=\"general.heroes\" /></span>\n              </IconButton>\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showItems}\n                aria-label=<Translate id=\"general.items\" />\n              >\n                <span className=\"menulink glowing-blue\"><Translate id=\"general.items\" /></span>\n              </IconButton>\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showPVE}\n                aria-label=<Translate id=\"general.pve\" />\n              >\n                <span className=\"menulink glowing-blue\"><Translate id=\"general.pve\" /></span>\n              </IconButton>\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showPVP}\n                aria-label=<Translate id=\"general.pvp\" />\n              >\n                <span className=\"menulink glowing-blue\"><Translate id=\"general.pvp\" /></span>\n              </IconButton>\n\n              <IconButton\n                color=\"inherit\"\n                onClick={this.showProfessions}\n                aria-label=<Translate id=\"general.professions\" />\n              >\n                <span className=\"menulink glowing-blue\"><Translate id=\"general.professions\" /></span>\n              </IconButton>\n            </div>\n\n            <div>\n              <Tooltip title=<Translate id=\"general.myheroes\" />>\n                <IconButton\n                  color=\"inherit\"\n                  onClick={this.myHeroes}\n                  aria-label=<Translate id=\"general.myheroes\" />\n                >\n                  <PermIdentity className=\"account-details-button-icon\" />\n                  <span className=\"menulink glowing-blue\"> <Translate id=\"general.myheroes\" /></span>\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=<Translate id=\"general.myaccount\" />>\n                <IconButton\n                  color=\"inherit\"\n                  onClick={this.myAccount}\n                  aria-label=<Translate id=\"general.myaccount\" />\n                >\n                  <PermIdentity className=\"account-details-button-icon\" />\n                  <span className=\"menulink glowing-blue\"> <Translate id=\"general.myaccount\" /></span>\n                </IconButton>\n              </Tooltip>\n\n\n                {languages.map(lang => (\n\n                  <Tooltip title={lang.name}>\n                    <IconButton\n                      id={lang.code}\n                      color=\"inherit\"\n                      onClick={() => this.setActiveLanguage(lang.code)}\n                    >\n                      <img src={this.getLanguageFlag(lang.code)} className=\"image-flag\" />\n                    </IconButton>\n                  </Tooltip>\n\n                ))}\n              \n\n\n              \n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(WalletAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: '#303f9f',\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst WalletSnackbar = ({ open, message, snackbarVariant, hideSnackbar }) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={3000}\n    onClose={hideSnackbar}\n    ContentProps={{\n      'aria-describedby': 'message-id',\n    }}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={message}\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WalletSnackbar);\n","const contractAddress = '412e795abcd3897459b4657241887e682e532cc8bf';\n\nconst gasLimit = 100 * 1000000; // 100 trx\n\nconst tron = {\n  tronWeb: false,\n  contract: false,\n\n  async setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n    this.contract = await tronWeb.contract().at(contractAddress);\n  },\n\n  async getGlobalData() {\n    let dividend = await this.contract.getGlobalClaimedDividend().call();\n    let referral = await this.contract.globalReferral().call();\n\n    return [dividend.toNumber(), referral.toNumber()];\n  },\n\n  async getPlayerData() {\n    let playerData = await this.contract.getPlayerData().call();\n    console.log(playerData);\n\n    return [\n      playerData[0].toNumber(),\n      playerData[1].toNumber(),\n      playerData[2].toNumber(),\n      playerData[3].toNumber(),\n    ];\n  },\n\n  // async getPlayerDataUnopenedPurchases() {\n  //   let purchases = await this.contract.getPlayerDataUnopenedPurchases().call();\n  //\n  //   return purchases;\n  // },\n\n  async balanceOf(address) {\n    const r = await this.contract.balanceOf(address).call();\n\n    return r;\n  },\n\n  // async tokenOfOwnerByIndex(address, index) {\n  //   const r = await this.contract.tokenOfOwnerByIndex(address, index).call();\n  //\n  //   return r;\n  // },\n\n  async getPlayerCards(page) {\n    let cards = await this.contract.getPlayerCards(page).call();\n\n    return cards;\n  },\n\n  // async getCard(id) {\n  //   let r = await this.contract.getCard(id).call();\n  //\n  //   return r;\n  // },\n\n  async claimDividend() {\n    const payAmount = 0;\n    try {\n      const data = await this.contract.claimDividend().send({\n        feeLimit: gasLimit,\n        callValue: payAmount,\n        shouldPollResponse: true,\n      });\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n  },\n\n  async purchase(amount, packType, referrer) {\n\n    let that = this;\n\n    return new Promise(async function(resolve, reject) {\n\n      let price = 0;\n\n      if(packType == 0)\n      {\n        price = await that.contract.getBasePrice().call();\n      }else if(packType == 1)\n      {\n        price = await that.contract.getRarePrice().call();\n      }else if(packType == 2)\n      {\n        price = await that.contract.getEpicPrice().call();\n      }else if(packType == 3)\n      {\n        price = await that.contract.getLegendaryPrice().call();\n      }\n\n\n      const packsNumber = amount;\n      const payAmount = price.toNumber() * packsNumber;\n      try {\n        const data = await that.contract\n          .purchase(packsNumber, packType, referrer)\n          .send({\n            feeLimit: gasLimit,\n            callValue: payAmount,\n            shouldPollResponse: true,\n          }).then(function(data){\n            resolve(data);\n          }).catch(function(err){\n            console.log(err)\n            reject('Error Occured');\n          });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  },\n\n  // async openPacks(id) {\n  //   const payAmount = 0;\n  //   try {\n  //     const data =  await this.contract\n  //     .openPacks(id)\n  //     .send({\n  //       feeLimit: gasLimit,\n  //       callValue: payAmount,\n  //       shouldPollResponse: true,\n  //     });\n  //     console.log(data);\n  //   } catch(e) {\n  //     console.error(e);\n  //   }\n  // },\n\n  // transformMessage(message) {\n  //   return {\n  //     tips: {\n  //       amount: message.tips,\n  //       count: message.tippers.toNumber(),\n  //     },\n  //     owner: this.tronWeb.address.fromHex(message.creator),\n  //     timestamp: message.time.toNumber(),\n  //     message: message.message,\n  //   };\n  // },\n\n  // async fetchMessages(recent = {}, featured = []) {\n  //   // Try to fetch messageID's of top 20 tipped messages (or until there are no more)\n  //   for (let i = 0; i < 20; i++) {\n  //     const message = await this.contract.topPosts(i).call();\n  //\n  //     if (message.toNumber() === 0) break; // End of tips array\n  //\n  //     featured.push(message.toNumber());\n  //   }\n  //\n  //   // Fetch Max(30) most recent messages\n  //   const totalMessages = (await this.contract.current().call()).toNumber();\n  //   const min = Math.max(1, totalMessages - 30);\n  //\n  //   const messageIDs = [\n  //     ...new Set([\n  //       ...new Array(totalMessages - min).fill().map((_, index) => min + index),\n  //       ...featured,\n  //     ]),\n  //   ];\n  //\n  //   await Promise.all(\n  //     messageIDs.map(messageID => this.contract.messages(messageID).call())\n  //   ).then(messages =>\n  //     messages.forEach((message, index) => {\n  //       const messageID = +messageIDs[index];\n  //\n  //       recent[messageID] = this.transformMessage(message);\n  //     })\n  //   );\n  //\n  //   return {\n  //     featured,\n  //     recent,\n  //   };\n  // },\n  //\n  // async fetchMessage(messageID, { recent = {}, featured = [] }) {\n  //   const message = await this.contract.messages(messageID).call();\n  //   const vulnerable = Object.keys(recent)\n  //     .filter(messageID => !featured.includes(messageID))\n  //     .sort((a, b) => recent[b].timestamp - recent[a].timestamp);\n  //\n  //   recent[messageID] = this.transformMessage(message);\n  //\n  //   if (vulnerable.length > 30) {\n  //     const removed = vulnerable.splice(0, vulnerable.length - 30);\n  //\n  //     removed.forEach(messageID => {\n  //       delete recent[messageID];\n  //     });\n  //   }\n  //\n  //   return {\n  //     message: recent[messageID],\n  //     recent,\n  //     featured,\n  //   };\n  // },\n};\n\nexport default tron;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport Button from '@material-ui/core/Button/Button';\n\nimport imgScroll from '../images/scroll.png';\nimport imgDragonWarrior from '../images/dragonwarrior.png';\nimport imgSS from '../images/soulstone.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport { showSnackbar } from '../actions/snackbar';\n\nimport customTheme from './customTheme';\n\nimport { SCREEN_MY_HEROES, setScreen } from '../actions/app';\n\nimport TronWeb from 'tronweb';\nimport Tron from '../utils/tron';\n\nconst FOUNDATION_ADDRESS = 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PreSale extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: null,\n      game: 1,\n      sendAmount: '1',\n      scrollType: '0',\n      isLoading: false,\n    };\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n\n    const { params } = this.props;\n\n    console.log(\"params\",params);\n\n    // tronweb\n\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready,\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false,\n            },\n          });\n\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) return tries++;\n\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object as TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS,\n      };\n\n      window.tronWeb.on('addressChanged', () => {\n        if (this.state.tronWeb.loggedIn) return;\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true,\n          },\n        });\n      });\n    }\n\n    await Tron.setTronWeb(window.tronWeb);\n    const globalData = await Tron.getGlobalData();\n    this.setState({ globalClaimedDividend: globalData[0] });\n    this.setState({ globalReferral: globalData[1] });\n  }\n\n  loadAssets = async activeAccount => {};\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (\n      (this.props.activeAccount !== prevProps.activeAccount ||\n        this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) &&\n      this.props.activeAccount\n    ) {\n      this.loadAssets(this.props.activeAccount);\n    }\n  }\n\n  showAccounts = async event => {\n    const { showAccounts } = this.props;\n    showAccounts(event.currentTarget);\n  };\n\n  isSending = () => {\n    const { isLoading } = this.state;\n    return !!isLoading;\n  };\n\n  roll1 = () => {\n    this.setState({ sendAmount: '1' });\n  };\n  roll10 = () => {\n    this.setState({ sendAmount: '10' });\n  };\n  roll50 = () => {\n    this.setState({ sendAmount: '50' });\n  };\n  roll100 = () => {\n    this.setState({ sendAmount: '100' });\n  };\n\n  scrollCommon = () => {\n    this.setState({ scrollType: '0' });\n  };\n  scrollRare = () => {\n    this.setState({ scrollType: '1' });\n  };\n  scrollEpic = () => {\n    this.setState({ scrollType: '2' });\n  };\n  scrollLegendary = () => {\n    this.setState({ scrollType: '3' });\n  };\n\n  sunToTrx(sun) {\n    if (!sun) {\n      return '';\n    }\n    return sun / 1000000;\n  }\n\n  purchaseScroll = async () => {\n    const { sendAmount,scrollType } = this.state;\n    const { setScreen, showSnackbar } = this.props;\n    await Tron.purchase(sendAmount, scrollType, 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d')\n      .then(function(data) {\n        showSnackbar('Check your heroes!');\n        setScreen(SCREEN_MY_HEROES);\n      })\n      .catch(function(err) {\n        console.log(err)\n        showSnackbar(err);\n      });\n  };\n\n \n\n  render() {\n    const { globalClaimedDividend, globalReferral } = this.state;\n\n    const { sendAmount, scrollType } = this.state;\n\n    // let installed = tronWeb ? tronWeb.installed : null;\n    // let loggedIn = tronWeb ? tronWeb.loggedIn : null;\n    // console.log(installed)\n    // console.log(loggedIn)\n\n    const amount = parseInt(sendAmount, 10);\n    let btn1Class = amount === 1 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn10Class =\n      amount === 10 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn50Class =\n      amount === 50 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn100Class =\n      amount === 100 ? 'glowing-blue medium-text' : 'glowing-silver';\n\n    const scroll = parseInt(scrollType, 10);\n    let btnCommonClass = scroll === 0 ? 'glowing-green medium-text' : 'glowing-silver';\n    let btnRareClass =\n      scroll === 1 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btnEpicClass =\n      scroll === 2 ? 'glowing-pink medium-text' : 'glowing-silver';\n    let btnLegendaryClass =\n      scroll === 3 ? 'glowing-gold medium-text' : 'glowing-silver';\n    let basePrice = 50;\n    let stonePrice = 50;\n    let buyText = \"presale.scrollcommon\";\n    if(scroll == 0)\n    { \n      buyText = \"presale.scrollcommon\";\n      basePrice = 50;\n    }else if(scroll == 1)\n    {\n      buyText = \"presale.scrollrare\";\n      basePrice = 500;\n    }else if(scroll == 2)\n    {\n      buyText = \"presale.scrollepic\";\n      basePrice = 10000;\n    }else if(scroll == 3)\n    {\n      buyText = \"presale.scrolllegendary\";\n      basePrice = 100000;\n    }\n\n   let cost = sendAmount * basePrice;\n   let stoneNumber = cost/stonePrice;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"home\">\n          <div className=\"cards\">\n            <div color=\"primary\" className=\"card home-card\">\n              <Typography variant=\"h4\" color=\"secondary\">\n               \n                <span className=\"glowing-pink white\" id=\"trigger-scroll\">\n                  <h1>\n                    <Translate id=\"presale.title\" />\n                  </h1>\n                  <Translate id=\"presale.subtitle\" />\n                </span>\n              </Typography>\n              <div className=\"dice-slider\">\n                <Grid container spacing={24}>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <span>\n                      <span className=\"large-text glowing-green\">30</span>{' '}\n                      <Translate id=\"presale.description1\" />,{' '} <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-medium\"\n                        />\n                      <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span> {' '}\n                      <Translate id=\"general.dividends\" />,{' '}\n\n                      <Translate id=\"presale.limitedtime\" /> <span className=\"glowing-red\">50%</span> <Translate id=\"presale.discount\" />\n\n                    </span>\n                  </Grid>\n                </Grid>\n                <div className=\"space\" />\n                <Grid container spacing={24}>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <Translate id=\"presale.globaldividends\" />:{' '}\n                    <span className=\"large-text glowing-blue\">\n                      {this.sunToTrx(globalClaimedDividend)} TRX\n                    </span>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                    <Translate id=\"presale.globalreferrals\" />:{' '}\n                    <span className=\"large-text glowing-blue\">\n                      {this.sunToTrx(globalReferral)} TRX\n                    </span>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div className=\"card send-card\">\n                <Grid container spacing={24}>\n                  <Grid item xs={12} md={6} lg={6}>\n                    <div\n                      className=\"image-placeholder\"\n                      data-aos=\"zoom-in\"\n                      data-aos-delay=\"50\"\n                      data-aos-anchor=\"trigger-scroll\"\n                      data-aos-anchor-placement=\"top-center\"\n                    >\n                      <img\n                        src={imgScroll}\n                        alt=\"Get Hero\"\n                        className=\"image-scroll animate-flicker\"\n                      />\n                    </div>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"large-text glowing-blue\">\n                          {cost} TRX{' '}\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n\n                      <div><Translate id={buyText} /></div>\n\n                      <div className=\"space\" />\n                      <div>\n                        <Translate id=\"presale.alsorewards\" />\n                        <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-small\"\n                        />\n                        <span className=\"glowing-gold\">\n                          x{stoneNumber} <Translate id=\"general.soulstone\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"hidden\">\n                        <TextField\n                          required\n                          name=\"sendAmount\"\n                          label=\"Get Heroes\"\n                          className=\"send-token\"\n                          value={sendAmount}\n                          margin=\"normal\"\n                          type=\"number\"\n                          placeholder=\"0.00\"\n                        />\n                        <TextField\n                          required\n                          name=\"scrollType\"\n                          label=\"\"\n                          className=\"send-token\"\n                          value={scrollType}\n                          margin=\"normal\"\n                          type=\"number\"\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                      <Grid container spacing={0}>\n                        <Grid item xs={12} md={12} lg={12}>\n                          <Button\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.scrollCommon}\n                          >\n                            <span className={btnCommonClass}><Translate id=\"general.common\" /></span>\n                          </Button>\n                          <Button\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.scrollRare}\n                          >\n                            <span className={btnRareClass}><Translate id=\"general.rare\" /></span>\n                          </Button>\n                          <Button\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.scrollEpic}\n                          >\n                            <span className={btnEpicClass}><Translate id=\"general.epic\" /></span>\n                          </Button>\n\n                          <Button\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.scrollLegendary}\n                          >\n                            <span className={btnLegendaryClass}><Translate id=\"general.legendary\" /></span>\n                          </Button>\n                        </Grid>\n                      </Grid>\n                      <Grid container spacing={0}>\n                        <Grid item xs={12} md={12} lg={12}>\n                          <Button\n                            id=\"roll-min-button\"\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.roll1}\n                          >\n                            <span className={btn1Class}>1</span>\n                          </Button>\n                          <Button\n                            id=\"roll-2x-button\"\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.roll10}\n                          >\n                            <span className={btn10Class}>10</span>\n                          </Button>\n                          <Button\n                            id=\"roll-2x-button\"\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.roll50}\n                          >\n                            <span className={btn50Class}>50</span>\n                          </Button>\n\n                          <Button\n                            id=\"roll-max-button\"\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={this.roll100}\n                          >\n                            <span className={btn100Class}>100</span>\n                          </Button>\n                        </Grid>\n                      </Grid>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12} md={12} lg={12}>\n                          <Button\n                            id=\"send-token-button\"\n                            className=\"actionbutton\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"large\"\n                            onClick={this.purchaseScroll}\n                            disabled={this.isSending()}\n                          >\n                            <Translate id=\"presale.buyscroll\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n              <div className=\"card send-card\" id=\"trigger-intro\">\n                <Grid container spacing={24}>\n                  <Grid item xs={12} md={6} lg={6}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"large-text glowing-pink\">\n                          <Translate id=\"general.tronlegend\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <span className=\"glowing-pink\">\n                          <Translate id=\"general.tronlegend\" /></span> <Translate id=\"presale.intro1\" />.\n                      </div>\n                      <div>\n                        <Translate id=\"presale.intro2\" />.\n                      </div>\n                      <div>\n                        <Translate id=\"presale.intro3\" />{' '}\n                        <span className=\"glowing-blue\">\n                          <Translate id=\"presale.intro4\" />\n                        </span>{' '}\n                        <Translate id=\"presale.intro5\" />.\n                      </div>\n                      <div>\n                      <span className=\"glowing-red large-text\"><Translate id=\"presale.intro6\" /></span>\n                      </div>\n\n                    </div>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6}>\n                    <div\n                      className=\"image-placeholder\"\n                      data-aos=\"zoom-in\"\n                      data-aos-delay=\"50\"\n                      data-aos-anchor=\"trigger-intro\"\n                      data-aos-anchor-placement=\"top-center\"\n                    >\n                      <img\n                        src={imgDragonWarrior}\n                        alt=\"Non Fungible Token\"\n                        className=\"image-scroll\"\n                      />\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nPreSale.propTypes = {\n  // classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(PreSale));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\nimport heroTranslations from \"../translations/hero.json\";\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { showSnackbar } from '../actions/snackbar';\n\nimport { setScreen } from '../actions/app';\n\nimport TronWeb from 'tronweb';\nimport Tron from '../utils/tron';\n\nimport presetHeroes from '../config/hero';\nimport presetSkills from '../config/skill';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nconst FOUNDATION_ADDRESS = 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d';\n\nclass MyHeroes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      purchases: null,\n      totalHeroes: 0,\n      heroes: [],\n      cards: [],\n      heroGroups: [],\n      lastUpdatedTime: null,\n    };\n    this.props.addTranslation(siteTranslations);\n    this.props.addTranslation(heroTranslations);\n  }\n\n  async componentDidMount() {\n    await this.initTronWeb();\n    await this.loadCards();\n    await this.loadCardsGroup();\n    window.addEventListener('load', AOS.refresh);\n  }\n\n  async initTronWeb() {\n    // tronweb\n\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready,\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false,\n            },\n          });\n\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) return tries++;\n\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object as TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS,\n      };\n\n      window.tronWeb.on('addressChanged', () => {\n        if (this.state.tronWeb.loggedIn) return;\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true,\n          },\n        });\n      });\n    }\n\n    await Tron.setTronWeb(window.tronWeb);\n  }\n\n  getPlayerCardsGroup = async pages => {\n    return new Promise(async resolve => {\n      let promises = [];\n\n      for (let i = 0; i < pages; ++i) {\n        promises.push(this.getPlayerCardsByPage(i));\n      }\n\n      Promise.all(promises)\n        .then(results => {\n          console.log(results);\n\n          let ids = [];\n          let protos = [];\n          let purities = [];\n\n          for (let i = 0; i < results.length; i++) {\n            let result = results[i];\n            for (let j = 0; j < result.ids.length; j++) {\n              ids.push(result.ids[j]);\n            }\n            for (let j = 0; j < result.protos.length; j++) {\n              protos.push(result.protos[j]);\n            }\n            for (let j = 0; j < result.purities.length; j++) {\n              purities.push(result.purities[j]);\n            }\n          }\n\n          const heroes = {\n            ids: ids,\n            protos: protos,\n            purities: purities,\n          };\n\n          this.setState({ heroes });\n\n          resolve(true);\n        })\n        .catch(e => {\n          resolve(true);\n        });\n    });\n  };\n\n  getPlayerCardsByPage = async page => {\n    return new Promise(async resolve => {\n      const cards = await Tron.getPlayerCards(page);\n      resolve(cards);\n    });\n  };\n\n  loadCards = async () => {\n    const totalCardsCount = await Tron.balanceOf(\n      window.tronWeb.defaultAddress.base58\n    );\n\n    this.setState({ totalHeroes: totalCardsCount.toNumber() });\n\n    let pages = totalCardsCount.toNumber() / 100;\n\n    if (pages * 100 < totalCardsCount) {\n      pages += 1;\n    }\n    console.log('pages ' + pages);\n\n    await this.getPlayerCardsGroup(pages);\n  };\n\n  loadCardsGroup = async () => {\n    const { heroes } = this.state;\n\n    let cards = heroes;\n\n    let { heroGroups } = this.state;\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      if(ids)\n      {\n      for (var i = 0; i < ids.length; i++) {\n        let id = ids[i].toNumber();\n        let proto = protos[i];\n        let purity = purities[i];\n\n        const heroData = this.getHeroData(proto);\n        const rarity = heroData.ra;\n\n        var foundRarityIndex = -1;\n        var foundHero = false;\n        for (var j = 0; j < heroGroups.length; j++) {\n          var heroGroup = heroGroups[j];\n          if (heroGroup.rarity === rarity) {\n            // found Rarity\n            foundRarityIndex = j;\n            if (heroGroup.heroes) {\n              for (var k = 0; k < heroGroup.heroes.length; k++) {\n                var hero = heroGroup.heroes[k];\n\n                if (hero.proto === proto) {\n                  // found\n                  foundHero = true;\n\n                  if (hero.bestPurity < purity) {\n                    hero.bestPurity = purity;\n                    hero.bestId = id;\n                  }\n\n                  hero.count += 1;\n                }\n              }\n            }\n          }\n        }\n\n        if (!foundHero) {\n          //push card\n          const hero = {\n            proto: proto,\n            bestPurity: purity,\n            bestId: id,\n            count: 1,\n          };\n\n          if (foundRarityIndex > -1) {\n            // push to exisiting group\n            const heroGroup = heroGroups[foundRarityIndex];\n            heroGroup.heroes.push(hero);\n          } else {\n            const newheroes = [];\n            newheroes.push(hero);\n\n            const heroGroup = {\n              rarity: rarity,\n              heroes: newheroes,\n            };\n            heroGroups.push(heroGroup);\n          }\n        } // if hero not found\n      } // for i loop\n    }\n    } // if cards\n\n    // this.setState({heroes});\n    this.setState({ heroGroups });\n  };\n\n  Comparator = (a, b) => {\n    if (a.rarity < b.rarity) return 1;\n    if (a.rarity > b.rarity) return -1;\n    return 0;\n  };\n\n  reOrderHeroGroups = heroGroups => {\n    return heroGroups.sort(this.Comparator);\n  };\n\n  getHeroData = id => {\n    for (let i = 0; i < presetHeroes.length; i++) {\n      if (presetHeroes[i].id === id) {\n        return presetHeroes[i];\n      }\n    }\n    return null;\n  };\n\n  getHeroSkills = ids => {\n    let skills = [];\n    if (ids) {\n      for (let i = 0; i < ids.length; i++) {\n        let id = ids[i];\n\n        for (let j = 0; j < presetSkills.length; j++) {\n          if (presetSkills[j].id === id) {\n            skills.push(presetSkills[j]);\n          }\n        }\n      }\n    }\n\n    return skills;\n  };\n\n  getAttackImage = rarity => {\n    let image = 'images/misc/sword-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/sword-common.png';\n        break;\n      case 1:\n        image = 'images/misc/sword-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/sword-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/sword-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/sword-mythic.png';\n        break;\n      default:\n        image = 'images/misc/sword-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getDefenceImage = rarity => {\n    let image = 'images/misc/shield-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/shield-common.png';\n        break;\n      case 1:\n        image = 'images/misc/shield-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/shield-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/shield-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/shield-mythic.png';\n        break;\n      default:\n        image = 'images/misc/shield-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getHealthImage = rarity => {\n    console.log(rarity);\n\n    let image = 'images/misc/heart-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/heart-common.png';\n        break;\n      case 1:\n        image = 'images/misc/heart-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/heart-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/heart-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/heart-mythic.png';\n        break;\n      default:\n        image = 'images/misc/heart-special.png';\n        break;\n    }\n\n    return image;\n  };\n  getHealingImage = rarity => {\n    let image = 'images/misc/healing-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/healing-common.png';\n        break;\n      case 1:\n        image = 'images/misc/healing-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/healing-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/healing-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/healing-mythic.png';\n        break;\n      default:\n        image = 'images/misc/healing-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getPlateCss = rarity => {\n    let css = 'plate-silver';\n    switch (rarity) {\n      case 0:\n        css = 'plate-green';\n        break;\n      case 1:\n        css = 'plate-blue';\n        break;\n      case 2:\n        css = 'plate-pink';\n        break;\n      case 3:\n        css = 'plate-gold';\n        break;\n      case 4:\n        css = 'plate-red';\n        break;\n      default:\n        css = 'plate-silver';\n        break;\n    }\n\n    return css;\n  };\n\n  getSkillCss = rarity => {\n    let css = 'skill-silver';\n    switch (rarity) {\n      case 0:\n        css = 'skill-green';\n        break;\n      case 1:\n        css = 'skill-blue';\n        break;\n      case 2:\n        css = 'skill-pink';\n        break;\n      case 3:\n        css = 'skill-gold';\n        break;\n      case 4:\n        css = 'skill-red';\n        break;\n      default:\n        css = 'skill-silver';\n        break;\n    }\n\n    return css;\n  };\n\n  getRarityClass = rarity => {\n    let text = 'Common';\n    switch (rarity) {\n      case 0:\n        text = 'Common';\n        break;\n      case 1:\n        text = 'Rare';\n        break;\n      case 2:\n        text = 'Epic';\n        break;\n      case 3:\n        text = 'Legendary';\n        break;\n      case 4:\n        text = 'Mythic';\n        break;\n      case 5: // This was 4, but it was a bug\n        text = 'Special';\n        break;\n      default:\n        text = 'Common';\n        break;\n    }\n\n    return text;\n  };\n  getRarityText = rarity => {\n    let text = 'general.common';\n    switch (rarity) {\n      case 0:\n        text = 'general.common';\n        break;\n      case 1:\n        text = 'general.rare';\n        break;\n      case 2:\n        text = 'general.epic';\n        break;\n      case 3:\n        text = 'general.legendary';\n        break;\n      case 4:\n        text = 'general.mythic';\n        break;\n      case 5: // This was 4, but it was a bug\n        text = 'general.special';\n        break;\n      default:\n        text = 'general.common';\n        break;\n    }\n\n    return text;\n  };\n\n  getRoleImage = role => {\n    let img = 'images/misc/damage.png';\n    switch (role) {\n      case 0:\n        img = 'images/misc/tank.png';\n        break;\n      case 1:\n        img = 'images/misc/damage.png';\n        break;\n      case 2:\n        img = 'images/misc/healer.png';\n        break;\n      default:\n        img = 'images/misc/damage.png';\n        break;\n    }\n\n    return img;\n  };\n\n  renderWalletInfo() {\n    const { totalHeroes, heroGroups } = this.state;\n\n    const heroGroupsReordered = this.reOrderHeroGroups(heroGroups);\n\n    let totalCount = 0;\n    return (\n      <div className=\"cards\">\n        <div color=\"primary\" className=\"card game-card\">\n          <Typography variant=\"h4\" color=\"secondary\">\n            <span className=\"glowing-pink white\"><Translate id=\"general.myheroes\" /></span>\n          </Typography>\n\n          <div className=\"my-account\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Typography variant=\"h6\" color=\"primary\">\n                  <span className=\"glowing-pink white\">\n                    {totalHeroes} <Translate id=\"general.heroes\" />\n                  </span>\n                </Typography>\n                <div className=\"space\" />\n\n                <Grid container spacing={24}>\n                  {heroGroupsReordered.map(heroGroup => {\n                    // console.log(heroGroup.heroes.length)\n\n                    return heroGroup.heroes.map(hero => {\n                      const heroName = `hero.${hero.proto}n`;\n                      const heroData = this.getHeroData(hero.proto);\n                      const heroImage = `images/hero/${hero.proto}.png`;\n\n                      const attackImage = this.getAttackImage(heroData.ra);\n                      const defenceImage = this.getDefenceImage(heroData.ra);\n                      const healthImage = this.getHealthImage(heroData.ra);\n                      const healingImage = this.getHealingImage(heroData.ra);\n\n                      const skills = this.getHeroSkills(heroData.s);\n\n                      const heroCount = hero.count;\n\n                      totalCount = totalCount + heroCount;\n\n                      let plateCss = this.getPlateCss(heroData.ra);\n                      let skillBackgroundCss = this.getSkillCss(heroData.ra);\n                      let roleImageSrc = this.getRoleImage(heroData.rl);\n                      let raritycla = this.getRarityClass(heroData.ra);\n                      let rarityText = this.getRarityText(heroData.ra);\n                      let rarityClass = `hero-rarity ${raritycla}`;\n\n                      let bgClass = `bg-${hero.proto}`;\n\n                      const boxCss = `hero-plate card ${plateCss}`;\n                      const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                      return (\n                        <Grid\n                          item\n                          xs={12}\n                          sm={6}\n                          md={3}\n                          lg={3}\n                          className=\"card\"\n                        >\n                          <div\n                            className=\"hero-placeholder\"\n                            data-aos=\"flip-right\"\n                            data-aos-delay=\"50\"\n                            data-aos-anchor-placement=\"top-center\"\n                          >\n                            <div className=\"hero-attack\">{hero.bestPurity}</div>\n                            <div className=\"hero-defence\">{heroCount}</div>\n                            <div className=\"hero-role\">\n                              <img\n                                className=\"image-skill-small\"\n                                src={roleImageSrc}\n                                alt=\"hero\"\n                              />\n                            </div>\n                            <div className={rarityClass}><Translate id={rarityText} /></div>\n                            <div className={boxCss}>\n                              <div className={bgClass}>\n                                <img\n                                  className=\"image-hero-small\"\n                                  src={heroImage}\n                                  alt=\"hero\"\n                                />\n                              </div>\n\n                              <div className=\"space\" />\n                              <div className=\"hero-name-banner\">\n                                <Translate id={heroName} />\n                              </div>\n\n                              <div className=\"hero-stats-plate\">\n                                {heroData.hl > 0 && (\n                                  <Grid container spacing={0}>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={attackImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.a}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={defenceImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.d}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healthImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.he}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healingImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.hl}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  </Grid>\n                                )}\n\n                                {heroData.hl === 0 && (\n                                  <Grid container spacing={0}>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={attackImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.a}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={defenceImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.d}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healthImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.he}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  </Grid>\n                                )}\n                              </div>\n\n                              <div className={skillCss}>\n                                <span className=\"hero-skill-banner\">\n                                 <Translate id=\"hero.skill\" />\n                                </span>\n                                {skills.map(skill => {\n                                  let imageSrc = `images/skill/${skill.id}.png`;\n                                  let skillName = `skill.${skill.id}n`;\n                                  let skillDesc = `skill.${skill.id}d`;\n                                  return (\n                                    <div className=\"hero-skill-item\">\n                                      <div className=\"icon\">\n                                        <img\n                                          className=\"image-skill-small\"\n                                          src={imageSrc}\n                                          alt=\"hero\"\n                                        />\n                                      </div>\n\n                                      <div className=\"description text-shadow\">\n                                        <div className=\"title text-shadow\">\n                                          <Translate id={skillName} />\n                                        </div>\n                                        <Translate id={skillDesc} />\n                                      </div>\n                                    </div>\n                                  );\n                                })}\n\n                                <div className=\"space\" />\n                              </div>\n                            </div>\n                          </div>\n                        </Grid>\n                      );\n                    });\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderWalletInfo();\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(MyHeroes));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport TextField from '@material-ui/core/TextField/TextField';\n\nimport Button from '@material-ui/core/Button/Button';\n\nimport imgTron from '../images/tron-logo.png';\nimport imgSS from '../images/soulstone.png';\nimport { showSnackbar } from '../actions/snackbar';\n\nimport { setScreen } from '../actions/app';\n\nimport TronWeb from 'tronweb';\nimport Tron from '../utils/tron';\n\nimport presetHeroes from '../config/hero';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init();\nconst styles = {\n  root: {\n    width: '100%',\n    padding: '30px 0 10px',\n  },\n  cssOutlinedInput: {\n    width:500,\n    color: '#fff',\n    textShadow:\n      'rgb(43, 0, 43) 0px 0px 5px, rgb(204, 0, 204) 0px 0px 20px, rgb(255, 0, 255) 0px 0px 10px',\n    borderColor: '#fff',\n  },\n  cssOutlinedInputReadOnly: {\n    color: '#fff',\n    textShadow:\n      'rgb(43, 0, 43) 0px 0px 5px, rgb(204, 0, 204) 0px 0px 20px, rgb(255, 0, 255) 0px 0px 10px',\n    borderColor: '#fff',\n    '&$cssFocused $notchedOutline': {\n      borderColor: '#fff',\n      textShadow:\n        'rgb(43, 0, 43) 0px 0px 5px, rgb(204, 0, 204) 0px 0px 20px, rgb(255, 0, 255) 0px 0px 10px',\n    },\n  },\n  notchedOutline: {\n    borderColor: '#fff',\n    color: '#fff',\n  },\n};\n\nconst FOUNDATION_ADDRESS = 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d';\n\nclass MyAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      purchases: null,\n      totalHeroes: 0,\n      heroes: [],\n      cards: [],\n      heroGroups: [],\n      lastUpdatedTime: null,\n\n      stones: 0,\n      claimableDividend: 0,\n      claimedDividend: 0,\n      referral: 0,\n    };\n    this.props.addTranslation(siteTranslations);\n  }\n\n\n  async componentDidMount() {\n    await this.initTronWeb();\n    await this.loadCards();\n    await this.loadPlayerData();\n    window.addEventListener('load', AOS.refresh);\n  }\n\n  async initTronWeb() {\n    // tronweb\n\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready,\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false,\n            },\n          });\n\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) return tries++;\n\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object as TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS,\n      };\n\n      window.tronWeb.on('addressChanged', () => {\n        if (this.state.tronWeb.loggedIn) return;\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true,\n          },\n        });\n      });\n    }\n\n    await Tron.setTronWeb(window.tronWeb);\n  }\n\n  getPlayerCardsGroup = async pages => {\n    return new Promise(async resolve => {\n      let promises = [];\n\n      for (var i = 0; i < pages; ++i) {\n        promises.push(this.getPlayerCardsByPage(i));\n      }\n\n      Promise.all(promises)\n        .then(results => {\n          console.log(results);\n\n          let ids = [];\n          let protos = [];\n          let purities = [];\n\n          for (let i = 0; i < results.length; i++) {\n            let result = results[i];\n            for (let j = 0; j < result.ids.length; j++) {\n              ids.push(result.ids[j]);\n            }\n            for (let j = 0; j < result.protos.length; j++) {\n              protos.push(result.protos[j]);\n            }\n            for (let j = 0; j < result.purities.length; j++) {\n              purities.push(result.purities[j]);\n            }\n          }\n\n          const heroes = {\n            ids: ids,\n            protos: protos,\n            purities: purities,\n          };\n\n          this.setState({ heroes });\n\n          resolve(true);\n        })\n        .catch(e => {\n          resolve(true);\n        });\n    });\n  };\n\n  getPlayerCardsByPage = async page => {\n    return new Promise(async resolve => {\n      const cards = await Tron.getPlayerCards(page);\n      resolve(cards);\n    });\n  };\n\n  loadPlayerData = async () => {\n    const playerData = await Tron.getPlayerData();\n\n    this.setState({ stones: playerData[0] });\n    this.setState({ claimableDividend: playerData[1] });\n    this.setState({ claimedDividend: playerData[2] });\n    this.setState({ referral: playerData[3] });\n  };\n\n  sunToTrx(sun) {\n    if (!sun) {\n      return 0;\n    }\n    return sun / 1000000;\n  }\n\n  loadCards = async () => {\n    const totalCardsCount = await Tron.balanceOf(\n      window.tronWeb.defaultAddress.base58\n    );\n\n    this.setState({ totalHeroes: totalCardsCount.toNumber() });\n\n    let pages = totalCardsCount.toNumber() / 100;\n\n    if (pages * 100 < totalCardsCount) {\n      pages += 1;\n    }\n    console.log('pages ' + pages);\n\n    await this.getPlayerCardsGroup(pages);\n  };\n\n  loadCardsGroup = async () => {\n    const { heroes } = this.state;\n\n    let cards = heroes;\n\n    let { heroGroups } = this.state;\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i].toNumber();\n        const proto = protos[i];\n        const purity = purities[i];\n\n        const heroData = this.getHeroData(proto);\n        const rarity = heroData.ra;\n\n        let foundRarityIndex = -1;\n        let foundHero = false;\n        for (let j = 0; j < heroGroups.length; j++) {\n          const heroGroup = heroGroups[j];\n          if (heroGroup.rarity === rarity) {\n            // found Rarity\n            foundRarityIndex = j;\n            if (heroGroup.heroes) {\n              for (let k = 0; k < heroGroup.heroes.length; k++) {\n                const hero = heroGroup.heroes[k];\n\n                if (hero.proto === proto) {\n                  // found\n                  foundHero = true;\n\n                  if (hero.bestPurity < purity) {\n                    hero.bestPurity = purity;\n                    hero.bestId = id;\n                  }\n\n                  hero.count += 1;\n                }\n              }\n            }\n          }\n        }\n\n        if (!foundHero) {\n          //push card\n          const hero = {\n            proto: proto,\n            bestPurity: purity,\n            bestId: id,\n            count: 1,\n          };\n\n          if (foundRarityIndex > -1) {\n            // push to exisiting group\n            const heroGroup = heroGroups[foundRarityIndex];\n            heroGroup.heroes.push(hero);\n          } else {\n            const newheroes = [];\n            newheroes.push(hero);\n\n            const heroGroup = {\n              rarity: rarity,\n              heroes: newheroes,\n            };\n            heroGroups.push(heroGroup);\n          }\n        } // if hero not found\n      } // for i loop\n    } // if cards\n\n    // this.setState({heroes});\n    this.setState({ heroGroups });\n  };\n\n  claimDividend = async () => {\n    const { showSnackbar } = this.props;\n    await Tron.claimDividend()\n      .then(function(data) {\n        showSnackbar('Dividend claimed');\n      })\n      .catch(function(err) {\n        showSnackbar('Err');\n      });\n  };\n\n  isSending = () => {\n    const { isLoading } = this.state;\n    return !!isLoading;\n  };\n\n  getHeroData = id => {\n    for (var i = 0; i < presetHeroes.length; i++) {\n      if (presetHeroes[i].id === id) {\n        return presetHeroes[i];\n      }\n    }\n    return null;\n  };\n\n  copyLink= async() => {\n    const { showSnackbar } = this.props;\n    showSnackbar('Copied');\n  };\n\n\n  renderPlayerData() {\n\n    const {  classes } = this.props;\n    const { stones, claimableDividend, claimedDividend, referral } = this.state;\n\n    let myReferralLink = \"http://localhost:3000?r=\" + window.tronWeb.defaultAddress.base58;\n    return (\n      <div className=\"home\">\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <Typography variant=\"h4\" color=\"secondary\">\n              <span className=\"glowing-pink white\"><Translate id=\"general.myaccount\" /></span>\n            </Typography>\n            <div className=\"kingdom-placehoder\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <Grid container spacing={24} className=\"card\">\n                    <Grid item xs={12} md={12} lg={12}>\n                      <span>\n                        <Translate id=\"general.soulstone\" />:{' '}\n                        <span className=\"large-text glowing-gold\">\n                          {stones}\n                        </span>{' '}\n                        <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-medium\"\n                        />\n                      </span>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <span>\n                        <Translate id=\"myaccount.claimeddividend\" />:{' '}\n                        <span className=\"large-text glowing-blue\">\n                          {this.sunToTrx(claimedDividend)} TRX\n                        </span>{' '}\n                      </span>\n                    </Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                      <span>\n                        <Translate id=\"myaccount.claimedreferral\" />:{' '}\n                        <span className=\"large-text glowing-blue\">\n                          {this.sunToTrx(referral)} TRX\n                        </span>{' '}\n                      </span>\n                    </Grid>\n\n                    <Grid item xs={12} md={12} lg={12}>\n                      <div>\n                        <Translate id=\"myaccount.myreferrallink\" /> (<Translate id=\"myaccount.intro1\" />  <span className=\"glowing-pink\">\n                          10%\n                        </span>{' '} <Translate id=\"myaccount.intro2\" />)\n                      </div>\n                      <div>\n                       \n                       <TextField\n                        \n                        label=\"\"\n                        name=\"selectedAsset\"\n                        className=\"referral-link-box\"\n                        value={myReferralLink}\n                        margin=\"normal\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                          classes: {\n                            root: classes.cssLabel,\n                          },\n                        }}\n                        InputProps={{\n                          classes: {\n                            root: classes.cssOutlinedInput,\n                            input: classes.cssOutlinedInputReadOnly,\n                            notchedOutline: classes.notchedOutline,\n                          }\n                        }}\n                      />\n                      </div>\n                      <div>\n                        <CopyToClipboard text={myReferralLink}\n                          onCopy={()=>{this.copyLink()}}>\n                          <Button\n                            className=\"roll-quick-button\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                          >\n                            <span className=\"glowing-red\"><Translate id=\"myaccount.copylink\" /></span>\n                          </Button>\n                        </CopyToClipboard>\n                      </div>\n                    </Grid>\n\n                    \n                  </Grid>\n                </Grid>\n\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"card\">\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12} lg={12}>\n                        <div>\n                          <Translate id=\"myaccount.intro3\" />{' '}\n                          <span className=\"large-text glowing-blue\">\n                            {this.sunToTrx(claimableDividend)} TRX\n                          </span>{' '}\n                        </div>\n                        <div className=\"space\" />\n                        <div\n                          className=\"tron-logo-placeholder\"\n                          data-aos=\"zoom-in\"\n                          data-aos-delay=\"50\"\n                          data-aos-anchor-placement=\"top-center\"\n                        >\n                          <img\n                            src={imgTron}\n                            alt=<Translate id=\"myaccount.claim\" />\n                            className=\"image-tron\"\n                          />\n                        </div>\n                      </Grid>\n                      <Grid item xs={12} md={12} lg={12}>\n                        <div className=\"buy-placeholder\">\n                          <Grid container spacing={24}>\n                            <Grid item xs={12} md={12} lg={12}>\n                              <Button\n                                id=\"send-token-button\"\n                                className=\"actionbutton\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                size=\"large\"\n                                onClick={this.claimDividend}\n                                disabled={this.isSending()}\n                              >\n                                <Translate id=\"myaccount.claim\" />\n                              </Button>\n                            </Grid>\n                          </Grid>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderPlayerData();\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n  showSnackbar,\n};\n\nMyAccount.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(withLocalize(MyAccount)));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\nimport heroTranslations from \"../translations/hero.json\";\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { showSnackbar } from '../actions/snackbar';\n\nimport { setScreen } from '../actions/app';\n\nimport TronWeb from 'tronweb';\nimport Tron from '../utils/tron';\n\nimport presetHeroes from '../config/hero';\nimport presetSkills from '../config/skill';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nconst FOUNDATION_ADDRESS = 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d';\n\nclass AllHeroes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      purchases: null,\n      totalHeroes: 0,\n      heroes: [],\n      cards: [],\n      heroGroups: [],\n      lastUpdatedTime: null,\n    };\n    this.props.addTranslation(siteTranslations);\n    this.props.addTranslation(heroTranslations);\n  }\n\n  async componentDidMount() {\n    await this.initTronWeb();\n    await this.loadCards();\n    await this.loadCardsGroup();\n    window.addEventListener('load', AOS.refresh);\n  }\n\n  async initTronWeb() {\n    // tronweb\n\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready,\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false,\n            },\n          });\n\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) return tries++;\n\n        this.setState({\n          tronWeb: tronWebState,\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object as TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS,\n      };\n\n      window.tronWeb.on('addressChanged', () => {\n        if (this.state.tronWeb.loggedIn) return;\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true,\n          },\n        });\n      });\n    }\n\n    await Tron.setTronWeb(window.tronWeb);\n  }\n\n  getPlayerCardsGroup = async pages => {\n    return new Promise(async resolve => {\n      let ids = [];\n      let protos = [];\n      let purities = [];\n\n      for (var i = 0; i < presetHeroes.length; i++) {\n        ids.push(presetHeroes[i].id);\n        protos.push(presetHeroes[i].id);\n        purities.push(0);\n      }\n\n      const heroes = {\n        ids: ids,\n        protos: protos,\n        purities: purities,\n      };\n\n      this.setState({ heroes });\n\n      resolve(true);\n    });\n  };\n\n  loadCards = async () => {\n    this.setState({ totalHeroes: 30 });\n\n    await this.getPlayerCardsGroup();\n  };\n\n  loadCardsGroup = async () => {\n    const { heroes } = this.state;\n\n    let cards = heroes;\n\n    let { heroGroups } = this.state;\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      if(ids){\n      for (let i = 0; i < ids.length; i++) {\n        let id = ids[i];\n        let proto = protos[i];\n        let purity = purities[i];\n        console.log(proto);\n        const heroData = this.getHeroData(proto);\n        const rarity = heroData.ra;\n\n        let foundRarityIndex = -1;\n        let foundHero = false;\n        for (var j = 0; j < heroGroups.length; j++) {\n          const heroGroup = heroGroups[j];\n          if (heroGroup.rarity === rarity) {\n            // found Rarity\n            foundRarityIndex = j;\n            if (heroGroup.heroes) {\n              for (let k = 0; k < heroGroup.heroes.length; k++) {\n                const hero = heroGroup.heroes[k];\n\n                if (hero.proto === proto) {\n                  // found\n                  foundHero = true;\n\n                  if (hero.bestPurity < purity) {\n                    hero.bestPurity = purity;\n                    hero.bestId = id;\n                  }\n\n                  hero.count += 1;\n                }\n              }\n            }\n          }\n        }\n\n        if (!foundHero) {\n          //push card\n          const hero = {\n            proto: proto,\n            bestPurity: purity,\n            bestId: id,\n            count: 1,\n          };\n\n          if (foundRarityIndex > -1) {\n            // push to exisiting group\n            const heroGroup = heroGroups[foundRarityIndex];\n            heroGroup.heroes.push(hero);\n          } else {\n            let newheroes = [];\n            newheroes.push(hero);\n\n            const heroGroup = {\n              rarity: rarity,\n              heroes: newheroes,\n            };\n            heroGroups.push(heroGroup);\n          }\n        } // if hero not found\n      } // for i loop\n\n      } // if ids\n    } // if cards\n\n    // this.setState({heroes});\n    this.setState({ heroGroups });\n  };\n\n  Comparator = (a, b) => {\n    if (a.rarity < b.rarity) return 1;\n    if (a.rarity > b.rarity) return -1;\n    return 0;\n  };\n\n  reOrderHeroGroups = heroGroups => {\n    return heroGroups.sort(this.Comparator);\n  };\n\n  getHeroData = id => {\n    for (var i = 0; i < presetHeroes.length; i++) {\n      if (presetHeroes[i].id === id) {\n        return presetHeroes[i];\n      }\n    }\n    return null;\n  };\n\n  getHeroSkills = ids => {\n    let skills = [];\n    if (ids) {\n      for (var i = 0; i < ids.length; i++) {\n        let id = ids[i];\n\n        for (var j = 0; j < presetSkills.length; j++) {\n          if (presetSkills[j].id === id) {\n            skills.push(presetSkills[j]);\n          }\n        }\n      }\n    }\n\n    return skills;\n  };\n\n  getAttackImage = rarity => {\n    let image = 'images/misc/sword-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/sword-common.png';\n        break;\n      case 1:\n        image = 'images/misc/sword-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/sword-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/sword-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/sword-mythic.png';\n        break;\n      default:\n        image = 'images/misc/sword-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getDefenceImage = rarity => {\n    let image = 'images/misc/shield-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/shield-common.png';\n        break;\n      case 1:\n        image = 'images/misc/shield-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/shield-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/shield-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/shield-mythic.png';\n        break;\n      default:\n        image = 'images/misc/shield-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getHealthImage = rarity => {\n    console.log(rarity);\n\n    let image = 'images/misc/heart-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/heart-common.png';\n        break;\n      case 1:\n        image = 'images/misc/heart-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/heart-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/heart-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/heart-mythic.png';\n        break;\n      default:\n        image = 'images/misc/heart-special.png';\n        break;\n    }\n\n    return image;\n  };\n  getHealingImage = rarity => {\n    let image = 'images/misc/healing-special.png';\n    switch (rarity) {\n      case 0:\n        image = 'images/misc/healing-common.png';\n        break;\n      case 1:\n        image = 'images/misc/healing-rare.png';\n        break;\n      case 2:\n        image = 'images/misc/healing-epic.png';\n        break;\n      case 3:\n        image = 'images/misc/healing-legendary.png';\n        break;\n      case 4:\n        image = 'images/misc/healing-mythic.png';\n        break;\n      default:\n        image = 'images/misc/healing-special.png';\n        break;\n    }\n\n    return image;\n  };\n\n  getPlateCss = rarity => {\n    let css = 'plate-silver';\n    switch (rarity) {\n      case 0:\n        css = 'plate-green';\n        break;\n      case 1:\n        css = 'plate-blue';\n        break;\n      case 2:\n        css = 'plate-pink';\n        break;\n      case 3:\n        css = 'plate-gold';\n        break;\n      case 4:\n        css = 'plate-red';\n        break;\n      default:\n        css = 'plate-silver';\n        break;\n    }\n\n    return css;\n  };\n\n  getSkillCss = rarity => {\n    let css = 'skill-silver';\n    switch (rarity) {\n      case 0:\n        css = 'skill-green';\n        break;\n      case 1:\n        css = 'skill-blue';\n        break;\n      case 2:\n        css = 'skill-pink';\n        break;\n      case 3:\n        css = 'skill-gold';\n        break;\n      case 4:\n        css = 'skill-red';\n        break;\n      default:\n        css = 'skill-silver';\n        break;\n    }\n\n    return css;\n  };\n\n  getRarityClass = rarity => {\n    let text = 'Common';\n    switch (rarity) {\n      case 0:\n        text = 'Common';\n        break;\n      case 1:\n        text = 'Rare';\n        break;\n      case 2:\n        text = 'Epic';\n        break;\n      case 3:\n        text = 'Legendary';\n        break;\n      case 4:\n        text = 'Mythic';\n        break;\n      case 5: // This was 4, but it was a bug\n        text = 'Special';\n        break;\n      default:\n        text = 'Common';\n        break;\n    }\n\n    return text;\n  };\n  getRarityText = rarity => {\n    let text = 'general.common';\n    switch (rarity) {\n      case 0:\n        text = 'general.common';\n        break;\n      case 1:\n        text = 'general.rare';\n        break;\n      case 2:\n        text = 'general.epic';\n        break;\n      case 3:\n        text = 'general.legendary';\n        break;\n      case 4:\n        text = 'general.mythic';\n        break;\n      case 5: // This was 4, but it was a bug\n        text = 'general.special';\n        break;\n      default:\n        text = 'general.common';\n        break;\n    }\n\n    return text;\n  };\n\n  getRoleImage = role => {\n    let img = 'images/misc/damage.png';\n    switch (role) {\n      case 0:\n        img = 'images/misc/tank.png';\n        break;\n      case 1:\n        img = 'images/misc/damage.png';\n        break;\n      case 2:\n        img = 'images/misc/healer.png';\n        break;\n      default:\n        img = 'images/misc/damage.png';\n        break;\n    }\n\n    return img;\n  };\n\n  renderWalletInfo() {\n    const { totalHeroes, heroGroups } = this.state;\n\n    const heroGroupsReordered = this.reOrderHeroGroups(heroGroups);\n\n    let totalCount = 0;\n    return (\n      <div className=\"cards\">\n        <div color=\"primary\" className=\"card game-card\">\n          <Typography variant=\"h4\" color=\"secondary\">\n            <span className=\"glowing-pink white\"><Translate id=\"general.allheroes\" /></span>\n          </Typography>\n\n          <div className=\"my-account\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={12} lg={12}>\n                <Typography variant=\"h6\" color=\"primary\">\n                  <span className=\"glowing-pink white\">\n                    {totalHeroes} <Translate id=\"general.heroes\" />\n                  </span>\n                </Typography>\n                <div className=\"space\" />\n\n                <Grid container spacing={24}>\n                  {heroGroupsReordered.map(heroGroup => {\n                    // console.log(heroGroup.heroes.length)\n\n                    return heroGroup.heroes.map(hero => {\n\n                      const heroName = `hero.${hero.proto}n`;\n                      const heroData = this.getHeroData(hero.proto);\n                      const heroImage = `images/hero/${hero.proto}.png`;\n\n                      const attackImage = this.getAttackImage(heroData.ra);\n                      const defenceImage = this.getDefenceImage(heroData.ra);\n                      const healthImage = this.getHealthImage(heroData.ra);\n                      const healingImage = this.getHealingImage(heroData.ra);\n\n                      const skills = this.getHeroSkills(heroData.s);\n\n                      const heroCount = hero.count;\n\n                      totalCount = totalCount + heroCount;\n\n                      let plateCss = this.getPlateCss(heroData.ra);\n                      let skillBackgroundCss = this.getSkillCss(heroData.ra);\n                      let roleImageSrc = this.getRoleImage(heroData.rl);\n                      let raritycla = this.getRarityClass(heroData.ra);\n                      let rarityText = this.getRarityText(heroData.ra);\n                      let rarityClass = `hero-rarity ${raritycla}`;\n\n                      let bgClass = `bg-${hero.proto}`;\n\n                      const boxCss = `hero-plate card ${plateCss}`;\n                      const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                      return (\n                        <Grid\n                          item\n                          xs={12}\n                          sm={6}\n                          md={3}\n                          lg={3}\n                          className=\"card\"\n                        >\n                          <div\n                            className=\"hero-placeholder\"\n                            data-aos=\"flip-right\"\n                            data-aos-delay=\"50\"\n                            data-aos-anchor-placement=\"top-center\"\n                          >\n                            <div className=\"hero-role\">\n                              <img\n                                className=\"image-skill-small\"\n                                src={roleImageSrc}\n                                alt=\"hero\"\n                              />\n                            </div>\n                            <div className={rarityClass}><Translate id={rarityText} /></div>\n                            <div className={boxCss}>\n                              <div className={bgClass}>\n                                <img\n                                  className=\"image-hero-small\"\n                                  src={heroImage}\n                                  alt=\"hero\"\n                                />\n                              </div>\n\n                              <div className=\"space\" />\n                              <div className=\"hero-name-banner\">\n                                <Translate id={heroName} />\n                              </div>\n\n                              <div className=\"hero-stats-plate\">\n                                {heroData.hl > 0 && (\n                                  <Grid container spacing={0}>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={attackImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.a}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={defenceImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.d}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healthImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.he}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={3} sm={3} md={3} lg={3}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healingImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.hl}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  </Grid>\n                                )}\n\n                                {heroData.hl === 0 && (\n                                  <Grid container spacing={0}>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={attackImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.a}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={defenceImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.d}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid item xs={4} sm={4} md={4} lg={4}>\n                                      <div className=\"hero-stats\">\n                                        <img\n                                          className=\"image-stats-small\"\n                                          src={healthImage}\n                                          alt=\"hero\"\n                                        />\n                                        <div className=\"hero-stats-title\">\n                                          {heroData.he}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  </Grid>\n                                )}\n                              </div>\n\n                              <div className={skillCss}>\n                                <span className=\"hero-skill-banner\">\n                                  <Translate id=\"hero.skill\" />\n                                </span>\n                                {skills.map(skill => {\n                                  let imageSrc = `images/skill/${skill.id}.png`;\n                                  let skillName = `skill.${skill.id}n`;\n                                  let skillDesc = `skill.${skill.id}d`;\n                                  return (\n                                    <div className=\"hero-skill-item\">\n                                      <div className=\"icon\">\n                                        <img\n                                          className=\"image-skill-small\"\n                                          src={imageSrc}\n                                          alt=\"hero\"\n                                        />\n                                      </div>\n\n                                      <div className=\"description text-shadow\">\n                                        <div className=\"title text-shadow\">\n                                          <Translate id={skillName} />\n                                        </div>\n                                        <Translate id={skillDesc} />\n                                      </div>\n                                    </div>\n                                  );\n                                })}\n\n                                <div className=\"space\" />\n                              </div>\n                            </div>\n                          </div>\n                        </Grid>\n                      );\n                    });\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderWalletInfo();\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AllHeroes));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Grid from '@material-ui/core/Grid/Grid';\nimport imgSS from '../images/soulstone.png';\nimport imgSSSprite from '../images/ss-spite.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass SoulStone extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards\">\n          <div className=\"intro-card\">\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-gold\">\n                        <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-large animate-flicker\"\n                        />{' '}\n                        <Translate id=\"general.soulstone\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span> <Translate id=\"soulstone.intro1\" />\n                      </div>\n\n                      <div className=\"space\" />\n                      <div>\n                        <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span> <Translate id=\"soulstone.intro2\" />{' '}\n                        <span className=\"glowing-blue\">TRX</span>, <Translate id=\"soulstone.intro3\" />.\n                        <ul className=\"left-align\">\n                          <li>\n                            {' '}\n                            <span className=\"glowing-pink\">20%</span> <Translate id=\"soulstone.intro4\" />{' '}\n                            <span className=\"glowing-blue\">TRX</span> <Translate id=\"soulstone.intro5\" />.\n                          </li>\n                          <li>\n                            {' '}\n                            <span className=\"glowing-pink\">20%</span> <Translate id=\"soulstone.intro6\" />.\n                          </li>\n                          <li>\n                            <Translate id=\"soulstone.intro7\" />\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span> <Translate id=\"soulstone.intro8\" />.\n                        <ul className=\"left-align\">\n                          <li>\n                            <span className=\"glowing-blue\">TRX</span>{' '}<Translate id=\"soulstone.intro9\" />\n                          </li>\n                          <li> <Translate id=\"soulstone.intro10\" /></li>\n                          <li> <Translate id=\"soulstone.intro11\" /></li>\n                          <li> <Translate id=\"soulstone.intro12\" /></li>\n                          <li> <Translate id=\"soulstone.intro13\" /></li>\n                        </ul>\n                      </div>\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgSSSprite}\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(SoulStone));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Grid from '@material-ui/core/Grid/Grid';\nimport imgArmor from '../images/weapon-armor-sprite.png';\nimport imgMinion from '../images/minion-sprite.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass Items extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards\">\n          <div className=\"intro-card\">\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-green\">\n                        <Translate id=\"items.weapons\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <Translate id=\"items.intro1\" />{' '}\n                        <span className=\"glowing-green\"><Translate id=\"general.common\" /></span>,{' '}\n                        <span className=\"glowing-blue\"><Translate id=\"general.rare\" /></span>,{' '}\n                        <span className=\"glowing-pink\"><Translate id=\"general.epic\" /></span>,{' '}\n                        <span className=\"glowing-gold\"><Translate id=\"general.legendary\" /></span>,{' '}\n                        <span className=\"glowing-red\"><Translate id=\"general.mythic\" /></span>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <Translate id=\"items.intro2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgArmor}\n                      alt=\"Get Hero\"\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgMinion}\n                      alt=\"Get Hero\"\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-green\">\n                        <Translate id=\"items.pets\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <Translate id=\"items.intro3\" />\n                      </div>\n                      <div className=\"space\" />\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(Items));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport imgInstance from '../images/instance-sprite.png';\nimport imgRaid from '../images/raid-sprite.png';\nimport imgSS from '../images/soulstone.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PVE extends React.Component {\n   constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={6} lg={6}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\"><Translate id=\"pve.instance\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pve.intro1\" />\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6} lg={6}>\n                <div\n                  className=\"image-placeholder\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgInstance}\n                    alt=<Translate id=\"pve.instance\" />\n                    className=\"image-sprite\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={6} lg={6}>\n                <div\n                  className=\"image-placeholder\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgRaid} alt=\"Get Hero\" className=\"image-sprite\" />\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6} lg={6}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\"><Translate id=\"pve.raid\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pve.intro2\" />{' '}\n                    <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-small\"\n                        />\n                        <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span>\n                  </div>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(PVE));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport imgPVP from '../images/pvp-sprite.png';\nimport imgRaid from '../images/raid-sprite.png';\nimport imgBattleground from '../images/battleground.png'; \nimport imgSS from '../images/soulstone.png';\n\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PVP extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\"><Translate id=\"pvp.arena\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pvp.intro1\" /> \n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgPVP}\n                    alt=\"Instance\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\"><Translate id=\"pvp.battleground\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pvp.intro2\" />  <img\n                          src={imgSS}\n                          alt=\"Soul Stone\"\n                          className=\"image-ss-small\"\n                        />\n                        <span className=\"glowing-gold\"><Translate id=\"general.soulstone\" /></span>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgBattleground} alt=\"Get Hero\" className=\"image-sprite-large\" />\n                </div>\n              </Grid>\n              \n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(PVP));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from \"react-localize-redux\";\nimport siteTranslations from \"../translations/site.json\";\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport imgBlacksmith from '../images/blacksmith-sprite.png';\nimport imgAlchemy from '../images/alchemy-sprite.png';\nimport imgTailoring from '../images/tailoring-sprite.png';\nimport imgEngineering from '../images/engineering-sprite.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass Professions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\"><Translate id=\"professions.blacksmith\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro1\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgBlacksmith} alt=\"Blacksmith\" className=\"image-sprite-large\" />\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-pink\"><Translate id=\"professions.alchemy\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro2\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgAlchemy} alt=\"Alchemy\" className=\"image-sprite-large\" />\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-gold\"><Translate id=\"professions.tailoring\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro3\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgTailoring} alt=\"Tailoring\" className=\"image-sprite-large\" />\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-red\"><Translate id=\"professions.engineering\" /></span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro4\" />\n                    <br/>\n                    <Translate id=\"professions.intro5\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} md={12} lg={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgEngineering} alt=\"Engineering\" className=\"image-sprite-large\" />\n                </div>\n              </Grid>\n              \n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(Professions));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_SOULSTONE,\n  SCREEN_ALL_HEROES,\n  SCREEN_ITEMS,\n  SCREEN_PVE,\n  SCREEN_PVP,\n  SCREEN_PROFESSIONS,\n} from '../actions/app';\nimport PreSale from './PreSale';\nimport MyHeroes from './MyHeroes';\nimport MyAccount from './MyAccount';\nimport Heroes from './Heroes';\nimport SoulStone from './SoulStone';\nimport Items from './Items';\nimport PVE from './PVE';\nimport PVP from './PVP';\nimport Professions from './Professions';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n    case SCREEN_PRE_SALE:\n      return <PreSale />;\n    case SCREEN_MY_HEROES:\n      return <MyHeroes />;\n    case SCREEN_ALL_HEROES:\n      return <Heroes />;\n    case SCREEN_MY_ACCOUNT:\n      return <MyAccount />;\n    case SCREEN_ITEMS:\n      return <Items />;\n    case SCREEN_SOULSTONE:\n      return <SoulStone />;\n    case SCREEN_PVE:\n      return <PVE />;\n    case SCREEN_PVP:\n      return <PVP />;\n    case SCREEN_PROFESSIONS:\n      return <Professions />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize } from \"react-localize-redux\";\n\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen, SCREEN_PRE_SALE } from '../actions/app';\nimport customTheme from './customTheme';\nimport AppBar from './WalletAppBar';\nimport Snackbar from './WalletSnackbar';\nimport RoutingScreen from './RoutingScreen';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: \"English\", code: \"en\" },\n        { name: \"Chinese\", code: \"cn\" }\n      ],\n      options: { renderToStaticMarkup }\n    });\n  }\n  componentDidMount() {\n    this.initWallet();\n  }\n\n  initWallet = async () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PRE_SALE);\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <RoutingScreen />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_PRE_SALE } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_PRE_SALE,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from \"react-localize-redux\";\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n<LocalizeProvider>\n  <Provider store={store}>\n    <App />\n  </Provider>\n</LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}