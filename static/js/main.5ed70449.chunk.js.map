{"version":3,"sources":["images/scroll.png","images/dragonwarrior.png","images/tron-logo.png","images/ss-spite.png","images/weapon-armor-sprite.png","images/minion-sprite.png","images/auction.png","images/instance-sprite.png","images/raid-sprite.png","images/pvp-sprite.png","images/battleground.png","images/blacksmith-sprite.png","images/alchemy-sprite.png","images/tailoring-sprite.png","images/engineering-sprite.png","images/soulstone.png","actions/app.js","components/customTheme.js","components/WalletAppBar.js","actions/constants.js","actions/snackbar.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","store/index.js","components/WalletSnackbar.js","utils/tron.js","components/GlobalStats.js","components/PreSale.js","components/MyHeroes.js","components/MyAccount.js","components/Heroes.js","components/SoulStone.js","components/Items.js","components/PVE.js","components/PVP.js","components/Professions.js","components/RoutingScreen.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SET_SCREEN","SCREEN_PRE_SALE","SCREEN_MY_ACCOUNT","SCREEN_MY_HEROES","SCREEN_SOUL_STONE","SCREEN_ALL_HEROES","SCREEN_ITEMS","SCREEN_PVP","SCREEN_PVE","SCREEN_PROFESSIONS","RELOAD_ACCOUNT","setScreen","screen","type","payload","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","action","important","warning","slider","trackSize","handleSize","WalletAppBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getLanguageFlag","concat","navigateTo","home","myHeroes","showAllHeroes","showItems","showPVE","showPVP","showProfessions","showSoulStone","myAccount","handleDrawerToggle","state","languages","name","addTranslation","siteTranslations","activeLanguageCode","get","_this2","react_default","a","createElement","className","IconButton_default","color","aria-label","react_localize_redux_es","id","onClick","Tooltip_default","title","src","imgSS","alt","map","lang","key","_this3","Menu_default","Drawer_default","container","variant","anchor","open","onClose","List_default","ListItem_default","button","Divider_default","AppBar_default","position","Toolbar_default","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","initialState","reducers","app","arguments","length","undefined","objectSpread","snackbar","index","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","SNACKBAR_SUCCESS","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","currentAddress","contract","tronWebState","MySnackbarContentWrapper","withStyles","theme","backgroundColor","green","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","core_IconButton_default","close","Close_default","hideSnackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","ContentProps","aria-describedby","indexOf","FOUNDATION_ADDRESS","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","tries","timer","setInterval","tronWeb","defaultTronWeb","clearInterval","ready","stop","apply","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","initContract","_ref3","_callee3","_context3","at","sent","t0","console","tron","initTronWeb","_initTronWeb","_callee4","_context4","store","dispatch","on","_ref2","_callee2","needsToNotify","_context2","reloadAccountNonce","uuid","_x","getGlobalData","_getGlobalData","_callee5","dividend","referral","_context5","getGlobalClaimedDividend","globalReferral","toNumber","getPlayerData","_getPlayerData","_callee6","playerData","_context6","stones","claimedDividend","claimableDividend","lastPurchaseId","lastPurchaseSize","balanceOf","_balanceOf","_callee7","balance","_context7","_x2","currentAddressBalance","_currentAddressBalance","_callee8","_context8","trx","getBalance","getPlayerCards","_getPlayerCards","_callee9","page","cards","_context9","_x3","getPlayerCardsLastSize","_getPlayerCardsLastSize","_callee10","size","_context10","_x4","claimDividend","_claimDividend","_callee11","data","_context11","send","feeLimit","callValue","shouldPollResponse","getCommonPrice","_getCommonPrice","_callee12","price","_context12","getBasePrice","getRarePrice","_getRarePrice","_callee13","_context13","getEpicPrice","_getEpicPrice","_callee14","_context14","getLegendaryPrice","_getLegendaryPrice","_callee15","_context15","purchase","_purchase","_callee16","packsNumber","packType","referrer","payAmount","_context16","_x5","_x6","_x7","sunToTrx","sun","isNaN","isValidAddress","isAddress","AOS","init","once","mirror","GlobalStats","globalClaimedDividend","Tron","globalData","_this$state","core_styles","customTheme","build_default","start","end","React","PreSale","getAllPrices","commonPrice","rarePrice","epicPrice","legendaryPrice","parseReferralLink","storedReferralAddress","referralAddress","qs","parse","location","search","substr","isSending","isLoading","roll1","sendAmount","roll10","roll25","roll5","scrollCommon","scrollType","scrollRare","scrollEpic","scrollLegendary","purchaseScroll","_this$props","ReactGA","event","category","log","game","pageview","_this$state2","amount","parseInt","btn1Class","btn10Class","btn5Class","btn25Class","scroll","btnCommonClass","btnRareClass","btnEpicClass","btnLegendaryClass","basePrice","buyText","cost","stoneNumber","Typography_default","Grid_default","item","xs","md","data-aos","data-aos-delay","data-aos-anchor","data-aos-anchor-placement","imgScroll","Button_default","disabled","imgDragonWarrior","totalHeroes","totalNewHeroes","heroes","newHeroes","heroGroups","newHeroGroups","selectedDisplayOption","pages","currentPageIndex","revealNewPurchase","lastPurchaseCardIds","loaded","MyHeroes","confirmNewPurchase","loadContentMaster","setRevealNewPurchaseStateAsync","loadLastPurchaseCards","loadPlayerCards","loadNewCards","loadNewCardsGroupAll","addEventListener","refresh","loadCards","loadCardsGroupMaster","loadPlayerData","previousPage","previousPageIndex","resetCurrentPageIndexStateAsync","resetHeroGroupsStateAsync","nextPage","nextPageIndex","result","ids","protos","purities","j","_j","_j2","push","getPlayerCardsGroup","_ref9","_ref10","promises","i","getPlayerCardsByPage","all","then","results","catch","e","handleDisplayOptionChange","_ref11","setSelectedDisplayOptionStateAsync","target","value","getPagesCount","resetPagesStateAsync","_ref12","_ref13","totalCardsCount","Math","floor","_ref15","loadCardsGroupStack","loadCardsGroupAll","_ids","_protos","_purities","proto","purity","heroData","rarity","foundRarityIndex","foundHero","heroGroup","k","hero","_hero","_heroGroup2","getHeroData","ra","bestPurity","bestId","count","_ref17","_callee17","_this$state3","startIndex","endIndex2","_ids2","_protos2","_purities2","_heroGroup4","_context17","_callee18","_ids3","_protos3","_purities3","endIndex","nHeroes","_heroGroup6","_context18","total","Comparator","b","ComparatorPurity","reorderHeroGroups","sort","getBestHeroFromGroup","bestHero","bestHeroGroup","reorderHeroes","getHeroGroupsSummary","summary","common","rare","epic","legendary","mythic","special","presetHeroes","getHeroSkills","skills","presetSkills","getModifiedStats","stats","talent","round","getAttackImage","getDefenceImage","getHealthImage","getHealingImage","getPlateCss","getPlateHighlightCss","getSkillCss","getRarityClass","getRarityText","getRoleImage","role","heroTranslations","commonInit","prevProps","_ref19","_callee22","_context22","_x9","_ref20","_callee23","_context23","_x10","_this4","_ref21","_callee24","_context24","_x11","_this5","_ref22","_callee25","_context25","_x12","flag","_this6","_ref23","_callee26","_context26","_x13","_this7","_this$state4","heroGroupsReordered","bestHeroes","heroesSummary","heroName","heroImage","attackImage","defenceImage","healthImage","healingImage","s","heroCount","plateCss","skillBackgroundCss","roleImageSrc","rl","raritycla","rarityText","rarityClass","bgClass","boxCss","skillCss","sm","lg","hl","d","he","skill","imageSrc","skillName","skillDesc","_this8","_this$state5","TextField_default","select","label","onChange","margin","InputProps","startAdornment","MenuItem_default","_this$state6","renderNewPurchase","renderPlayerCards","accountValidForReferral","MyAccount","copyLink","myReferralLink","react_copy_to_clipboard_lib","text","onCopy","imgTron","AllHeroes","loadCardsGroup","purchases","lastUpdatedTime","SoulStone","imgSSSprite","Items","imgArmor","imgMinion","imgAuction","PVE","imgInstance","imgRaid","PVP","imgPVP","imgBattleground","Professions","imgBlacksmith","imgAlchemy","imgTailoring","imgEngineering","components_PreSale","components_MyHeroes","Heroes","components_MyAccount","components_Items","components_SoulStone","components_PVE","components_PVP","components_Professions","Footer","href","rel","App","initWallet","initReactGA","initialize","options","renderToStaticMarkup","MuiThemeProvider_default","components_WalletAppBar","components_GlobalStats","components_RoutingScreen","components_Footer","components_WalletSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.5ed70449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scroll.8ca7818d.png\";","module.exports = __webpack_public_path__ + \"static/media/dragonwarrior.0ccceaff.png\";","module.exports = __webpack_public_path__ + \"static/media/tron-logo.2e406677.png\";","module.exports = __webpack_public_path__ + \"static/media/ss-spite.7d8e3084.png\";","module.exports = __webpack_public_path__ + \"static/media/weapon-armor-sprite.08a5f40e.png\";","module.exports = __webpack_public_path__ + \"static/media/minion-sprite.ee31d4fb.png\";","module.exports = __webpack_public_path__ + \"static/media/auction.90bdf80b.png\";","module.exports = __webpack_public_path__ + \"static/media/instance-sprite.64677ac8.png\";","module.exports = __webpack_public_path__ + \"static/media/raid-sprite.af36fcaa.png\";","module.exports = __webpack_public_path__ + \"static/media/pvp-sprite.96acce2c.png\";","module.exports = __webpack_public_path__ + \"static/media/battleground.f3e5ae9b.png\";","module.exports = __webpack_public_path__ + \"static/media/blacksmith-sprite.7a77cf4c.png\";","module.exports = __webpack_public_path__ + \"static/media/alchemy-sprite.4c4723f8.png\";","module.exports = __webpack_public_path__ + \"static/media/tailoring-sprite.ea6cdcca.png\";","module.exports = __webpack_public_path__ + \"static/media/engineering-sprite.847766d5.png\";","module.exports = __webpack_public_path__ + \"static/media/soulstone.c63abfd6.png\";","import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_PRE_SALE = 'SCREEN_PRE_SALE';\nconst SCREEN_MY_ACCOUNT = 'SCREEN_MY_ACCOUNT';\nconst SCREEN_MY_HEROES = 'SCREEN_MY_HEROES';\nconst SCREEN_SOUL_STONE = 'SCREEN_SOUL_STONE';\nconst SCREEN_ALL_HEROES = 'SCREEN_ALL_HEROES';\nconst SCREEN_ITEMS = 'SCREEN_ITEMS';\nconst SCREEN_PVP = 'SCREEN_PVP';\nconst SCREEN_PVE = 'SCREEN_PVE';\nconst SCREEN_PROFESSIONS = 'SCREEN_PROFESSIONS';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport {\n  SET_SCREEN,\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_SOUL_STONE,\n  SCREEN_ALL_HEROES,\n  SCREEN_ITEMS,\n  SCREEN_PVP,\n  SCREEN_PVE,\n  SCREEN_PROFESSIONS,\n  RELOAD_ACCOUNT,\n};\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#343a40',\n      main: '#343a40',\n      dark: '#343a40',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      light: '#cc0040',\n      main: '#cc0040',\n      dark: '#cc0040',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../translations/site.json';\nimport imgSS from '../images/soulstone.png';\n\nimport {\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_ALL_HEROES,\n  SCREEN_SOUL_STONE,\n  SCREEN_ITEMS,\n  SCREEN_PVP,\n  SCREEN_PVE,\n  SCREEN_PROFESSIONS,\n  setScreen,\n} from '../actions/app';\n\nclass WalletAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '简体中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('activeLanguage') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('activeLanguage', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getLanguageFlag = code => {\n    return `images/languages/${code}.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_PRE_SALE);\n  };\n\n  myHeroes = () => {\n    this.navigateTo(SCREEN_MY_HEROES);\n  };\n\n  showAllHeroes = () => {\n    this.navigateTo(SCREEN_ALL_HEROES);\n  };\n\n  showItems = () => {\n    this.navigateTo(SCREEN_ITEMS);\n  };\n\n  showPVE = () => {\n    this.navigateTo(SCREEN_PVE);\n  };\n  showPVP = () => {\n    this.navigateTo(SCREEN_PVP);\n  };\n\n  showProfessions = () => {\n    this.navigateTo(SCREEN_PROFESSIONS);\n  };\n\n  showSoulStone = () => {\n    this.navigateTo(SCREEN_SOUL_STONE);\n  };\n\n  myAccount = () => {\n    this.navigateTo(SCREEN_MY_ACCOUNT);\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderDesktop() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label={<Translate id=\"general.tronlegend\" />}\n            onClick={this.home}\n          >\n            <span className=\"glowing-pink\">\n              <Translate id=\"general.tronlegend\" />\n            </span>\n          </IconButton>\n        </div>\n\n        <div>\n          <Tooltip title={<Translate id=\"general.soulstone\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.soulstone\" />}\n              onClick={this.showSoulStone}\n            >\n              <span className=\"menu-link glowing-gold\">\n                <img\n                  src={imgSS}\n                  alt={<Translate id=\"general.soulstone\" />}\n                  className=\"image-ss-menu\"\n                />\n                <Translate id=\"general.soulstone\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title={<Translate id=\"general.heroes\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.heroes\" />}\n              onClick={this.showAllHeroes}\n            >\n              <span className=\"menu-link glowing-red\">\n                <Translate id=\"general.heroes\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title={<Translate id=\"general.items\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.items\" />}\n              onClick={this.showItems}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.items\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Translate id=\"general.pve\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.pve\" />}\n              onClick={this.showPVE}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.pve\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Translate id=\"general.pvp\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.pvp\" />}\n              onClick={this.showPVP}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.pvp\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Translate id=\"general.professions\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.professions\" />}\n              onClick={this.showProfessions}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.professions\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Translate id=\"general.myheroes\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.myheroes\" />}\n              onClick={this.myHeroes}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.myheroes\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title={<Translate id=\"general.myaccount\" />}>\n            <IconButton\n              color=\"inherit\"\n              aria-label={<Translate id=\"general.myaccount\" />}\n              onClick={this.myAccount}\n            >\n              <span className=\"menu-link glowing-blue\">\n                <Translate id=\"general.myaccount\" />\n              </span>\n            </IconButton>\n          </Tooltip>\n\n          {languages.map(lang => (\n            <Tooltip key={lang.code} title={lang.name}>\n              <IconButton\n                id={lang.code}\n                color=\"inherit\"\n                onClick={() => this.setActiveLanguage(lang.code)}\n              >\n                <img\n                  src={this.getLanguageFlag(lang.code)}\n                  className=\"image-flag\"\n                  alt=\"lang\"\n                />\n              </IconButton>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label={<Translate id=\"general.tronlegend\" />}\n            onClick={this.home}\n          >\n            <span className=\"glowing-pink\">\n              <Translate id=\"general.tronlegend\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              <ListItem\n                button\n                key=\"home\"\n                onClick={this.home}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-pink\">\n                  <Translate id=\"general.presale\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"soulstone\"\n                onClick={this.showSoulStone}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-gold\">\n                  <Translate id=\"general.soulstone\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"heroes\"\n                onClick={this.showAllHeroes}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-red\">\n                  <Translate id=\"general.heroes\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"items\"\n                onClick={this.showItems}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.items\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"pve\"\n                onClick={this.showPVE}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.pve\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"pvp\"\n                onClick={this.showPVP}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.pvp\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"professions\"\n                onClick={this.showProfessions}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.professions\" />\n                </span>\n              </ListItem>\n              <Divider />\n              <ListItem\n                button\n                key=\"myheroes\"\n                onClick={this.myHeroes}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.myheroes\" />\n                </span>\n              </ListItem>\n              <ListItem\n                button\n                key=\"myaccount\"\n                onClick={this.myAccount}\n                className=\"drawer-item\"\n              >\n                <span className=\"menu-link glowing-blue\">\n                  <Translate id=\"general.myaccount\" />\n                </span>\n              </ListItem>\n              <Divider />\n              <ListItem button key=\"languages\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <Tooltip key={lang.code} title={lang.name}>\n                    <IconButton\n                      id={lang.code}\n                      color=\"inherit\"\n                      onClick={() => this.setActiveLanguage(lang.code)}\n                    >\n                      <img\n                        src={this.getLanguageFlag(lang.code)}\n                        className=\"image-flag\"\n                        alt=\"lang\"\n                      />\n                    </IconButton>\n                  </Tooltip>\n                ))}\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(WalletAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_PRE_SALE, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_PRE_SALE,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: '#259fb2',\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst WalletSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n    ContentProps={{\n      'aria-describedby': 'message-id',\n    }}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(WalletSnackbar));\n","import TronWeb from 'tronweb';\n\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport { SNACKBAR_ERROR, SNACKBAR_INFO } from '../components/WalletSnackbar';\n\n// // TESTNET\n// const CONTRACT_ADDRESS = '41385a59fb352d48e1ed17b57c9ae0aa47f48c3fe1';\n// const TRONGRID_API = 'https://api.shasta.trongrid.io';\n// const gasLimit = 100 * 1000000; // 100 trx\n\n// // MAINNET\nconst CONTRACT_ADDRESS = '4190ddba073f375a26be938ec7798e1c06716701b8';\nconst TRONGRID_API = 'https://api.trongrid.io';\nconst gasLimit = 50 * 1000000; // 50 trx\n\nexport const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'TMiT1foMn3D9TysDXeZqVM5Fk4Pbwvfa2d';\n\nconst injectTronWeb = async () => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nlet currentAddress;\nlet contract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb();\n      contract = await initContract();\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nconst defaultTronWeb = initDefaultTronWeb();\n\nconst initContract = async () => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(CONTRACT_ADDRESS);\n    } else {\n      contract = await defaultTronWeb.contract().at(CONTRACT_ADDRESS);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb();\n    contract = await initContract();\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  async getGlobalData() {\n    const dividend = await contract.getGlobalClaimedDividend().call();\n    const referral = await contract.globalReferral().call();\n    return {\n      dividend: dividend ? dividend.toNumber() : 0,\n      referral: referral ? referral.toNumber() : 0,\n    };\n  },\n\n  async getPlayerData() {\n    const playerData = await contract.getPlayerData().call();\n    return {\n      address: currentAddress,\n      stones: playerData.stones.toNumber(),\n      claimedDividend: playerData.claimedDividend.toNumber(),\n      claimableDividend: playerData.claimableDividend.toNumber(),\n      referral: playerData.referral.toNumber(),\n      lastPurchaseId: playerData.lastPurchaseId.toNumber(),\n      lastPurchaseSize: playerData.lastPurchaseSize,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  async currentAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getPlayerCards(page) {\n    const cards = await contract.getPlayerCards(page).call();\n    return cards;\n  },\n\n  async getPlayerCardsLastSize(size) {\n    const cards = await contract.getPlayerCardsLastSize(size).call();\n    return cards;\n  },\n\n  async claimDividend() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n\n    const payAmount = 0;\n    const data = await contract.claimDividend().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: true,\n    });\n\n    return data;\n  },\n\n  async getCommonPrice() {\n    const price = await contract.getBasePrice().call();\n    return price.toNumber();\n  },\n\n  async getRarePrice() {\n    const price = await contract.getRarePrice().call();\n    return price.toNumber();\n  },\n\n  async getEpicPrice() {\n    const price = await contract.getEpicPrice().call();\n    return price.toNumber();\n  },\n\n  async getLegendaryPrice() {\n    const price = await contract.getLegendaryPrice().call();\n    return price.toNumber();\n  },\n\n  async purchase(packsNumber, packType, referrer) {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n\n    let price = 0;\n    if (packType === '0') {\n      price = await contract.getBasePrice().call();\n    } else if (packType === '1') {\n      price = await contract.getRarePrice().call();\n    } else if (packType === '2') {\n      price = await contract.getEpicPrice().call();\n    } else if (packType === '3') {\n      price = await contract.getLegendaryPrice().call();\n    }\n\n    const payAmount = price.toNumber() * packsNumber;\n    const data = await contract.purchase(packsNumber, packType, referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: true,\n    });\n    return data;\n  },\n\n  sunToTrx(sun) {\n    if (isNaN(sun)) {\n      return '';\n    }\n    return sun / 1000000;\n  },\n\n  isValidAddress(address) {\n    return address && defaultTronWeb.isAddress(address);\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport CountUp from 'react-countup';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport { showSnackbar } from '../actions/snackbar';\n\nimport customTheme from './customTheme';\n\nimport { setScreen } from '../actions/app';\n\nimport Tron, { TRON_WEB_STATE_NOT_MAINNET } from '../utils/tron';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass GlobalStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      globalClaimedDividend: null,\n      globalReferral: null,\n    };\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const tronWebState = await Tron.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    const globalData = await Tron.getGlobalData();\n    this.setState({ globalClaimedDividend: globalData.dividend });\n    this.setState({ globalReferral: globalData.referral });\n  }\n\n  render() {\n    const { globalClaimedDividend, globalReferral } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"global-stats\">\n          <span className=\"large-text\">\n            <Translate id=\"presale.globaldividends\" />:{' '}\n            <span className=\"glowing-red\">\n              <CountUp\n                start={0}\n                end={Tron.sunToTrx(globalClaimedDividend + globalReferral)}\n              />{' '}\n              TRX\n            </span>{' '}\n          </span>\n          (<Translate id=\"presale.globalsoulstonerewards\" />:{' '}\n          <span className=\"glowing-gold\">\n            <CountUp start={0} end={Tron.sunToTrx(globalClaimedDividend)} /> TRX\n          </span>{' '}\n          <Translate id=\"presale.globalreferrals\" />:{' '}\n          <span className=\"glowing-green\">\n            <CountUp start={0} end={Tron.sunToTrx(globalReferral)} /> TRX\n          </span>\n          )\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GlobalStats));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport qs from 'qs';\nimport Lockr from 'lockr';\nimport ReactGA from 'react-ga';\n\nimport imgScroll from '../images/scroll.png';\nimport imgDragonWarrior from '../images/dragonwarrior.png';\nimport imgSS from '../images/soulstone.png';\n\nimport { showSnackbar } from '../actions/snackbar';\n\nimport customTheme from './customTheme';\n\nimport { SCREEN_MY_HEROES, setScreen } from '../actions/app';\n\nimport Tron, {\n  FOUNDATION_ADDRESS,\n  TRON_WEB_STATE_NOT_MAINNET,\n} from '../utils/tron';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_SUCCESS,\n} from './WalletSnackbar';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PreSale extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      game: 1,\n      sendAmount: '1',\n      scrollType: '0',\n      isLoading: false,\n      commonPrice: null,\n      rarePrice: null,\n      epicPrice: null,\n      legendaryPrice: null,\n    };\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    this.parseReferralLink();\n\n    const tronWebState = await Tron.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.getAllPrices();\n\n    ReactGA.pageview('/pre-sale');\n  }\n\n  getAllPrices = async () => {\n    const commonPrice = await Tron.getCommonPrice();\n    const rarePrice = await Tron.getRarePrice();\n    const epicPrice = await Tron.getEpicPrice();\n    const legendaryPrice = await Tron.getLegendaryPrice();\n\n    this.setState({ commonPrice });\n    this.setState({ rarePrice });\n    this.setState({ epicPrice });\n    this.setState({ legendaryPrice });\n  };\n\n  parseReferralLink = () => {\n    const storedReferralAddress = Lockr.get('referralAddress');\n    const parsedQueryString = qs.parse(window.location.search.substr(1));\n    let referralAddress = parsedQueryString['r'];\n    if (referralAddress && Tron.isValidAddress(referralAddress)) {\n      // store the new referralAddress\n      Lockr.set('referralAddress', referralAddress);\n    } else if (!!storedReferralAddress) {\n      referralAddress = storedReferralAddress;\n    } else {\n      referralAddress = FOUNDATION_ADDRESS;\n    }\n    this.setState({ referralAddress });\n  };\n\n  isSending = () => {\n    const { isLoading } = this.state;\n    return !!isLoading;\n  };\n\n  roll1 = () => {\n    this.setState({ sendAmount: '1' });\n  };\n  roll10 = () => {\n    this.setState({ sendAmount: '10' });\n  };\n  roll25 = () => {\n    this.setState({ sendAmount: '25' });\n  };\n  roll5 = () => {\n    this.setState({ sendAmount: '5' });\n  };\n\n  scrollCommon = () => {\n    this.setState({ scrollType: '0' });\n  };\n  scrollRare = () => {\n    this.setState({ scrollType: '1' });\n  };\n  scrollEpic = () => {\n    this.setState({ scrollType: '2' });\n  };\n  scrollLegendary = () => {\n    this.setState({ scrollType: '3' });\n  };\n\n  purchaseScroll = async () => {\n    const { sendAmount, scrollType, referralAddress } = this.state;\n    const { setScreen, showSnackbar } = this.props;\n    ReactGA.event({\n      category: 'PreSale',\n      action: 'Purchase Scroll',\n      // label: `buyerAddress=${window.tronWeb.defaultAddress.base58}-sendAmount=${sendAmount}-scrollType=${scrollType}-referralAddress=${referralAddress}`\n    });\n\n    try {\n      // showSnackbar('message.actionInProgress', SNACKBAR_INFO);\n      const result = await Tron.purchase(\n        sendAmount,\n        scrollType,\n        referralAddress\n      );\n      if (!result) {\n        return;\n      }\n      Lockr.set('hasNewPurchase', true);\n      showSnackbar('message.purchaseSucceed', SNACKBAR_SUCCESS);\n      setScreen(SCREEN_MY_HEROES);\n    } catch (e) {\n      console.log(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error && e.message) {\n          if (\n            e.error === 'CONTRACT_VALIDATE_ERROR' &&\n            e.message.indexOf('balance is not sufficient') > 0\n          ) {\n            showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  render() {\n    const {\n      sendAmount,\n      scrollType,\n      commonPrice,\n      rarePrice,\n      epicPrice,\n      legendaryPrice,\n    } = this.state;\n\n    const amount = parseInt(sendAmount, 10);\n    let btn1Class =\n      amount === 1 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn10Class =\n      amount === 10 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn5Class =\n      amount === 5 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btn25Class =\n      amount === 25 ? 'glowing-blue medium-text' : 'glowing-silver';\n\n    const scroll = parseInt(scrollType, 10);\n    let btnCommonClass =\n      scroll === 0 ? 'glowing-green medium-text' : 'glowing-silver';\n    let btnRareClass =\n      scroll === 1 ? 'glowing-blue medium-text' : 'glowing-silver';\n    let btnEpicClass =\n      scroll === 2 ? 'glowing-pink medium-text' : 'glowing-silver';\n    let btnLegendaryClass =\n      scroll === 3 ? 'glowing-gold medium-text' : 'glowing-silver';\n    let basePrice = 50;\n    let stonePrice = 50;\n    let buyText = 'presale.scrollcommon';\n    if (scroll === 0) {\n      buyText = 'presale.scrollcommon';\n      if (commonPrice) {\n        basePrice = Tron.sunToTrx(commonPrice);\n      }\n    } else if (scroll === 1) {\n      buyText = 'presale.scrollrare';\n      if (rarePrice) {\n        basePrice = Tron.sunToTrx(rarePrice);\n      }\n    } else if (scroll === 2) {\n      buyText = 'presale.scrollepic';\n      if (epicPrice) {\n        basePrice = Tron.sunToTrx(epicPrice);\n      }\n    } else if (scroll === 3) {\n      buyText = 'presale.scrolllegendary';\n      if (legendaryPrice) {\n        basePrice = Tron.sunToTrx(legendaryPrice);\n      }\n    }\n\n    let cost = sendAmount * basePrice;\n    let stoneNumber = cost / stonePrice;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <Typography variant=\"h4\" color=\"secondary\">\n              <span className=\"glowing-pink white\">\n                <h2>\n                  <Translate id=\"presale.title\" />\n                </h2>\n                <Translate id=\"presale.subtitle\" />\n              </span>\n            </Typography>\n            <div className=\"presale-info\">\n              <span className=\"large-text glowing-green\">30</span>{' '}\n              <Translate id=\"presale.description1\" />,{' '}\n              <img\n                src={imgSS}\n                alt=<Translate id=\"general.soulstone\" />\n                className=\"image-ss-medium\"\n              />\n              <span className=\"glowing-gold\">\n                <Translate id=\"general.soulstone\" />\n              </span>{' '}\n              <Translate id=\"general.dividends\" />,{' '}\n              <Translate id=\"presale.limitedtime\" />{' '}\n              <span className=\"glowing-red\">50%</span>{' '}\n              <Translate id=\"presale.discount\" />\n            </div>\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor=\"trigger-scroll\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgScroll}\n                      alt=\"Get Hero\"\n                      className=\"image-scroll animate-flicker\"\n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-blue\">\n                        {cost} TRX{' '}\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div>\n                      <Translate id=\"presale.scroll\" />\n                    </div>\n                    <div>\n                      <Translate id={buyText} />\n                    </div>\n\n                    <div className=\"space\" />\n\n                    <div>\n                      <Translate id=\"presale.alsorewards\" />\n                      <img\n                        src={imgSS}\n                        alt=<Translate id=\"general.soulstone\" />\n                        className=\"image-ss-small\"\n                      />\n                      <span className=\"glowing-gold\">\n                        x{stoneNumber} <Translate id=\"general.soulstone\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <Grid container spacing={0}>\n                      <Grid item xs={12}>\n                        <Button\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.scrollCommon}\n                        >\n                          <span className={btnCommonClass}>\n                            <Translate id=\"general.common\" />\n                          </span>\n                        </Button>\n                        <Button\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.scrollRare}\n                        >\n                          <span className={btnRareClass}>\n                            <Translate id=\"general.rare\" />\n                          </span>\n                        </Button>\n                        <Button\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.scrollEpic}\n                        >\n                          <span className={btnEpicClass}>\n                            <Translate id=\"general.epic\" />\n                          </span>\n                        </Button>\n\n                        <Button\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.scrollLegendary}\n                        >\n                          <span className={btnLegendaryClass}>\n                            <Translate id=\"general.legendary\" />\n                          </span>\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={0}>\n                      <Grid item xs={12}>\n                        <Button\n                          id=\"roll-min-button\"\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.roll1}\n                        >\n                          <span className={btn1Class}>1</span>\n                        </Button>\n                        <Button\n                          id=\"roll-2x-button\"\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.roll5}\n                        >\n                          <span className={btn5Class}>5</span>\n                        </Button>\n                        <Button\n                          id=\"roll-2x-button\"\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.roll10}\n                        >\n                          <span className={btn10Class}>10</span>\n                        </Button>\n\n                        <Button\n                          id=\"roll-max-button\"\n                          className=\"roll-quick-button\"\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={this.roll25}\n                        >\n                          <span className={btn25Class}>25</span>\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <Button\n                          id=\"send-token-button\"\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          size=\"large\"\n                          onClick={this.purchaseScroll}\n                          disabled={this.isSending()}\n                        >\n                          <Translate id=\"presale.buyscroll\" />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n            <div className=\"card send-card\" id=\"trigger-intro\">\n              <Grid container>\n                <Grid item xs={12} md={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-pink\">\n                        <Translate id=\"general.tronlegend\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div>\n                      <span className=\"glowing-pink\">\n                        <Translate id=\"general.tronlegend\" />\n                      </span>{' '}\n                      <Translate id=\"presale.intro1\" />.\n                    </div>\n                    <div>\n                      <Translate id=\"presale.intro2\" />.\n                    </div>\n                    <div>\n                      <Translate id=\"presale.intro3\" />{' '}\n                      <span className=\"glowing-blue\">\n                        <Translate id=\"presale.intro4\" />\n                      </span>{' '}\n                      <Translate id=\"presale.intro5\" />.\n                    </div>\n                    <div>\n                      <span className=\"glowing-red large-text\">\n                        <Translate id=\"presale.intro6\" />\n                      </span>\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor=\"trigger-intro\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgDragonWarrior}\n                      alt=\"Non Fungible Token\"\n                      className=\"image-scroll moveUpDown\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(PreSale));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\nimport heroTranslations from '../translations/hero.json';\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport Button from '@material-ui/core/Button/Button';\n\nimport Lockr from 'lockr';\nimport ReactGA from 'react-ga';\n\nimport Tron, { TRON_WEB_STATE_UNLOCKED } from '../utils/tron';\n\nimport presetHeroes from '../config/hero';\nimport presetSkills from '../config/skill';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nconst initialState = {\n  totalHeroes: 0,\n  totalNewHeroes: 0,\n  heroes: [],\n  newHeroes: [],\n  heroGroups: [],\n  newHeroGroups: [],\n  selectedDisplayOption: '0',\n  pages: 0,\n  currentPageIndex: 0,\n  revealNewPurchase: false,\n  lastPurchaseId: null,\n  lastPurchaseSize: 0,\n  lastPurchaseCardIds: [],\n  loaded: false,\n};\n\nclass MyHeroes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n    this.props.addTranslation(heroTranslations);\n  }\n\n  async componentDidMount() {\n    await this.commonInit();\n\n    ReactGA.pageview('/my-heroes');\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.resetHeroGroupsStateAsync();\n      await this.commonInit();\n    }\n  }\n\n  async commonInit() {\n    const tronWebState = await Tron.initTronWeb();\n    if (tronWebState !== TRON_WEB_STATE_UNLOCKED) {\n      return;\n    }\n    await this.loadPlayerData();\n    await this.loadContentMaster();\n  }\n\n  confirmNewPurchase = async () => {\n    Lockr.set('hasNewPurchase', false);\n    await this.loadContentMaster();\n\n    ReactGA.event({\n      category: 'MyHeroes',\n      action: 'Confirm New Purchase',\n    });\n  };\n\n  loadContentMaster = async () => {\n    const hasNewPurchase = Lockr.get('hasNewPurchase');\n\n    if (hasNewPurchase) {\n      await this.setRevealNewPurchaseStateAsync(true);\n      await this.loadLastPurchaseCards();\n    } else {\n      await this.setRevealNewPurchaseStateAsync(false);\n      await this.loadPlayerCards();\n    }\n\n    this.setState({ loaded: true });\n  };\n\n  loadLastPurchaseCards = async () => {\n    await this.loadNewCards();\n    await this.loadNewCardsGroupAll();\n    window.addEventListener('load', AOS.refresh);\n  };\n\n  loadPlayerCards = async () => {\n    await this.loadCards();\n    await this.loadCardsGroupMaster(0);\n    window.addEventListener('load', AOS.refresh);\n  };\n\n  loadPlayerData = async () => {\n    const playerData = await Tron.getPlayerData();\n    const lastPurchaseId = playerData.lastPurchaseId;\n    const lastPurchaseSize = playerData.lastPurchaseSize;\n    this.setState({ lastPurchaseId });\n    this.setState({ lastPurchaseSize });\n  };\n\n  previousPage = async () => {\n    const { currentPageIndex } = this.state;\n\n    ReactGA.event({\n      category: 'MyHeroes',\n      action: 'Previous Page',\n    });\n\n    let previousPageIndex = currentPageIndex - 1;\n    if (previousPageIndex <= 0) {\n      previousPageIndex = 0;\n    }\n    await this.resetCurrentPageIndexStateAsync(previousPageIndex);\n    await this.resetHeroGroupsStateAsync();\n    await this.loadCardsGroupMaster(previousPageIndex);\n    window.addEventListener('load', AOS.refresh);\n  };\n\n  nextPage = async () => {\n    const { currentPageIndex, pages } = this.state;\n\n    ReactGA.event({\n      category: 'MyHeroes',\n      action: 'Next Page',\n    });\n\n    let nextPageIndex = currentPageIndex + 1;\n    if (nextPageIndex >= pages - 1) {\n      nextPageIndex = pages - 1;\n    }\n    await this.resetCurrentPageIndexStateAsync(nextPageIndex);\n    await this.resetHeroGroupsStateAsync();\n    await this.loadCardsGroupMaster(nextPageIndex);\n    window.addEventListener('load', AOS.refresh);\n  };\n\n  loadNewCards = async () => {\n    const { lastPurchaseSize } = this.state;\n    const result = await this.getPlayerCardsLastSize(lastPurchaseSize);\n    if (result) {\n      const ids = [];\n      const protos = [];\n      const purities = [];\n      for (let j = 0; j < result.ids.length; j++) {\n        ids.push(result.ids[j]);\n      }\n      for (let j = 0; j < result.protos.length; j++) {\n        protos.push(result.protos[j]);\n      }\n      for (let j = 0; j < result.purities.length; j++) {\n        purities.push(result.purities[j]);\n      }\n      const newHeroes = {\n        ids,\n        protos,\n        purities,\n      };\n\n      this.setState({ newHeroes });\n    }\n  };\n\n  getPlayerCardsGroup = async pages => {\n    return new Promise(async resolve => {\n      let promises = [];\n\n      for (let i = 0; i < pages; ++i) {\n        promises.push(this.getPlayerCardsByPage(i));\n      }\n\n      Promise.all(promises)\n        .then(results => {\n          const ids = [];\n          const protos = [];\n          const purities = [];\n\n          for (let i = 0; i < results.length; i++) {\n            const result = results[i];\n            for (let j = 0; j < result.ids.length; j++) {\n              ids.push(result.ids[j]);\n            }\n            for (let j = 0; j < result.protos.length; j++) {\n              protos.push(result.protos[j]);\n            }\n            for (let j = 0; j < result.purities.length; j++) {\n              purities.push(result.purities[j]);\n            }\n          }\n\n          const heroes = {\n            ids,\n            protos,\n            purities,\n          };\n\n          this.setState({ heroes });\n\n          resolve(true);\n        })\n        .catch(e => {\n          resolve(true);\n        });\n    });\n  };\n\n  handleDisplayOptionChange = async event => {\n    const { heroes } = this.state;\n    await this.setSelectedDisplayOptionStateAsync(event.target.value);\n    await this.resetHeroGroupsStateAsync();\n\n    if (event.target.value === '1') {\n      const pages = await this.getPagesCount(heroes.ids.length);\n\n      await this.resetPagesStateAsync(pages);\n    }\n    await this.resetCurrentPageIndexStateAsync(0);\n\n    await this.loadCardsGroupMaster(0);\n    window.addEventListener('load', AOS.refresh);\n  };\n\n  setSelectedDisplayOptionStateAsync(value) {\n    return new Promise(async resolve => {\n      this.setState({ selectedDisplayOption: value });\n      resolve();\n    });\n  }\n\n  resetHeroGroupsStateAsync() {\n    return new Promise(async resolve => {\n      this.setState({ heroGroups: [] });\n      resolve();\n    });\n  }\n  resetPagesStateAsync(pages) {\n    return new Promise(async resolve => {\n      this.setState({ pages });\n      resolve();\n    });\n  }\n  resetCurrentPageIndexStateAsync(currentPageIndex) {\n    return new Promise(async resolve => {\n      this.setState({ currentPageIndex });\n      resolve();\n    });\n  }\n\n  setRevealNewPurchaseStateAsync(flag) {\n    return new Promise(async resolve => {\n      this.setState({ revealNewPurchase: flag });\n      resolve();\n    });\n  }\n\n  getPlayerCardsLastSize = async size => {\n    const cards = await Tron.getPlayerCardsLastSize(size);\n    return cards;\n  };\n\n  getPlayerCardsByPage = async page => {\n    const cards = await Tron.getPlayerCards(page);\n    return cards;\n  };\n\n  loadCards = async () => {\n    const totalCardsCount = await Tron.balanceOf(\n      window.tronWeb.defaultAddress.base58\n    );\n\n    this.setState({ totalHeroes: totalCardsCount.toNumber() });\n\n    let pages = Math.floor(totalCardsCount.toNumber() / 100);\n\n    if (pages * 100 < totalCardsCount) {\n      pages += 1;\n    }\n\n    await this.getPlayerCardsGroup(pages);\n  };\n\n  loadCardsGroupMaster = async page => {\n    const { selectedDisplayOption } = this.state;\n    if (selectedDisplayOption === '0') {\n      await this.loadCardsGroupStack();\n    } else if (selectedDisplayOption === '1') {\n      await this.loadCardsGroupAll(page);\n    }\n  };\n\n  loadCardsGroupStack = async () => {\n    const { heroes, heroGroups } = this.state;\n    const cards = heroes;\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      if (ids) {\n        for (let i = 0; i < ids.length; i++) {\n          const id = ids[i].toNumber();\n          const proto = protos[i];\n          const purity = purities[i];\n\n          const heroData = this.getHeroData(proto);\n          const rarity = heroData.ra;\n\n          let foundRarityIndex = -1;\n          let foundHero = false;\n          for (let j = 0; j < heroGroups.length; j++) {\n            const heroGroup = heroGroups[j];\n            if (heroGroup.rarity === rarity) {\n              // found Rarity\n              foundRarityIndex = j;\n              if (heroGroup.heroes) {\n                for (let k = 0; k < heroGroup.heroes.length; k++) {\n                  const hero = heroGroup.heroes[k];\n\n                  if (hero.proto === proto) {\n                    // found\n                    foundHero = true;\n\n                    if (hero.bestPurity < purity) {\n                      hero.bestPurity = purity;\n                      hero.bestId = id;\n                    }\n\n                    hero.count += 1;\n                  }\n                }\n              }\n            }\n          }\n\n          if (!foundHero) {\n            //push card\n            const hero = {\n              proto,\n              bestPurity: purity,\n              bestId: id,\n              count: 1,\n            };\n\n            if (foundRarityIndex > -1) {\n              // push to existing group\n              const heroGroup = heroGroups[foundRarityIndex];\n              heroGroup.heroes.push(hero);\n            } else {\n              const newHeroes = [];\n              newHeroes.push(hero);\n\n              const heroGroup = {\n                rarity,\n                heroes: newHeroes,\n              };\n              heroGroups.push(heroGroup);\n            }\n          } // if hero not found\n        } // for i loop\n      }\n    } // if cards\n    this.setState({ heroGroups });\n  };\n\n  loadCardsGroupAll = async page => {\n    const { heroes, heroGroups } = this.state;\n    const cards = heroes;\n\n    const numberPerPage = 40;\n    const startIndex = page * numberPerPage;\n    const endIndex = (page + 1) * numberPerPage - 1;\n    let endIndex2 = endIndex;\n\n    if (cards.ids.length - 1 < endIndex2) {\n      endIndex2 = cards.ids.length - 1;\n    }\n\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      if (ids) {\n        for (let i = startIndex; i <= endIndex2; i++) {\n          const id = ids[i].toNumber();\n          const proto = protos[i];\n          const purity = purities[i];\n\n          const heroData = this.getHeroData(proto);\n          const rarity = heroData.ra;\n\n          let foundRarityIndex = -1;\n          for (let j = 0; j < heroGroups.length; j++) {\n            const heroGroup = heroGroups[j];\n            if (heroGroup.rarity === rarity) {\n              // found Rarity\n              foundRarityIndex = j;\n            }\n          }\n\n          //push card\n          const hero = {\n            proto,\n            bestPurity: purity,\n            bestId: id,\n            count: 1,\n          };\n\n          if (foundRarityIndex > -1) {\n            // push to existing group\n            const heroGroup = heroGroups[foundRarityIndex];\n            heroGroup.heroes.push(hero);\n          } else {\n            const newHeroes = [];\n            newHeroes.push(hero);\n\n            const heroGroup = {\n              rarity,\n              heroes: newHeroes,\n            };\n            heroGroups.push(heroGroup);\n          }\n          // } // if hero not found\n        } // for i loop\n      }\n    } // if cards\n\n    this.setState({ heroGroups });\n  };\n\n  loadNewCardsGroupAll = async () => {\n    const { newHeroes } = this.state;\n    const newHeroGroups = [];\n\n    const cards = newHeroes;\n\n    const startIndex = 0;\n\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n\n      const endIndex = ids.length;\n\n      this.setState({ totalNewHeroes: endIndex });\n\n      if (ids) {\n        for (let i = startIndex; i < endIndex; i++) {\n          const id = ids[i].toNumber();\n          const proto = protos[i];\n          const purity = purities[i];\n\n          const heroData = this.getHeroData(proto);\n\n          const rarity = heroData.ra;\n\n          let foundRarityIndex = -1;\n          for (let j = 0; j < newHeroGroups.length; j++) {\n            const heroGroup = newHeroGroups[j];\n            if (heroGroup.rarity === rarity) {\n              // found Rarity\n              foundRarityIndex = j;\n            }\n          }\n\n          //push card\n          const hero = {\n            proto,\n            bestPurity: purity,\n            bestId: id,\n            count: 1,\n          };\n          if (foundRarityIndex > -1) {\n            // push to existing group\n            const heroGroup = newHeroGroups[foundRarityIndex];\n            heroGroup.heroes.push(hero);\n          } else {\n            const nHeroes = [];\n            nHeroes.push(hero);\n\n            const heroGroup = {\n              rarity,\n              heroes: nHeroes,\n            };\n            newHeroGroups.push(heroGroup);\n          }\n          // } // if hero not found\n        } // for i loop\n      }\n    } // if cards\n\n    this.setState({ newHeroGroups });\n  };\n\n  getPagesCount = total => {\n    const numberPerPage = 40;\n    let pages = Math.floor(total / numberPerPage);\n\n    if (pages * numberPerPage < total) {\n      pages += 1;\n    }\n    return pages;\n  };\n\n  Comparator = (a, b) => {\n    if (a.rarity < b.rarity) return 1;\n    if (a.rarity > b.rarity) return -1;\n    return 0;\n  };\n\n  ComparatorPurity = (a, b) => {\n    if (a.bestPurity < b.bestPurity) return 1;\n    if (a.bestPurity > b.bestPurity) return -1;\n    return 0;\n  };\n\n  reorderHeroGroups = heroGroups => {\n    return heroGroups.sort(this.Comparator);\n  };\n\n  getBestHeroFromGroup = heroGroups => {\n    let bestHero = null;\n    if (heroGroups) {\n      if (heroGroups.length > 0) {\n        const bestHeroGroup = heroGroups[0];\n\n        if (bestHeroGroup) {\n          if (bestHeroGroup.heroes) {\n            const reorderHeroes = bestHeroGroup.heroes.sort(\n              this.ComparatorPurity\n            );\n            if (reorderHeroes) {\n              if (reorderHeroes.length > 0) {\n                bestHero = reorderHeroes[0];\n              }\n            }\n          }\n        }\n      }\n    }\n    return bestHero;\n  };\n\n  getHeroGroupsSummary = heroGroups => {\n    let summary = {\n      common: 0,\n      rare: 0,\n      epic: 0,\n      legendary: 0,\n      mythic: 0,\n      special: 0,\n    };\n    if (heroGroups) {\n      if (heroGroups.length > 0) {\n        for (let i = 0; i < heroGroups.length; i++) {\n          const heroGroup = heroGroups[i];\n          if (heroGroup) {\n            if (heroGroup.heroes) {\n              if (heroGroup.heroes.length > 0) {\n                const heroData = this.getHeroData(heroGroup.heroes[0].proto);\n                if (heroData.ra === 0) {\n                  summary.common = heroGroup.heroes.length;\n                } else if (heroData.ra === 1) {\n                  summary.rare = heroGroup.heroes.length;\n                } else if (heroData.ra === 2) {\n                  summary.epic = heroGroup.heroes.length;\n                } else if (heroData.ra === 3) {\n                  summary.legendary = heroGroup.heroes.length;\n                } else if (heroData.ra === 4) {\n                  summary.mythic = heroGroup.heroes.length;\n                } else if (heroData.ra === 5) {\n                  summary.special = heroGroup.heroes.length;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return summary;\n  };\n\n  getHeroData = id => {\n    for (let i = 0; i < presetHeroes.length; i++) {\n      if (presetHeroes[i].id === id) {\n        return presetHeroes[i];\n      }\n    }\n    return null;\n  };\n\n  getHeroSkills = ids => {\n    let skills = [];\n    if (ids) {\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i];\n\n        for (let j = 0; j < presetSkills.length; j++) {\n          if (presetSkills[j].id === id) {\n            skills.push(presetSkills[j]);\n          }\n        }\n      }\n    }\n\n    return skills;\n  };\n\n  getModifiedStats = (stats, talent) => {\n    const final = Math.round(stats * (1 + talent / 1300));\n    return final;\n  };\n\n  getAttackImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/sword-common.png';\n      case 1:\n        return 'images/misc/sword-rare.png';\n      case 2:\n        return 'images/misc/sword-epic.png';\n      case 3:\n        return 'images/misc/sword-legendary.png';\n      case 4:\n        return 'images/misc/sword-mythic.png';\n      default:\n        return 'images/misc/sword-special.png';\n    }\n  };\n\n  getDefenceImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/shield-common.png';\n      case 1:\n        return 'images/misc/shield-rare.png';\n      case 2:\n        return 'images/misc/shield-epic.png';\n      case 3:\n        return 'images/misc/shield-legendary.png';\n      case 4:\n        return 'images/misc/shield-mythic.png';\n      default:\n        return 'images/misc/shield-special.png';\n    }\n  };\n\n  getHealthImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/heart-common.png';\n      case 1:\n        return 'images/misc/heart-rare.png';\n      case 2:\n        return 'images/misc/heart-epic.png';\n      case 3:\n        return 'images/misc/heart-legendary.png';\n      case 4:\n        return 'images/misc/heart-mythic.png';\n      default:\n        return 'images/misc/heart-special.png';\n    }\n  };\n  getHealingImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/healing-common.png';\n      case 1:\n        return 'images/misc/healing-rare.png';\n      case 2:\n        return 'images/misc/healing-epic.png';\n      case 3:\n        return 'images/misc/healing-legendary.png';\n      case 4:\n        return 'images/misc/healing-mythic.png';\n      default:\n        return 'images/misc/healing-special.png';\n    }\n  };\n\n  getPlateCss = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'plate-green';\n      case 1:\n        return 'plate-blue';\n      case 2:\n        return 'plate-pink';\n      case 3:\n        return 'plate-gold';\n      case 4:\n        return 'plate-red';\n      default:\n        return 'plate-silver';\n    }\n  };\n\n  getPlateHighlightCss = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'plate-green-highlight';\n      case 1:\n        return 'plate-blue-highlight';\n      case 2:\n        return 'plate-pink-highlight';\n      case 3:\n        return 'plate-gold-highlight';\n      case 4:\n        return 'plate-red-highlight';\n      default:\n        return 'plate-silver-highlight';\n    }\n  };\n\n  getSkillCss = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'skill-green';\n      case 1:\n        return 'skill-blue';\n      case 2:\n        return 'skill-pink';\n      case 3:\n        return 'skill-gold';\n      case 4:\n        return 'skill-red';\n      default:\n        return 'skill-silver';\n    }\n  };\n\n  getRarityClass = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'Common';\n      case 1:\n        return 'Rare';\n      case 2:\n        return 'Epic';\n      case 3:\n        return 'Legendary';\n      case 4:\n        return 'Mythic';\n      default:\n        return 'Special';\n    }\n  };\n\n  getRarityText = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'general.common';\n      case 1:\n        return 'general.rare';\n      case 2:\n        return 'general.epic';\n      case 3:\n        return 'general.legendary';\n      case 4:\n        return 'general.mythic';\n      default:\n        return 'general.special';\n    }\n  };\n\n  getRoleImage = role => {\n    switch (role) {\n      case 0:\n        return 'images/misc/tank.png';\n      case 1:\n        return 'images/misc/damage.png';\n      case 2:\n        return 'images/misc/healer.png';\n      default:\n        return 'images/misc/damage.png';\n    }\n  };\n\n  renderNewPurchase() {\n    const { totalNewHeroes, newHeroGroups } = this.state;\n\n    const heroGroupsReordered = this.reorderHeroGroups(newHeroGroups);\n\n    const bestHero = this.getBestHeroFromGroup(heroGroupsReordered);\n    let bestHeroes = [];\n    bestHeroes.push(bestHero);\n    const heroesSummary = this.getHeroGroupsSummary(heroGroupsReordered);\n\n    let totalCount = 0;\n    return (\n      <div className=\"cards\">\n        <div color=\"primary\" className=\"card game-card\">\n          <Typography variant=\"h4\" color=\"secondary\">\n            <span className=\"glowing-pink white\">\n              <Translate id=\"myheroes.congratulations\" /> x{totalNewHeroes}{' '}\n              <Translate id=\"general.newheroes\" />\n            </span>\n          </Typography>\n\n          <div className=\"full-width\">\n            <div className=\"space\" />\n            <Grid container spacing={24}>\n              {bestHeroes.map(hero => {\n                if (hero) {\n                  const heroName = `hero.${hero.proto}n`;\n                  const heroData = this.getHeroData(hero.proto);\n                  const heroImage = `images/hero/${hero.proto}.png`;\n\n                  const attackImage = this.getAttackImage(heroData.ra);\n                  const defenceImage = this.getDefenceImage(heroData.ra);\n                  const healthImage = this.getHealthImage(heroData.ra);\n                  const healingImage = this.getHealingImage(heroData.ra);\n\n                  const skills = this.getHeroSkills(heroData.s);\n\n                  const heroCount = hero.count;\n\n                  totalCount = totalCount + heroCount;\n\n                  const plateCss = this.getPlateHighlightCss(heroData.ra);\n                  const skillBackgroundCss = this.getSkillCss(heroData.ra);\n                  const roleImageSrc = this.getRoleImage(heroData.rl);\n                  const raritycla = this.getRarityClass(heroData.ra);\n                  const rarityText = this.getRarityText(heroData.ra);\n                  const rarityClass = `hero-rarity ${raritycla}`;\n\n                  const bgClass = `bg-${hero.proto}`;\n\n                  const boxCss = `hero-plate card ${plateCss}`;\n                  const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                  return (\n                    <Grid item xs={12} sm={6} md={6} lg={6} className=\"card\">\n                      <div key={hero.proto} className=\"hero-placeholder shine\">\n                        <div className=\"hero-attack\">{hero.bestPurity}</div>\n\n                        <div className=\"hero-role\">\n                          <img\n                            className=\"image-skill-small\"\n                            src={roleImageSrc}\n                            alt=\"hero\"\n                          />\n                        </div>\n                        <div className={rarityClass}>\n                          <Translate id={rarityText} />\n                        </div>\n                        <div className={boxCss}>\n                          <div className={bgClass}>\n                            <img\n                              className=\"image-hero-small\"\n                              src={heroImage}\n                              alt=\"hero\"\n                            />\n                          </div>\n\n                          <div className=\"space\" />\n                          <div className=\"hero-name-banner\">\n                            <Translate id={heroName} />\n                          </div>\n\n                          <div className=\"hero-stats-plate\">\n                            {heroData.hl > 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healingImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.hl,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n\n                            {heroData.hl === 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n                          </div>\n\n                          <div className={skillCss}>\n                            <span className=\"hero-skill-banner\">\n                              <Translate id=\"hero.skill\" />\n                            </span>\n                            {skills.map(skill => {\n                              const imageSrc = `images/skill/${skill.id}.png`;\n                              const skillName = `skill.${skill.id}n`;\n                              const skillDesc = `skill.${skill.id}d`;\n                              return (\n                                <div key={skill.id} className=\"hero-skill-item\">\n                                  <div className=\"icon\">\n                                    <img\n                                      className=\"image-skill-small\"\n                                      src={imageSrc}\n                                      alt=\"hero\"\n                                    />\n                                  </div>\n\n                                  <div className=\"description text-shadow\">\n                                    <div className=\"title text-shadow\">\n                                      <Translate id={skillName} />\n                                    </div>\n                                    <Translate id={skillDesc} />\n                                  </div>\n                                </div>\n                              );\n                            })}\n\n                            <div className=\"space\" />\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  );\n                } else {\n                  return <div />;\n                }\n              })}\n\n              <Grid item xs={12} md={6} lg={6}>\n                <div className=\"space\" />\n\n                <Grid container spacing={24}>\n                  {heroesSummary.special > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-silver\">\n                        <Translate id=\"general.special\" /> x\n                        {heroesSummary.special}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n\n                  {heroesSummary.mythic > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-red\">\n                        <Translate id=\"general.mythic\" /> x\n                        {heroesSummary.mythic}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n\n                  {heroesSummary.legendary > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-gold\">\n                        <Translate id=\"general.legendary\" /> x\n                        {heroesSummary.legendary}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n\n                  {heroesSummary.epic > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-pink\">\n                        <Translate id=\"general.epic\" /> x{heroesSummary.epic}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n\n                  {heroesSummary.rare > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-blue\">\n                        <Translate id=\"general.rare\" /> x{heroesSummary.rare}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n\n                  {heroesSummary.common > 0 && (\n                    <Grid item xs={12}>\n                      <div className=\"large-text glowing-green\">\n                        <Translate id=\"general.common\" /> x\n                        {heroesSummary.common}\n                      </div>\n                      <div className=\"space\" />\n                    </Grid>\n                  )}\n                  <Grid item xs={12}>\n                    <Button\n                      id=\"send-token-button\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      size=\"large\"\n                      onClick={this.confirmNewPurchase}\n                    >\n                      <Translate id=\"general.ok\" />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <div className=\"space\" />\n\n            <Grid container spacing={24}>\n              {heroGroupsReordered.map(heroGroup => {\n                return heroGroup.heroes.map(hero => {\n                  const heroName = `hero.${hero.proto}n`;\n                  const heroData = this.getHeroData(hero.proto);\n                  const heroImage = `images/hero/${hero.proto}.png`;\n\n                  const attackImage = this.getAttackImage(heroData.ra);\n                  const defenceImage = this.getDefenceImage(heroData.ra);\n                  const healthImage = this.getHealthImage(heroData.ra);\n                  const healingImage = this.getHealingImage(heroData.ra);\n\n                  const skills = this.getHeroSkills(heroData.s);\n\n                  const heroCount = hero.count;\n\n                  totalCount = totalCount + heroCount;\n\n                  const plateCss = this.getPlateCss(heroData.ra);\n                  const skillBackgroundCss = this.getSkillCss(heroData.ra);\n                  const roleImageSrc = this.getRoleImage(heroData.rl);\n                  const raritycla = this.getRarityClass(heroData.ra);\n                  const rarityText = this.getRarityText(heroData.ra);\n                  const rarityClass = `hero-rarity ${raritycla}`;\n\n                  const bgClass = `bg-${hero.proto}`;\n\n                  const boxCss = `hero-plate card ${plateCss}`;\n                  const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                  return (\n                    <Grid item xs={12} sm={6} md={3} lg={3} className=\"card\">\n                      <div key={hero.proto} className=\"hero-placeholder\">\n                        <div className=\"hero-attack\">{hero.bestPurity}</div>\n\n                        <div className=\"hero-role\">\n                          <img\n                            className=\"image-skill-small\"\n                            src={roleImageSrc}\n                            alt=\"hero\"\n                          />\n                        </div>\n                        <div className={rarityClass}>\n                          <Translate id={rarityText} />\n                        </div>\n                        <div className={boxCss}>\n                          <div className={bgClass}>\n                            <img\n                              className=\"image-hero-small\"\n                              src={heroImage}\n                              alt=\"hero\"\n                            />\n                          </div>\n\n                          <div className=\"space\" />\n                          <div className=\"hero-name-banner\">\n                            <Translate id={heroName} />\n                          </div>\n\n                          <div className=\"hero-stats-plate\">\n                            {heroData.hl > 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healingImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.hl,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n\n                            {heroData.hl === 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n                          </div>\n\n                          <div className={skillCss}>\n                            <span className=\"hero-skill-banner\">\n                              <Translate id=\"hero.skill\" />\n                            </span>\n                            {skills.map(skill => {\n                              const imageSrc = `images/skill/${skill.id}.png`;\n                              const skillName = `skill.${skill.id}n`;\n                              const skillDesc = `skill.${skill.id}d`;\n                              return (\n                                <div key={skill.id} className=\"hero-skill-item\">\n                                  <div className=\"icon\">\n                                    <img\n                                      className=\"image-skill-small\"\n                                      src={imageSrc}\n                                      alt=\"hero\"\n                                    />\n                                  </div>\n\n                                  <div className=\"description text-shadow\">\n                                    <div className=\"title text-shadow\">\n                                      <Translate id={skillName} />\n                                    </div>\n                                    <Translate id={skillDesc} />\n                                  </div>\n                                </div>\n                              );\n                            })}\n\n                            <div className=\"space\" />\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  );\n                });\n              })}\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderPlayerCards() {\n    const {\n      totalHeroes,\n      selectedDisplayOption,\n      heroGroups,\n      pages,\n      currentPageIndex,\n    } = this.state;\n\n    const heroGroupsReordered = this.reorderHeroGroups(heroGroups);\n    let totalCount = 0;\n    return (\n      <div className=\"cards\">\n        <div className=\"space\" />\n        <div color=\"primary\" className=\"card game-card\">\n          <Typography variant=\"h4\" color=\"secondary\">\n            <span className=\"glowing-pink white\">\n              <Translate id=\"general.myheroes\" />{' '}\n              {totalHeroes > 0 ? `x${totalHeroes}` : ''}\n            </span>\n          </Typography>\n\n          <div className=\"my-account\">\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <div className=\"display-option-placeholder\">\n                  <div className=\"display-option\">\n                    <span>\n                      <TextField\n                        select\n                        label=\"\"\n                        name=\"selectedDisplayOption\"\n                        className=\"display-option-textfield\"\n                        value={selectedDisplayOption}\n                        onChange={this.handleDisplayOptionChange}\n                        margin=\"normal\"\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        InputProps={{\n                          startAdornment: (\n                            <img\n                              src=\"images/misc/tick.png\"\n                              className=\"tick-icon\"\n                              alt=\"tick\"\n                            />\n                          ),\n                        }}\n                      >\n                        <MenuItem key=\"0\" value=\"0\">\n                          <div className=\"select-container\">\n                            <Translate id=\"general.displaybest\" />\n                          </div>\n                        </MenuItem>\n                        <MenuItem key=\"1\" value=\"1\">\n                          <div className=\"select-container\">\n                            <Translate id=\"general.displayall\" />\n                          </div>\n                        </MenuItem>\n                      </TextField>\n\n                      {selectedDisplayOption === '1' && (\n                        <div className=\"glowing-green\">\n                          <span>\n                            {currentPageIndex > 0 && (\n                              <Tooltip\n                                title={<Translate id=\"general.previousPage\" />}\n                              >\n                                <IconButton\n                                  color=\"inherit\"\n                                  className=\"glowing-green\"\n                                  onClick={this.previousPage}\n                                >\n                                  <span>&lt;</span>\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </span>\n\n                          <span>\n                            {currentPageIndex + 1}/{pages}{' '}\n                            <Translate id=\"general.pages\" />\n                          </span>\n\n                          <span>\n                            {currentPageIndex + 1 < pages && (\n                              <Tooltip\n                                title={<Translate id=\"general.nextPage\" />}\n                              >\n                                <IconButton\n                                  color=\"inherit\"\n                                  className=\"glowing-green\"\n                                  onClick={this.nextPage}\n                                >\n                                  <span>&gt;</span>\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </span>\n                        </div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={24}>\n              {heroGroupsReordered.map(heroGroup => {\n                return heroGroup.heroes.map(hero => {\n                  const heroName = `hero.${hero.proto}n`;\n                  const heroData = this.getHeroData(hero.proto);\n                  const heroImage = `images/hero/${hero.proto}.png`;\n\n                  const attackImage = this.getAttackImage(heroData.ra);\n                  const defenceImage = this.getDefenceImage(heroData.ra);\n                  const healthImage = this.getHealthImage(heroData.ra);\n                  const healingImage = this.getHealingImage(heroData.ra);\n\n                  const skills = this.getHeroSkills(heroData.s);\n\n                  const heroCount = hero.count;\n\n                  totalCount = totalCount + heroCount;\n\n                  const plateCss = this.getPlateCss(heroData.ra);\n                  const skillBackgroundCss = this.getSkillCss(heroData.ra);\n                  const roleImageSrc = this.getRoleImage(heroData.rl);\n                  const raritycla = this.getRarityClass(heroData.ra);\n                  const rarityText = this.getRarityText(heroData.ra);\n                  const rarityClass = `hero-rarity ${raritycla}`;\n\n                  const bgClass = `bg-${hero.proto}`;\n\n                  const boxCss = `hero-plate card ${plateCss}`;\n                  const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                  return (\n                    <Grid item xs={12} sm={6} md={3} lg={3} className=\"card\">\n                      <div\n                        key={hero.proto}\n                        className=\"hero-placeholder\"\n                        data-aos=\"flip-right\"\n                        data-aos-delay=\"50\"\n                        data-aos-anchor-placement=\"top-center\"\n                      >\n                        <div className=\"hero-attack\">{hero.bestPurity}</div>\n                        {selectedDisplayOption === '0' && (\n                          <div className=\"hero-defence\">{heroCount}</div>\n                        )}\n                        <div className=\"hero-role\">\n                          <img\n                            className=\"image-skill-small\"\n                            src={roleImageSrc}\n                            alt=\"hero\"\n                          />\n                        </div>\n                        <div className={rarityClass}>\n                          <Translate id={rarityText} />\n                        </div>\n                        <div className={boxCss}>\n                          <div className={bgClass}>\n                            <img\n                              className=\"image-hero-small\"\n                              src={heroImage}\n                              alt=\"hero\"\n                            />\n                          </div>\n\n                          <div className=\"space\" />\n                          <div className=\"hero-name-banner\">\n                            <Translate id={heroName} />\n                          </div>\n\n                          <div className=\"hero-stats-plate\">\n                            {heroData.hl > 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healingImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.hl,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n\n                            {heroData.hl === 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.a,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.d,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {this.getModifiedStats(\n                                        heroData.he,\n                                        hero.bestPurity\n                                      )}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n                          </div>\n\n                          <div className={skillCss}>\n                            <span className=\"hero-skill-banner\">\n                              <Translate id=\"hero.skill\" />\n                            </span>\n                            {skills.map(skill => {\n                              let imageSrc = `images/skill/${skill.id}.png`;\n                              let skillName = `skill.${skill.id}n`;\n                              let skillDesc = `skill.${skill.id}d`;\n                              return (\n                                <div key={skill.id} className=\"hero-skill-item\">\n                                  <div className=\"icon\">\n                                    <img\n                                      className=\"image-skill-small\"\n                                      src={imageSrc}\n                                      alt=\"hero\"\n                                    />\n                                  </div>\n\n                                  <div className=\"description text-shadow\">\n                                    <div className=\"title text-shadow\">\n                                      <Translate id={skillName} />\n                                    </div>\n                                    <Translate id={skillDesc} />\n                                  </div>\n                                </div>\n                              );\n                            })}\n\n                            <div className=\"space\" />\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  );\n                });\n              })}\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { revealNewPurchase, loaded } = this.state;\n    if (loaded) {\n      if (revealNewPurchase) {\n        return this.renderNewPurchase();\n      } else {\n        return this.renderPlayerCards();\n      }\n    } else {\n      return (\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <Typography variant=\"h4\" color=\"secondary\">\n              <span className=\"glowing-pink white\">\n                <Translate id=\"general.loading\" />\n              </span>\n            </Typography>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withLocalize(MyHeroes));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport Button from '@material-ui/core/Button/Button';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ReactGA from 'react-ga';\n\nimport siteTranslations from '../translations/site.json';\n\nimport imgTron from '../images/tron-logo.png';\nimport imgSS from '../images/soulstone.png';\nimport { showSnackbar } from '../actions/snackbar';\n\nimport Tron, { TRON_WEB_STATE_UNLOCKED } from '../utils/tron';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_SUCCESS,\n} from './WalletSnackbar';\n\nAOS.init();\n\nconst WEB_SITE_URL = 'https://tronlegend.games';\n\nconst initialState = {\n  stones: 0,\n  claimableDividend: 0,\n  claimedDividend: 0,\n  referral: 0,\n  loaded: false,\n  accountValidForReferral: false,\n};\n\nclass MyAccount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    await this.commonInit();\n    window.addEventListener('load', AOS.refresh);\n\n    ReactGA.pageview('/my-account');\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.commonInit();\n    }\n  }\n\n  async commonInit() {\n    const tronWebState = await Tron.initTronWeb();\n    if (tronWebState !== TRON_WEB_STATE_UNLOCKED) {\n      return;\n    }\n    await this.loadPlayerData();\n  }\n\n  loadPlayerData = async () => {\n    const playerData = await Tron.getPlayerData();\n    const accountData = await Tron.currentAddressBalance();\n    if (accountData > 0) {\n      this.setState({ accountValidForReferral: true });\n    } else {\n      this.setState({ accountValidForReferral: false });\n    }\n    this.setState({ stones: playerData.stones });\n    this.setState({ claimedDividend: playerData.claimedDividend });\n    this.setState({ claimableDividend: playerData.claimableDividend });\n    this.setState({ referral: playerData.referral });\n\n    this.setState({ loaded: true });\n  };\n\n  claimDividend = async () => {\n    const { showSnackbar } = this.props;\n\n    ReactGA.event({\n      category: 'MyAccount',\n      action: 'Claim Dividend',\n    });\n\n    try {\n      // showSnackbar('message.actionInProgress', SNACKBAR_INFO);\n      const result = await Tron.claimDividend();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.dividendClaimed', SNACKBAR_SUCCESS);\n\n      await this.loadPlayerData();\n      window.addEventListener('load', AOS.refresh);\n    } catch (e) {\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error && e.message) {\n          if (\n            e.error === 'CONTRACT_VALIDATE_ERROR' &&\n            e.message.indexOf('balance is not sufficient') > 0\n          ) {\n            showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  isSending = () => {\n    const { isLoading } = this.state;\n    return !!isLoading;\n  };\n\n  copyLink = async () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    ReactGA.event({\n      category: 'MyAccount',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  render() {\n    const {\n      stones,\n      claimableDividend,\n      claimedDividend,\n      referral,\n      accountValidForReferral,\n      loaded,\n    } = this.state;\n    const myReferralLink = loaded\n      ? window.tronWeb\n        ? `${WEB_SITE_URL}?r=${window.tronWeb.defaultAddress.base58}`\n        : ``\n      : '';\n    return (\n      <div className=\"home\">\n        {loaded ? (\n          <div className=\"cards\">\n            <div color=\"primary\" className=\"card home-card\">\n              <Typography variant=\"h4\" color=\"secondary\">\n                <span className=\"glowing-pink white\">\n                  <Translate id=\"general.myaccount\" />\n                </span>\n              </Typography>\n              <div className=\"kingdom-placeholder\">\n                <Grid container spacing={24}>\n                  <Grid item xs={12} md={6} lg={6}>\n                    <Grid container spacing={24} className=\"card\">\n                      <Grid item xs={12}>\n                        <span>\n                          <Translate id=\"general.soulstone\" />:{' '}\n                          <span className=\"large-text glowing-gold\">\n                            {stones}\n                          </span>{' '}\n                          <img\n                            src={imgSS}\n                            alt=<Translate id=\"general.soulstone\" />\n                            className=\"image-ss-medium\"\n                          />\n                        </span>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <span>\n                          <Translate id=\"myaccount.claimeddividend\" />:{' '}\n                          <span className=\"large-text glowing-blue\">\n                            {Tron.sunToTrx(claimedDividend)} TRX\n                          </span>{' '}\n                        </span>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <span>\n                          <Translate id=\"myaccount.claimedreferral\" />:{' '}\n                          <span className=\"large-text glowing-blue\">\n                            {Tron.sunToTrx(referral)} TRX\n                          </span>{' '}\n                        </span>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <div>\n                          <Translate id=\"myaccount.myreferrallink\" /> (\n                          <Translate id=\"myaccount.intro1\" />{' '}\n                          <span className=\"glowing-pink\">10%</span>{' '}\n                          <Translate id=\"myaccount.intro2\" />)\n                        </div>\n\n                        {accountValidForReferral ? (\n                          <Grid item xs={12}>\n                            <div>\n                              <TextField\n                                label=\"\"\n                                name=\"selectedAsset\"\n                                className=\"referral-link-box\"\n                                value={myReferralLink}\n                                margin=\"normal\"\n                                color=\"secondary\"\n                                variant=\"outlined\"\n                              />\n                            </div>\n                            <div>\n                              <CopyToClipboard\n                                text={myReferralLink}\n                                onCopy={() => {\n                                  this.copyLink();\n                                }}\n                              >\n                                <Button\n                                  className=\"roll-quick-button\"\n                                  variant=\"contained\"\n                                  size=\"small\"\n                                  color=\"primary\"\n                                >\n                                  <span className=\"glowing-red\">\n                                    <Translate id=\"myaccount.copylink\" />\n                                  </span>\n                                </Button>\n                              </CopyToClipboard>\n                            </div>\n                          </Grid>\n                        ) : (\n                          <Grid item xs={12}>\n                            <div className=\"space\" />\n                            <div>\n                              <span className=\"glowing-red\">\n                                <Translate id=\"myaccount.invalidreferral\" />\n                              </span>\n                            </div>\n                          </Grid>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <div className=\"card\">\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <div>\n                            <Translate id=\"myaccount.intro3\" />{' '}\n                            <span className=\"large-text glowing-blue\">\n                              {Tron.sunToTrx(claimableDividend)} TRX\n                            </span>{' '}\n                          </div>\n                          <div className=\"space\" />\n                          <img\n                            src={imgTron}\n                            alt=<Translate id=\"myaccount.claim\" />\n                            className=\"image-tron\"\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <div className=\"buy-placeholder\">\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  id=\"send-token-button\"\n                                  variant=\"contained\"\n                                  color=\"secondary\"\n                                  size=\"large\"\n                                  onClick={this.claimDividend}\n                                  disabled={this.isSending()}\n                                >\n                                  <Translate id=\"myaccount.claim\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"cards\">\n            <div color=\"primary\" className=\"card home-card\">\n              <Typography variant=\"h4\" color=\"secondary\">\n                <span className=\"glowing-pink white\">\n                  <Translate id=\"general.loading\" />\n                </span>\n              </Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(MyAccount));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\nimport heroTranslations from '../translations/hero.json';\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport { showSnackbar } from '../actions/snackbar';\n\nimport { setScreen } from '../actions/app';\n\nimport Tron from '../utils/tron';\n\nimport presetHeroes from '../config/hero';\nimport presetSkills from '../config/skill';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass AllHeroes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      purchases: null,\n      totalHeroes: 0,\n      heroes: [],\n      cards: [],\n      heroGroups: [],\n      lastUpdatedTime: null,\n    };\n    this.props.addTranslation(siteTranslations);\n    this.props.addTranslation(heroTranslations);\n  }\n\n  async componentDidMount() {\n    await Tron.initTronWeb();\n    this.loadCards();\n    this.loadCardsGroup();\n    window.addEventListener('load', AOS.refresh);\n\n    ReactGA.pageview('/heroes');\n  }\n\n  getPlayerCardsGroup = () => {\n    const ids = [];\n    const protos = [];\n    const purities = [];\n\n    for (let i = 0; i < presetHeroes.length; i++) {\n      ids.push(presetHeroes[i].id);\n      protos.push(presetHeroes[i].id);\n      purities.push(0);\n    }\n\n    const heroes = {\n      ids,\n      protos,\n      purities,\n    };\n\n    this.setState({ heroes });\n  };\n\n  loadCards = () => {\n    this.setState({ totalHeroes: 30 });\n    this.getPlayerCardsGroup();\n  };\n\n  loadCardsGroup = () => {\n    const { heroes } = this.state;\n    const cards = heroes;\n\n    const { heroGroups } = this.state;\n    if (cards) {\n      const ids = cards.ids;\n      const protos = cards.protos;\n      const purities = cards.purities;\n      if (ids) {\n        for (let i = 0; i < ids.length; i++) {\n          const id = ids[i];\n          const proto = protos[i];\n          const purity = purities[i];\n          console.log(proto);\n          const heroData = this.getHeroData(proto);\n          const rarity = heroData.ra;\n\n          let foundRarityIndex = -1;\n          let foundHero = false;\n          for (let j = 0; j < heroGroups.length; j++) {\n            const heroGroup = heroGroups[j];\n            if (heroGroup.rarity === rarity) {\n              // found Rarity\n              foundRarityIndex = j;\n              if (heroGroup.heroes) {\n                for (let k = 0; k < heroGroup.heroes.length; k++) {\n                  const hero = heroGroup.heroes[k];\n\n                  if (hero.proto === proto) {\n                    // found\n                    foundHero = true;\n\n                    if (hero.bestPurity < purity) {\n                      hero.bestPurity = purity;\n                      hero.bestId = id;\n                    }\n\n                    hero.count += 1;\n                  }\n                }\n              }\n            }\n          }\n\n          if (!foundHero) {\n            //push card\n            const hero = {\n              proto: proto,\n              bestPurity: purity,\n              bestId: id,\n              count: 1,\n            };\n\n            if (foundRarityIndex > -1) {\n              // push to existing group\n              const heroGroup = heroGroups[foundRarityIndex];\n              heroGroup.heroes.push(hero);\n            } else {\n              const newHeroes = [];\n              newHeroes.push(hero);\n\n              const heroGroup = {\n                rarity: rarity,\n                heroes: newHeroes,\n              };\n              heroGroups.push(heroGroup);\n            }\n          } // if hero not found\n        } // for i loop\n      } // if ids\n    } // if cards\n\n    this.setState({ heroGroups });\n  };\n\n  Comparator = (a, b) => {\n    if (a.rarity < b.rarity) return 1;\n    if (a.rarity > b.rarity) return -1;\n    return 0;\n  };\n\n  reorderHeroGroups = heroGroups => {\n    return heroGroups.sort(this.Comparator);\n  };\n\n  getHeroData = id => {\n    for (let i = 0; i < presetHeroes.length; i++) {\n      if (presetHeroes[i].id === id) {\n        return presetHeroes[i];\n      }\n    }\n    return null;\n  };\n\n  getHeroSkills = ids => {\n    let skills = [];\n    if (ids) {\n      for (let i = 0; i < ids.length; i++) {\n        let id = ids[i];\n\n        for (let j = 0; j < presetSkills.length; j++) {\n          if (presetSkills[j].id === id) {\n            skills.push(presetSkills[j]);\n          }\n        }\n      }\n    }\n\n    return skills;\n  };\n\n  getAttackImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/sword-common.png';\n      case 1:\n        return 'images/misc/sword-rare.png';\n      case 2:\n        return 'images/misc/sword-epic.png';\n      case 3:\n        return 'images/misc/sword-legendary.png';\n      case 4:\n        return 'images/misc/sword-mythic.png';\n      default:\n        return 'images/misc/sword-special.png';\n    }\n  };\n\n  getDefenceImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/shield-common.png';\n      case 1:\n        return 'images/misc/shield-rare.png';\n      case 2:\n        return 'images/misc/shield-epic.png';\n      case 3:\n        return 'images/misc/shield-legendary.png';\n      case 4:\n        return 'images/misc/shield-mythic.png';\n      default:\n        return 'images/misc/shield-special.png';\n    }\n  };\n\n  getHealthImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/heart-common.png';\n      case 1:\n        return 'images/misc/heart-rare.png';\n      case 2:\n        return 'images/misc/heart-epic.png';\n      case 3:\n        return 'images/misc/heart-legendary.png';\n      case 4:\n        return 'images/misc/heart-mythic.png';\n      default:\n        return 'images/misc/heart-special.png';\n    }\n  };\n\n  getHealingImage = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'images/misc/healing-common.png';\n      case 1:\n        return 'images/misc/healing-rare.png';\n      case 2:\n        return 'images/misc/healing-epic.png';\n      case 3:\n        return 'images/misc/healing-legendary.png';\n      case 4:\n        return 'images/misc/healing-mythic.png';\n      default:\n        return 'images/misc/healing-special.png';\n    }\n  };\n\n  getPlateCss = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'plate-green';\n      case 1:\n        return 'plate-blue';\n      case 2:\n        return 'plate-pink';\n      case 3:\n        return 'plate-gold';\n      case 4:\n        return 'plate-red';\n      default:\n        return 'plate-silver';\n    }\n  };\n\n  getSkillCss = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'skill-green';\n      case 1:\n        return 'skill-blue';\n      case 2:\n        return 'skill-pink';\n      case 3:\n        return 'skill-gold';\n      case 4:\n        return 'skill-red';\n      default:\n        return 'skill-silver';\n    }\n  };\n\n  getRarityClass = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'Common';\n      case 1:\n        return 'Rare';\n      case 2:\n        return 'Epic';\n      case 3:\n        return 'Legendary';\n      case 4:\n        return 'Mythic';\n      default:\n        return 'Common';\n    }\n  };\n\n  getRarityText = rarity => {\n    switch (rarity) {\n      case 0:\n        return 'general.common';\n      case 1:\n        return 'general.rare';\n      case 2:\n        return 'general.epic';\n      case 3:\n        return 'general.legendary';\n      case 4:\n        return 'general.mythic';\n      default:\n        return 'general.common';\n    }\n  };\n\n  getRoleImage = role => {\n    switch (role) {\n      case 0:\n        return 'images/misc/tank.png';\n      case 1:\n        return 'images/misc/damage.png';\n      case 2:\n        return 'images/misc/healer.png';\n      default:\n        return 'images/misc/damage.png';\n    }\n  };\n\n  render() {\n    const { totalHeroes, heroGroups } = this.state;\n\n    const heroGroupsReordered = this.reorderHeroGroups(heroGroups);\n\n    let totalCount = 0;\n    return (\n      <div className=\"cards\">\n        <div className=\"space\" />\n        <div color=\"primary\" className=\"card game-card\">\n          <Typography variant=\"h4\" color=\"secondary\">\n            <span className=\"glowing-pink white\">\n              <Translate id=\"general.allheroes\" />{' '}\n              {totalHeroes > 0 ? `x${totalHeroes}` : ''}\n            </span>\n          </Typography>\n\n          <div className=\"my-account\">\n            <Grid container spacing={24}>\n              {heroGroupsReordered.map(heroGroup => {\n                return heroGroup.heroes.map(hero => {\n                  const heroName = `hero.${hero.proto}n`;\n                  const heroData = this.getHeroData(hero.proto);\n                  const heroImage = `images/hero/${hero.proto}.png`;\n\n                  const attackImage = this.getAttackImage(heroData.ra);\n                  const defenceImage = this.getDefenceImage(heroData.ra);\n                  const healthImage = this.getHealthImage(heroData.ra);\n                  const healingImage = this.getHealingImage(heroData.ra);\n\n                  const skills = this.getHeroSkills(heroData.s);\n\n                  const heroCount = hero.count;\n\n                  totalCount = totalCount + heroCount;\n\n                  const plateCss = this.getPlateCss(heroData.ra);\n                  const skillBackgroundCss = this.getSkillCss(heroData.ra);\n                  const roleImageSrc = this.getRoleImage(heroData.rl);\n                  const raritycla = this.getRarityClass(heroData.ra);\n                  const rarityText = this.getRarityText(heroData.ra);\n                  const rarityClass = `hero-rarity ${raritycla}`;\n\n                  const bgClass = `bg-${hero.proto}`;\n\n                  const boxCss = `hero-plate card ${plateCss}`;\n                  const skillCss = `hero-skill card ${skillBackgroundCss}`;\n\n                  return (\n                    <Grid item xs={12} sm={6} md={3} lg={3} className=\"card\">\n                      <div\n                        className=\"hero-placeholder\"\n                        data-aos=\"flip-right\"\n                        data-aos-delay=\"50\"\n                        data-aos-anchor-placement=\"top-center\"\n                      >\n                        <div className=\"hero-role\">\n                          <img\n                            className=\"image-skill-small\"\n                            src={roleImageSrc}\n                            alt=\"hero\"\n                          />\n                        </div>\n                        <div className={rarityClass}>\n                          <Translate id={rarityText} />\n                        </div>\n                        <div className={boxCss}>\n                          <div className={bgClass}>\n                            <img\n                              className=\"image-hero-small\"\n                              src={heroImage}\n                              alt=\"hero\"\n                            />\n                          </div>\n\n                          <div className=\"space\" />\n                          <div className=\"hero-name-banner\">\n                            <Translate id={heroName} />\n                          </div>\n\n                          <div className=\"hero-stats-plate\">\n                            {heroData.hl > 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.a}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.d}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.he}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={3} sm={3} md={3} lg={3}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healingImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.hl}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n\n                            {heroData.hl === 0 && (\n                              <Grid container spacing={0}>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={attackImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.a}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={defenceImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.d}\n                                    </div>\n                                  </div>\n                                </Grid>\n                                <Grid item xs={4} sm={4} md={4} lg={4}>\n                                  <div className=\"hero-stats\">\n                                    <img\n                                      className=\"image-stats-small\"\n                                      src={healthImage}\n                                      alt=\"hero\"\n                                    />\n                                    <div className=\"hero-stats-title\">\n                                      {heroData.he}\n                                    </div>\n                                  </div>\n                                </Grid>\n                              </Grid>\n                            )}\n                          </div>\n\n                          <div className={skillCss}>\n                            <span className=\"hero-skill-banner\">\n                              <Translate id=\"hero.skill\" />\n                            </span>\n                            {skills.map(skill => {\n                              const imageSrc = `images/skill/${skill.id}.png`;\n                              const skillName = `skill.${skill.id}n`;\n                              const skillDesc = `skill.${skill.id}d`;\n                              return (\n                                <div className=\"hero-skill-item\">\n                                  <div className=\"icon\">\n                                    <img\n                                      className=\"image-skill-small\"\n                                      src={imageSrc}\n                                      alt=\"hero\"\n                                    />\n                                  </div>\n\n                                  <div className=\"description text-shadow\">\n                                    <div className=\"title text-shadow\">\n                                      <Translate id={skillName} />\n                                    </div>\n                                    <Translate id={skillDesc} />\n                                  </div>\n                                </div>\n                              );\n                            })}\n                            <div className=\"space\" />\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  );\n                });\n              })}\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AllHeroes));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport imgSS from '../images/soulstone.png';\nimport imgSSSprite from '../images/ss-spite.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass SoulStone extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/soul-stone');\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards\">\n          <div className=\"intro-card\">\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-gold\">\n                        <img\n                          src={imgSS}\n                          alt=<Translate id=\"general.soulstone\" />\n                          className=\"image-ss-large animate-flicker\"\n                        />{' '}\n                        <Translate id=\"general.soulstone\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <span className=\"glowing-gold\">\n                          <Translate id=\"general.soulstone\" />\n                        </span>{' '}\n                        <Translate id=\"soulstone.intro1\" />\n                      </div>\n\n                      <div className=\"space\" />\n                      <div>\n                        <span className=\"glowing-gold\">\n                          <Translate id=\"general.soulstone\" />\n                        </span>{' '}\n                        <Translate id=\"soulstone.intro2\" />{' '}\n                        <span className=\"glowing-blue\">TRX</span>,{' '}\n                        <Translate id=\"soulstone.intro3\" />.\n                        <ul className=\"left-align\">\n                          <li>\n                            {' '}\n                            <span className=\"glowing-pink\">20%</span>{' '}\n                            <Translate id=\"soulstone.intro4\" />{' '}\n                            <span className=\"glowing-blue\">TRX</span>{' '}\n                            <Translate id=\"soulstone.intro5\" />.\n                          </li>\n                          <li>\n                            {' '}\n                            <span className=\"glowing-pink\">20%</span>{' '}\n                            <Translate id=\"soulstone.intro6\" />.\n                          </li>\n                          <li>\n                            <Translate id=\"soulstone.intro7\" />\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <span className=\"glowing-gold\">\n                          <Translate id=\"general.soulstone\" />\n                        </span>{' '}\n                        <Translate id=\"soulstone.intro8\" />.\n                        <ul className=\"left-align\">\n                          <li>\n                            <span className=\"glowing-blue\">TRX</span>{' '}\n                            <Translate id=\"soulstone.intro9\" />\n                          </li>\n                          <li>\n                            {' '}\n                            <Translate id=\"soulstone.intro10\" />\n                          </li>\n                          <li>\n                            {' '}\n                            <Translate id=\"soulstone.intro11\" />\n                          </li>\n                          <li>\n                            {' '}\n                            <Translate id=\"soulstone.intro12\" />\n                          </li>\n                          <li>\n                            {' '}\n                            <Translate id=\"soulstone.intro13\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgSSSprite}\n                      className=\"image-sprite\"\n                      alt=\"sprite\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(SoulStone));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport imgArmor from '../images/weapon-armor-sprite.png';\nimport imgMinion from '../images/minion-sprite.png';\nimport imgAuction from '../images/auction.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass Items extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/items');\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards\">\n          <div className=\"intro-card\">\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-green\">\n                        <Translate id=\"items.weapons\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <Translate id=\"items.intro1\" />{' '}\n                        <span className=\"glowing-green\">\n                          <Translate id=\"general.common\" />\n                        </span>\n                        ,{' '}\n                        <span className=\"glowing-blue\">\n                          <Translate id=\"general.rare\" />\n                        </span>\n                        ,{' '}\n                        <span className=\"glowing-pink\">\n                          <Translate id=\"general.epic\" />\n                        </span>\n                        ,{' '}\n                        <span className=\"glowing-gold\">\n                          <Translate id=\"general.legendary\" />\n                        </span>\n                        ,{' '}\n                        <span className=\"glowing-red\">\n                          <Translate id=\"general.mythic\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <Translate id=\"items.intro2\" />\n                      </div>\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgArmor}\n                      alt=\"Get Hero\"\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgMinion}\n                      alt=\"Get Hero\"\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-green\">\n                        <Translate id=\"items.pets\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <Translate id=\"items.intro3\" />\n                      </div>\n                      <div className=\"space\" />\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n\n            <div className=\"card send-card\">\n              <Grid container spacing={24}>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div className=\"buy-placeholder\">\n                    <div>\n                      <span className=\"large-text glowing-green\">\n                        <Translate id=\"items.auctionhouse\" />\n                      </span>\n                    </div>\n                    <div className=\"space\" />\n                    <div className=\"left-align\">\n                      <div>\n                        <Translate id=\"items.intro4\" />{' '}\n                        <span className=\"glowing-blue\">\n                          <Translate id=\"presale.intro4\" />\n                        </span>{' '}\n                        <Translate id=\"items.intro5\" />{' '}\n                        <span className=\"glowing-blue\">TRX</span>{' '}\n                      </div>\n                      <div className=\"space\" />\n                    </div>\n\n                    <div className=\"space\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                  <div\n                    className=\"image-placeholder\"\n                    data-aos=\"zoom-in\"\n                    data-aos-delay=\"50\"\n                    data-aos-anchor-placement=\"top-center\"\n                  >\n                    <img\n                      src={imgAuction}\n                      alt=\"Auction\"\n                      className=\"image-sprite\"\n                    />\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(Items));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport imgInstance from '../images/instance-sprite.png';\nimport imgRaid from '../images/raid-sprite.png';\nimport imgSS from '../images/soulstone.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PVE extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/pve');\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={6} lg={6}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\">\n                      <Translate id=\"pve.instance\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pve.intro1\" />\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6} lg={6}>\n                <div\n                  className=\"image-placeholder\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgInstance}\n                    alt=<Translate id=\"pve.instance\" />\n                    className=\"image-sprite\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12} md={6} lg={6}>\n                <div\n                  className=\"image-placeholder\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img src={imgRaid} alt=\"Get Hero\" className=\"image-sprite\" />\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6} lg={6}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\">\n                      <Translate id=\"pve.raid\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pve.intro2\" />{' '}\n                    <img\n                      src={imgSS}\n                      alt=<Translate id=\"general.soulstone\" />\n                      className=\"image-ss-small\"\n                    />\n                    <span className=\"glowing-gold\">\n                      <Translate id=\"general.soulstone\" />\n                    </span>\n                  </div>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(PVE));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport imgPVP from '../images/pvp-sprite.png';\nimport imgBattleground from '../images/battleground.png';\nimport imgSS from '../images/soulstone.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass PVP extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/pvp');\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\">\n                      <Translate id=\"pvp.arena\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pvp.intro1\" />\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgPVP}\n                    alt=\"Instance\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\">\n                      <Translate id=\"pvp.battleground\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"pvp.intro2\" />{' '}\n                    <img\n                      src={imgSS}\n                      alt=\"Soul Stone\"\n                      className=\"image-ss-small\"\n                    />\n                    <span className=\"glowing-gold\">\n                      <Translate id=\"general.soulstone\" />\n                    </span>\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgBattleground}\n                    alt=\"Get Hero\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(PVP));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport Grid from '@material-ui/core/Grid/Grid';\n\nimport ReactGA from 'react-ga';\n\nimport imgBlacksmith from '../images/blacksmith-sprite.png';\nimport imgAlchemy from '../images/alchemy-sprite.png';\nimport imgTailoring from '../images/tailoring-sprite.png';\nimport imgEngineering from '../images/engineering-sprite.png';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass Professions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/professions');\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"cards intro-card\">\n          <div className=\"card send-card\">\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-green\">\n                      <Translate id=\"professions.blacksmith\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro1\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgBlacksmith}\n                    alt=\"Blacksmith\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-pink\">\n                      <Translate id=\"professions.alchemy\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro2\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgAlchemy}\n                    alt=\"Alchemy\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-gold\">\n                      <Translate id=\"professions.tailoring\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro3\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgTailoring}\n                    alt=\"Tailoring\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div className=\"buy-placeholder\">\n                  <div>\n                    <span className=\"large-text glowing-red\">\n                      <Translate id=\"professions.engineering\" />\n                    </span>\n                  </div>\n                  <div className=\"space\" />\n                  <div>\n                    <Translate id=\"professions.intro4\" />\n                    <br />\n                    <Translate id=\"professions.intro5\" />\n                  </div>\n                </div>\n              </Grid>\n\n              <Grid item xs={12}>\n                <div\n                  className=\"image-placeholder-full-width\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"50\"\n                  data-aos-anchor-placement=\"top-center\"\n                >\n                  <img\n                    src={imgEngineering}\n                    alt=\"Engineering\"\n                    className=\"image-sprite-large\"\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(Professions));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  SCREEN_PRE_SALE,\n  SCREEN_MY_ACCOUNT,\n  SCREEN_MY_HEROES,\n  SCREEN_SOUL_STONE,\n  SCREEN_ALL_HEROES,\n  SCREEN_ITEMS,\n  SCREEN_PVE,\n  SCREEN_PVP,\n  SCREEN_PROFESSIONS,\n} from '../actions/app';\nimport PreSale from './PreSale';\nimport MyHeroes from './MyHeroes';\nimport MyAccount from './MyAccount';\nimport Heroes from './Heroes';\nimport SoulStone from './SoulStone';\nimport Items from './Items';\nimport PVE from './PVE';\nimport PVP from './PVP';\nimport Professions from './Professions';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n    case SCREEN_PRE_SALE:\n      return <PreSale />;\n    case SCREEN_MY_HEROES:\n      return <MyHeroes />;\n    case SCREEN_ALL_HEROES:\n      return <Heroes />;\n    case SCREEN_MY_ACCOUNT:\n      return <MyAccount />;\n    case SCREEN_ITEMS:\n      return <Items />;\n    case SCREEN_SOUL_STONE:\n      return <SoulStone />;\n    case SCREEN_PVE:\n      return <PVE />;\n    case SCREEN_PVP:\n      return <PVP />;\n    case SCREEN_PROFESSIONS:\n      return <Professions />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../translations/site.json';\n\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nimport { showSnackbar } from '../actions/snackbar';\n\nimport customTheme from './customTheme';\n\nimport { setScreen } from '../actions/app';\n\nAOS.init({\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n});\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.props.addTranslation(siteTranslations);\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"glowing-pink\">\n            &copy; 2019 TronLegend{' '}\n            <span className=\"social\">\n              <a\n                href=\"https://twitter.com/TronLegendGames\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <img\n                  src=\"images/social/twitter.png\"\n                  className=\"image-flag\"\n                  alt=\"Twitter\"\n                />\n              </a>\n            </span>\n            <span className=\"social\">\n              <a\n                href=\"https://medium.com/@tronlegend\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <img\n                  src=\"images/social/medium.png\"\n                  className=\"image-flag\"\n                  alt=\"Medium\"\n                />\n              </a>\n            </span>\n            <span className=\"social\">\n              <a\n                href=\"https://www.youtube.com/channel/UCuPklhFNpN0r2ZACGy8hSBA\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <img\n                  src=\"images/social/youtube.png\"\n                  className=\"image-flag\"\n                  alt=\"Youtube\"\n                />\n              </a>\n            </span>\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport ReactGA from 'react-ga';\n\nimport { setScreen, SCREEN_PRE_SALE } from '../actions/app';\nimport customTheme from './customTheme';\nimport AppBar from './WalletAppBar';\nimport GlobalStats from './GlobalStats';\nimport Snackbar from './WalletSnackbar';\nimport RoutingScreen from './RoutingScreen';\nimport Footer from './Footer';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initWallet();\n    this.initReactGA();\n  }\n\n  initWallet = () => {\n    const { setScreen } = this.props;\n    setScreen(SCREEN_PRE_SALE);\n  };\n\n  initReactGA = () => {\n    ReactGA.initialize('UA-134341340-1');\n    ReactGA.pageview('/home');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"main-body\">\n            <GlobalStats />\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}